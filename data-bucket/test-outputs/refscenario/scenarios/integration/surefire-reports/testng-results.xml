<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="541" passed="541">
  <reporter-output>
  </reporter-output>
  <suite name="ApiManager-features-test-suite" duration-ms="6088736" started-at="2018-11-05T06:42:12Z" finished-at="2018-11-05T08:23:40Z">
    <groups>
      <group name="webapp">
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AddEditRemoveRESTResourceTestCase.testInvokeGETResource()" name="testInvokeGETResource" class="org.wso2.am.integration.tests.api.lifecycle.AddEditRemoveRESTResourceTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AddEditRemoveRESTResourceTestCase.testInvokePOSTResourceBeforeAddingPOSTResource()" name="testInvokePOSTResourceBeforeAddingPOSTResource" class="org.wso2.am.integration.tests.api.lifecycle.AddEditRemoveRESTResourceTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AddEditRemoveRESTResourceTestCase.testInvokePOSTAndGETResourceAfterAddingPOSTResource()" name="testInvokePOSTAndGETResourceAfterAddingPOSTResource" class="org.wso2.am.integration.tests.api.lifecycle.AddEditRemoveRESTResourceTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AddEditRemoveRESTResourceTestCase.testInvokePOSTAndGetResourceAfterAddingURLPattern()" name="testInvokePOSTAndGetResourceAfterAddingURLPattern" class="org.wso2.am.integration.tests.api.lifecycle.AddEditRemoveRESTResourceTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AddEditRemoveRESTResourceTestCase.testInvokeGETAndPOSTResourceAfterRemovePOSTResource()" name="testInvokeGETAndPOSTResourceAfterRemovePOSTResource" class="org.wso2.am.integration.tests.api.lifecycle.AddEditRemoveRESTResourceTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.PluggableVersioningStrategyTestCase.testPluggableVersioningStratergy()" name="testPluggableVersioningStratergy" class="org.wso2.am.integration.tests.api.lifecycle.PluggableVersioningStrategyTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase.testApplicationCreation(java.lang.String, java.lang.String, java.lang.String)" name="testApplicationCreation" class="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase.getAllCreatedApplications()" name="getAllCreatedApplications" class="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase.testAlreadyCreatedApplication()" name="testAlreadyCreatedApplication" class="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase.testApplicationCreationForInvalidData(java.lang.String, java.lang.String, java.lang.String)" name="testApplicationCreationForInvalidData" class="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase.testApplicationCreationWithCustomAttributes(java.lang.String, java.lang.String, java.lang.String, java.lang.String)" name="testApplicationCreationWithCustomAttributes" class="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase.testRemoveApplication()" name="testRemoveApplication" class="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase.testUpdateApplication()" name="testUpdateApplication" class="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIM684GenerateApplicationKeyTestCase.generateApplicationKeyWithoutScope()" name="generateApplicationKeyWithoutScope" class="org.wso2.am.integration.tests.other.APIM684GenerateApplicationKeyTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIM710AllSubscriptionsByApplicationTestCase.testAllSubscriptionsByAppName()" name="testAllSubscriptionsByAppName" class="org.wso2.am.integration.tests.other.APIM710AllSubscriptionsByApplicationTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIM710AllSubscriptionsByApplicationTestCase.testRemoveSubscriptionByAppId()" name="testRemoveSubscriptionByAppId" class="org.wso2.am.integration.tests.other.APIM710AllSubscriptionsByApplicationTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIM710AllSubscriptionsByApplicationTestCase.testRemoveSubscriptionByAppName()" name="testRemoveSubscriptionByAppName" class="org.wso2.am.integration.tests.other.APIM710AllSubscriptionsByApplicationTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIM714GetAllDocumentationTestCase.testAllDocuments()" name="testAllDocuments" class="org.wso2.am.integration.tests.other.APIM714GetAllDocumentationTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.CopyNewVersionTestCase.copyApiNewVersion()" name="copyApiNewVersion" class="org.wso2.am.integration.tests.other.CopyNewVersionTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.NewCopyWithDefaultVersion.setDefaultVersionToNewcopy()" name="setDefaultVersionToNewcopy" class="org.wso2.am.integration.tests.other.NewCopyWithDefaultVersion"/>
        <method signature="org.wso2.am.integration.tests.other.SameVersionAPITestCase.copySameVersion()" name="copySameVersion" class="org.wso2.am.integration.tests.other.SameVersionAPITestCase"/>
      </group>
      <group name="throttling">
        <method signature="org.wso2.am.integration.tests.throttling.APIThrottlingTestCase.testAPIThrottling_1()" name="testAPIThrottling_1" class="org.wso2.am.integration.tests.throttling.APIThrottlingTestCase"/>
      </group>
      <group name="noRestart">
        <method signature="org.wso2.am.integration.tests.other.APIM4312NPEAfterRequestTimeoutTestCase.nullPointerAfterTimeoutTest()" name="nullPointerAfterTimeoutTest" class="org.wso2.am.integration.tests.other.APIM4312NPEAfterRequestTimeoutTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIStateChangeWorkflowTestCase.testAPIStateChangeAndApproveWorkflow()" name="testAPIStateChangeAndApproveWorkflow" class="org.wso2.am.integration.tests.other.APIStateChangeWorkflowTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIStateChangeWorkflowTestCase.testAPIStateChangeAndRejectWorkflow()" name="testAPIStateChangeAndRejectWorkflow" class="org.wso2.am.integration.tests.other.APIStateChangeWorkflowTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIStateChangeWorkflowTestCase.testWorkflowCallbackRestAPI()" name="testWorkflowCallbackRestAPI" class="org.wso2.am.integration.tests.other.APIStateChangeWorkflowTestCase"/>
        <method signature="org.wso2.am.integration.tests.json.ESBJAVA3380TestCase.jsonToXmlTestCase()" name="jsonToXmlTestCase" class="org.wso2.am.integration.tests.json.ESBJAVA3380TestCase"/>
      </group>
      <group name="wso2.am">
        <method signature="org.wso2.am.integration.tests.api.lifecycle.ChangeAPIEndPointURLTestCase.testAPIInvocationBeforeChangeTheEndPointURL()" name="testAPIInvocationBeforeChangeTheEndPointURL" class="org.wso2.am.integration.tests.api.lifecycle.ChangeAPIEndPointURLTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.ChangeAPIEndPointURLTestCase.testEditEndPointURL()" name="testEditEndPointURL" class="org.wso2.am.integration.tests.api.lifecycle.ChangeAPIEndPointURLTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.ChangeAPIEndPointURLTestCase.testInvokeAPIAfterChangeAPIEndPointURLWithNewEndPointURL()" name="testInvokeAPIAfterChangeAPIEndPointURLWithNewEndPointURL" class="org.wso2.am.integration.tests.api.lifecycle.ChangeAPIEndPointURLTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase.copyAPILifeCycleTestCase()" name="copyAPILifeCycleTestCase" class="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase.copyAndDepricateAPILifeCycleTestCase()" name="copyAndDepricateAPILifeCycleTestCase" class="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase.otherAPILifeCycleStatesTestCase()" name="otherAPILifeCycleStatesTestCase" class="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase.testAPIApplicationLifeCycleITestCase()" name="testAPIApplicationLifeCycleITestCase" class="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase.testAPIVisibilityTestCase()" name="testAPIVisibilityTestCase" class="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase.testApplicationsInStoreTestCase()" name="testApplicationsInStoreTestCase" class="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase.testInvalidLoginAsPublisherTestCase()" name="testInvalidLoginAsPublisherTestCase" class="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase.testInvalidLoginAsSubscriberTestCase()" name="testInvalidLoginAsSubscriberTestCase" class="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase.testInvalidLoginAsTenantSubscriberTestCase()" name="testInvalidLoginAsTenantSubscriberTestCase" class="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase.testLoginToStoreTestCase()" name="testLoginToStoreTestCase" class="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIAccessibilityOfPublishedOldAPIAndPublishedCopyAPITestCase.testCopyAPI()" name="testCopyAPI" class="org.wso2.am.integration.tests.api.lifecycle.APIAccessibilityOfPublishedOldAPIAndPublishedCopyAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIAccessibilityOfPublishedOldAPIAndPublishedCopyAPITestCase.testPublishCopiedAPI()" name="testPublishCopiedAPI" class="org.wso2.am.integration.tests.api.lifecycle.APIAccessibilityOfPublishedOldAPIAndPublishedCopyAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIAccessibilityOfPublishedOldAPIAndPublishedCopyAPITestCase.testAvailabilityOfOldAndNewAPIVersionsInStore()" name="testAvailabilityOfOldAndNewAPIVersionsInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIAccessibilityOfPublishedOldAPIAndPublishedCopyAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIAccessibilityOfPublishedOldAPIAndPublishedCopyAPITestCase.testSubscribeOldVersion()" name="testSubscribeOldVersion" class="org.wso2.am.integration.tests.api.lifecycle.APIAccessibilityOfPublishedOldAPIAndPublishedCopyAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIAccessibilityOfPublishedOldAPIAndPublishedCopyAPITestCase.testSubscribeNewVersion()" name="testSubscribeNewVersion" class="org.wso2.am.integration.tests.api.lifecycle.APIAccessibilityOfPublishedOldAPIAndPublishedCopyAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIAccessibilityOfPublishedOldAPIAndPublishedCopyAPITestCase.testAccessibilityOfPublishedOldAPIAndPublishedCopyAPI()" name="testAccessibilityOfPublishedOldAPIAndPublishedCopyAPI" class="org.wso2.am.integration.tests.api.lifecycle.APIAccessibilityOfPublishedOldAPIAndPublishedCopyAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIInvocationWithSimilarResourcesAndDifferentVerbsTestCase.testInvokeAllResources()" name="testInvokeAllResources" class="org.wso2.am.integration.tests.api.lifecycle.APIInvocationWithSimilarResourcesAndDifferentVerbsTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIMANAGER5337SubscriptionRetainTestCase.testAPIErrorResponse()" name="testAPIErrorResponse" class="org.wso2.am.integration.tests.api.lifecycle.APIMANAGER5337SubscriptionRetainTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIPublishingAndVisibilityInStoreTestCase.testAvailabilityOfAPIInPublisher()" name="testAvailabilityOfAPIInPublisher" class="org.wso2.am.integration.tests.api.lifecycle.APIPublishingAndVisibilityInStoreTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIPublishingAndVisibilityInStoreTestCase.testVisibilityOfAPIInStoreBeforePublishing()" name="testVisibilityOfAPIInStoreBeforePublishing" class="org.wso2.am.integration.tests.api.lifecycle.APIPublishingAndVisibilityInStoreTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIPublishingAndVisibilityInStoreTestCase.testAPIPublishing()" name="testAPIPublishing" class="org.wso2.am.integration.tests.api.lifecycle.APIPublishingAndVisibilityInStoreTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIPublishingAndVisibilityInStoreTestCase.testVisibilityOfAPIInStoreAfterPublishing()" name="testVisibilityOfAPIInStoreAfterPublishing" class="org.wso2.am.integration.tests.api.lifecycle.APIPublishingAndVisibilityInStoreTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APITagVisibilityByRoleTestCase.testAPICreationWithVisibility()" name="testAPICreationWithVisibility" class="org.wso2.am.integration.tests.api.lifecycle.APITagVisibilityByRoleTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APITagVisibilityByRoleTestCase.testAPITagVisibilityAnonymousUser()" name="testAPITagVisibilityAnonymousUser" class="org.wso2.am.integration.tests.api.lifecycle.APITagVisibilityByRoleTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APITagVisibilityByRoleTestCase.testAPITagVisibilityAuthorisedUser()" name="testAPITagVisibilityAuthorisedUser" class="org.wso2.am.integration.tests.api.lifecycle.APITagVisibilityByRoleTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForCreatorInPublisher()" name="testVisibilityForCreatorInPublisher" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForCreatorInStore()" name="testVisibilityForCreatorInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForAdminInSameDomainInPublisher()" name="testVisibilityForAdminInSameDomainInPublisher" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForAdminInSameDomainInStore()" name="testVisibilityForAdminInSameDomainInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForAnotherUserInSameDomainInPublisher()" name="testVisibilityForAnotherUserInSameDomainInPublisher" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForAnotherUserInSameDomainInStore()" name="testVisibilityForAnotherUserInSameDomainInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForAnotherUserInOtherDomainInPublisher()" name="testVisibilityForAnotherUserInOtherDomainInPublisher" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForAnotherUserInOtherDomainInStore()" name="testVisibilityForAnotherUserInOtherDomainInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForAdminInOtherDomainInPublisher()" name="testVisibilityForAdminInOtherDomainInPublisher" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForAdminInOtherDomainInStore()" name="testVisibilityForAdminInOtherDomainInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForAnonymousUserInSameDomainInStore()" name="testVisibilityForAnonymousUserInSameDomainInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForAnonymousUserInOtherDomainInStore()" name="testVisibilityForAnonymousUserInOtherDomainInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForCreatorInPublisher()" name="testVisibilityForCreatorInPublisher" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForCreatorInStore()" name="testVisibilityForCreatorInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForAdminInSameDomainInPublisher()" name="testVisibilityForAdminInSameDomainInPublisher" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForAdminInSameDomainInStore()" name="testVisibilityForAdminInSameDomainInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForAnotherUserInSameDomainInPublisher()" name="testVisibilityForAnotherUserInSameDomainInPublisher" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForAnotherUserInSameDomainInStore()" name="testVisibilityForAnotherUserInSameDomainInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForAnotherUserInOtherDomainInPublisher()" name="testVisibilityForAnotherUserInOtherDomainInPublisher" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForAnotherUserInOtherDomainInStore()" name="testVisibilityForAnotherUserInOtherDomainInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForAdminInOtherDomainInPublisher()" name="testVisibilityForAdminInOtherDomainInPublisher" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForAdminInOtherDomainInStore()" name="testVisibilityForAdminInOtherDomainInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForAnonymousUserInOtherDomainInStore()" name="testVisibilityForAnonymousUserInOtherDomainInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForAnonymousUserInSameDomainInStore()" name="testVisibilityForAnonymousUserInSameDomainInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForCreatorInPublisher()" name="testVisibilityForCreatorInPublisher" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAdminUserWithAdminAndSubscriberRoleInSameDomainInStore()" name="testVisibilityForAdminUserWithAdminAndSubscriberRoleInSameDomainInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAnotherUserWithAdminAndSubscriberRoleInSameDomainInPublisher()" name="testVisibilityForAnotherUserWithAdminAndSubscriberRoleInSameDomainInPublisher" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAnotherUserWithAdminAndSubscriberRoleInSameDomainInStore()" name="testVisibilityForAnotherUserWithAdminAndSubscriberRoleInSameDomainInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAnotherUserWithAdminAndSubscriberRoleInOtherDomainInPublisher()" name="testVisibilityForAnotherUserWithAdminAndSubscriberRoleInOtherDomainInPublisher" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAnotherUserWithAdminAndSubscriberRoleInOtherDomainInStore()" name="testVisibilityForAnotherUserWithAdminAndSubscriberRoleInOtherDomainInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAdminWithAdminAndSubscriberRoleInOtherDomainInPublisher()" name="testVisibilityForAdminWithAdminAndSubscriberRoleInOtherDomainInPublisher" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAdminWithAdminAndSubscriberRoleInOtherDomainInStore()" name="testVisibilityForAdminWithAdminAndSubscriberRoleInOtherDomainInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAnotherUserWithSubscriberRoleInSameDomainInStore()" name="testVisibilityForAnotherUserWithSubscriberRoleInSameDomainInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAnotherUserWithSubscriberRoleInOtherDomainInStore()" name="testVisibilityForAnotherUserWithSubscriberRoleInOtherDomainInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAnonymousUserInOtherDomainInStore()" name="testVisibilityForAnonymousUserInOtherDomainInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAnonymousUserInSameDomainInStore()" name="testVisibilityForAnonymousUserInSameDomainInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForCreatorInStore()" name="testVisibilityForCreatorInStore" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase.testDirectLinkAnonymous()" name="testDirectLinkAnonymous" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase.testDirectLink()" name="testDirectLink" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase.testDirectLinkWithoutRestrictedRoleUser()" name="testDirectLinkWithoutRestrictedRoleUser" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase.testAPICreationInTenant()" name="testAPICreationInTenant" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase.testDirectLinkInTenantAnonymous()" name="testDirectLinkInTenantAnonymous" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase.testDirectLinkInTenant()" name="testDirectLinkInTenant" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase.testDirectLinkInTenantWithoutRestrictedRoleUser()" name="testDirectLinkInTenantWithoutRestrictedRoleUser" class="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfBlockAPITestCase.testInvokeAPIBeforeChangeAPILifecycleToBlock()" name="testInvokeAPIBeforeChangeAPILifecycleToBlock" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfBlockAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfBlockAPITestCase.testChangeAPILifecycleToBlock()" name="testChangeAPILifecycleToBlock" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfBlockAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfBlockAPITestCase.testInvokeAPIAfterChangeAPILifecycleToBlock()" name="testInvokeAPIAfterChangeAPILifecycleToBlock" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfBlockAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase.testSubscribeOldVersionBeforeDeprecate()" name="testSubscribeOldVersionBeforeDeprecate" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase.testSubscribeNewVersion()" name="testSubscribeNewVersion" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase.testDeprecateOldVersion()" name="testDeprecateOldVersion" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase.testVisibilityOfOldAPIInStoreAfterDeprecate()" name="testVisibilityOfOldAPIInStoreAfterDeprecate" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase.testVisibilityOfNewAPIInStore()" name="testVisibilityOfNewAPIInStore" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase.testSubscribeOldVersionAfterDeprecate()" name="testSubscribeOldVersionAfterDeprecate" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase.testAccessibilityOfDeprecateOldAPIAndPublishedCopyAPI()" name="testAccessibilityOfDeprecateOldAPIAndPublishedCopyAPI" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithOutReSubscriptionTestCase.testSubscriptionOfOldAPI()" name="testSubscriptionOfOldAPI" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithOutReSubscriptionTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithOutReSubscriptionTestCase.testPublishCopiedAPIWithOutReSubscriptionRequired()" name="testPublishCopiedAPIWithOutReSubscriptionRequired" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithOutReSubscriptionTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithOutReSubscriptionTestCase.testInvokeNewAPIWithoutSubscribeTheNewVersion()" name="testInvokeNewAPIWithoutSubscribeTheNewVersion" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithOutReSubscriptionTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithReSubscriptionTestCase.testSubscriptionOfOldAPI()" name="testSubscriptionOfOldAPI" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithReSubscriptionTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithReSubscriptionTestCase.testPublishCopiedAPIWithReSubscriptionRequired()" name="testPublishCopiedAPIWithReSubscriptionRequired" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithReSubscriptionTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithReSubscriptionTestCase.testInvokeOldAPIBeforeSubscribeTheNewVersion()" name="testInvokeOldAPIBeforeSubscribeTheNewVersion" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithReSubscriptionTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithReSubscriptionTestCase.testInvokeNewAPIBeforeSubscribeTheNewVersion()" name="testInvokeNewAPIBeforeSubscribeTheNewVersion" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithReSubscriptionTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithReSubscriptionTestCase.testSubscribeTheNewVersion()" name="testSubscribeTheNewVersion" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithReSubscriptionTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithReSubscriptionTestCase.testInvokeNewAPIAfterSubscribeTheNewVersion()" name="testInvokeNewAPIAfterSubscribeTheNewVersion" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithReSubscriptionTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfRetireAPITestCase.testInvokeAPIBeforeChangeAPILifecycleToRetired()" name="testInvokeAPIBeforeChangeAPILifecycleToRetired" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfRetireAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfRetireAPITestCase.testChangeAPILifecycleToDepricated()" name="testChangeAPILifecycleToDepricated" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfRetireAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfRetireAPITestCase.testChangeAPILifecycleToRetired()" name="testChangeAPILifecycleToRetired" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfRetireAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfRetireAPITestCase.testAvailabilityOfRetiredAPIInStore()" name="testAvailabilityOfRetiredAPIInStore" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfRetireAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfRetireAPITestCase.testInvokeAPIAfterChangeAPILifecycleToRetired()" name="testInvokeAPIAfterChangeAPILifecycleToRetired" class="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfRetireAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.ChangeAPITagsTestCase.testFilterByTagsBeforeTagChange()" name="testFilterByTagsBeforeTagChange" class="org.wso2.am.integration.tests.api.lifecycle.ChangeAPITagsTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.ChangeAPITagsTestCase.testUpdateTagsAndFilterByTags()" name="testUpdateTagsAndFilterByTags" class="org.wso2.am.integration.tests.api.lifecycle.ChangeAPITagsTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.ChangeAuthTypeOfResourceTestCase.testInvokeResourceWithAuthTypeApplicationAndApplicationUser()" name="testInvokeResourceWithAuthTypeApplicationAndApplicationUser" class="org.wso2.am.integration.tests.api.lifecycle.ChangeAuthTypeOfResourceTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.ChangeAuthTypeOfResourceTestCase.testInvokeResourceWithAuthTypeApplication()" name="testInvokeResourceWithAuthTypeApplication" class="org.wso2.am.integration.tests.api.lifecycle.ChangeAuthTypeOfResourceTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.ChangeAuthTypeOfResourceTestCase.testInvokeGETResourceWithAuthTypeApplicationUser()" name="testInvokeGETResourceWithAuthTypeApplicationUser" class="org.wso2.am.integration.tests.api.lifecycle.ChangeAuthTypeOfResourceTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.ChangeAuthTypeOfResourceTestCase.testInvokeGETResourceWithAuthTypeNone()" name="testInvokeGETResourceWithAuthTypeNone" class="org.wso2.am.integration.tests.api.lifecycle.ChangeAuthTypeOfResourceTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.ChangeEndPointSecurityOfAPITestCase.testInvokeGETResourceWithSecuredEndPointPasswordOnlyNumbersAndLetters()" name="testInvokeGETResourceWithSecuredEndPointPasswordOnlyNumbersAndLetters" class="org.wso2.am.integration.tests.api.lifecycle.ChangeEndPointSecurityOfAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.ChangeEndPointSecurityOfAPITestCase.testInvokeGETResourceWithSecuredEndPointComplexPassword()" name="testInvokeGETResourceWithSecuredEndPointComplexPassword" class="org.wso2.am.integration.tests.api.lifecycle.ChangeEndPointSecurityOfAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.CustomLifeCycleTestCase.testCustomLifeCycle()" name="testCustomLifeCycle" class="org.wso2.am.integration.tests.api.lifecycle.CustomLifeCycleTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.EditAPIAndCheckUpdatedInformationTestCase.testEditAPIInformation()" name="testEditAPIInformation" class="org.wso2.am.integration.tests.api.lifecycle.EditAPIAndCheckUpdatedInformationTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.EditAPIAndCheckUpdatedInformationTestCase.testUpdatedAPIInformationFromAPIPublisher()" name="testUpdatedAPIInformationFromAPIPublisher" class="org.wso2.am.integration.tests.api.lifecycle.EditAPIAndCheckUpdatedInformationTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.EditAPIContextAndCheckAccessibilityTestCase.testInvokeAPIBeforeChangeAPIContext()" name="testInvokeAPIBeforeChangeAPIContext" class="org.wso2.am.integration.tests.api.lifecycle.EditAPIContextAndCheckAccessibilityTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.EditAPIContextAndCheckAccessibilityTestCase.testEditAPIContext()" name="testEditAPIContext" class="org.wso2.am.integration.tests.api.lifecycle.EditAPIContextAndCheckAccessibilityTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.EditAPIContextAndCheckAccessibilityTestCase.testInvokeAPIAfterChangeAPIContextWithOldContext()" name="testInvokeAPIAfterChangeAPIContextWithOldContext" class="org.wso2.am.integration.tests.api.lifecycle.EditAPIContextAndCheckAccessibilityTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.EditAPIContextAndCheckAccessibilityTestCase.testInvokeAPIAfterChangeAPIContextWithNewContext()" name="testInvokeAPIAfterChangeAPIContextWithNewContext" class="org.wso2.am.integration.tests.api.lifecycle.EditAPIContextAndCheckAccessibilityTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.NewVersionUpdateTestCase.testAPINewVersionCreation()" name="testAPINewVersionCreation" class="org.wso2.am.integration.tests.api.lifecycle.NewVersionUpdateTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.NewVersionUpdateTestCase.testNewVersionAPIUpdate()" name="testNewVersionAPIUpdate" class="org.wso2.am.integration.tests.api.lifecycle.NewVersionUpdateTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.RegistryLifeCycleInclusionTest.testAPIInfoLifecycleTabForPublishedAPI()" name="testAPIInfoLifecycleTabForPublishedAPI" class="org.wso2.am.integration.tests.api.lifecycle.RegistryLifeCycleInclusionTest"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.RegistryLifeCycleInclusionTest.testChecklistItemsVisibility()" name="testChecklistItemsVisibility" class="org.wso2.am.integration.tests.api.lifecycle.RegistryLifeCycleInclusionTest"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.RegistryLifeCycleInclusionTest.testLCStateChengeVisibility()" name="testLCStateChengeVisibility" class="org.wso2.am.integration.tests.api.lifecycle.RegistryLifeCycleInclusionTest"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.UsersAndDocsInAPIOverviewTestCase.testNumberOfUsersInAPIOverview()" name="testNumberOfUsersInAPIOverview" class="org.wso2.am.integration.tests.api.lifecycle.UsersAndDocsInAPIOverviewTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.UsersAndDocsInAPIOverviewTestCase.testUsersInformationInUserTabInAPIOverview()" name="testUsersInformationInUserTabInAPIOverview" class="org.wso2.am.integration.tests.api.lifecycle.UsersAndDocsInAPIOverviewTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.UsersAndDocsInAPIOverviewTestCase.testDocInformationInDocsTabInAPIOverview()" name="testDocInformationInDocsTabInAPIOverview" class="org.wso2.am.integration.tests.api.lifecycle.UsersAndDocsInAPIOverviewTestCase"/>
        <method signature="org.wso2.am.integration.tests.header.CORSHeadersTestCase.CheckCORSHeadersInPreFlightResponse()" name="CheckCORSHeadersInPreFlightResponse" class="org.wso2.am.integration.tests.header.CORSHeadersTestCase"/>
        <method signature="org.wso2.am.integration.tests.header.CORSHeadersTestCase.CheckCORSHeadersInResponse()" name="CheckCORSHeadersInResponse" class="org.wso2.am.integration.tests.header.CORSHeadersTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.ScriptMediatorTestCase.testScriptMediatorWithNullObject()" name="testScriptMediatorWithNullObject" class="org.wso2.am.integration.tests.other.ScriptMediatorTestCase"/>
        <method signature="org.wso2.am.integration.tests.rest.MalformedRequestTest.testMalformedPostWithMessageBuilding()" name="testMalformedPostWithMessageBuilding" class="org.wso2.am.integration.tests.rest.MalformedRequestTest"/>
        <method signature="org.wso2.am.integration.tests.sequence.DefaultEndpointTestCase.testAPIInvocationAfterAddingDynamicEndpoint()" name="testAPIInvocationAfterAddingDynamicEndpoint" class="org.wso2.am.integration.tests.sequence.DefaultEndpointTestCase"/>
        <method signature="org.wso2.am.integration.tests.token.InvalidTokenTestCase.testAPIAccessWithInvalidToken()" name="testAPIAccessWithInvalidToken" class="org.wso2.am.integration.tests.token.InvalidTokenTestCase"/>
        <method signature="org.wso2.am.integration.tests.header.CORSAccessControlAllowCredentialsHeaderTestCase.CheckAccessControlAllowCredentialsHeadersWithAnyOrigin()" name="CheckAccessControlAllowCredentialsHeadersWithAnyOrigin" class="org.wso2.am.integration.tests.header.CORSAccessControlAllowCredentialsHeaderTestCase"/>
        <method signature="org.wso2.am.integration.tests.header.CORSAccessControlAllowCredentialsHeaderTestCase.CheckAccessControlAllowCredentialsHeadersWithSpecificOrigin()" name="CheckAccessControlAllowCredentialsHeadersWithSpecificOrigin" class="org.wso2.am.integration.tests.header.CORSAccessControlAllowCredentialsHeaderTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.InvokeAPIUsingOldThrottlingWithWSClient.testInvokingAPIWithOldThrottleUsingWSClient()" name="testInvokingAPIWithOldThrottleUsingWSClient" class="org.wso2.am.integration.tests.api.lifecycle.InvokeAPIUsingOldThrottlingWithWSClient"/>
        <method signature="org.wso2.am.integration.tests.header.APIMANAGER3614DuplicateTransferEncodingHeaderTestCase.testDuplicateTransferEncodingPropertyTest()" name="testDuplicateTransferEncodingPropertyTest" class="org.wso2.am.integration.tests.header.APIMANAGER3614DuplicateTransferEncodingHeaderTestCase"/>
        <method signature="org.wso2.am.integration.tests.header.ESBJAVA3447PreserveCharsetInContentTypeTestCase.testPreserveCharsetInContentTypeHeader()" name="testPreserveCharsetInContentTypeHeader" class="org.wso2.am.integration.tests.header.ESBJAVA3447PreserveCharsetInContentTypeTestCase"/>
        <method signature="org.wso2.am.integration.tests.hostobject.HostObjectTestCase.testAPIProvider()" name="testAPIProvider" class="org.wso2.am.integration.tests.hostobject.HostObjectTestCase"/>
        <method signature="org.wso2.am.integration.tests.hostobject.HostObjectTestCase.testApplication()" name="testApplication" class="org.wso2.am.integration.tests.hostobject.HostObjectTestCase"/>
        <method signature="org.wso2.am.integration.tests.hostobject.HostObjectTestCase.testApplicationOperations()" name="testApplicationOperations" class="org.wso2.am.integration.tests.hostobject.HostObjectTestCase"/>
        <method signature="org.wso2.am.integration.tests.hostobject.HostObjectTestCase.testHostObjectTestCase()" name="testHostObjectTestCase" class="org.wso2.am.integration.tests.hostobject.HostObjectTestCase"/>
        <method signature="org.wso2.am.integration.tests.jwt.JWTTestCase.testEnableJWTAndClaims()" name="testEnableJWTAndClaims" class="org.wso2.am.integration.tests.jwt.JWTTestCase"/>
        <method signature="org.wso2.am.integration.tests.jwt.JWTTestCase.testAPIAccessWhenJWTCachingEnabledTestCase()" name="testAPIAccessWhenJWTCachingEnabledTestCase" class="org.wso2.am.integration.tests.jwt.JWTTestCase"/>
        <method signature="org.wso2.am.integration.tests.jwt.JWTTestCase.testSpecificUserJWTClaims()" name="testSpecificUserJWTClaims" class="org.wso2.am.integration.tests.jwt.JWTTestCase"/>
        <method signature="org.wso2.am.integration.tests.jwt.JWTTestCase.testPrototypeInvocationWithJWTEnabled()" name="testPrototypeInvocationWithJWTEnabled" class="org.wso2.am.integration.tests.jwt.JWTTestCase"/>
        <method signature="org.wso2.am.integration.tests.jwt.URLSafeJWTTestCase.testEnableJWTAndClaims()" name="testEnableJWTAndClaims" class="org.wso2.am.integration.tests.jwt.URLSafeJWTTestCase"/>
        <method signature="org.wso2.am.integration.tests.jwt.URLSafeJWTTestCase.testAPIAccessWhenJWTCachingEnabledTestCase()" name="testAPIAccessWhenJWTCachingEnabledTestCase" class="org.wso2.am.integration.tests.jwt.URLSafeJWTTestCase"/>
        <method signature="org.wso2.am.integration.tests.jwt.URLSafeJWTTestCase.testSpecificUserJWTClaims()" name="testSpecificUserJWTClaims" class="org.wso2.am.integration.tests.jwt.URLSafeJWTTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase.testAPICreation()" name="testAPICreation" class="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase.testHTTPTransportBeforeUpdate()" name="testHTTPTransportBeforeUpdate" class="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase.testUpdatedHTTPTransport()" name="testUpdatedHTTPTransport" class="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase.testUpdatedHTTPSTransport()" name="testUpdatedHTTPSTransport" class="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase.testAPICreationTenant()" name="testAPICreationTenant" class="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase.testHTTPTransportBeforeUpdateInTenant()" name="testHTTPTransportBeforeUpdateInTenant" class="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase.testUpdatedHTTPTransportTenant()" name="testUpdatedHTTPTransportTenant" class="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase.testUpdatedHTTPSTransportTenant()" name="testUpdatedHTTPSTransportTenant" class="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIImportExportTestCase.testAPICreation()" name="testAPICreation" class="org.wso2.am.integration.tests.other.APIImportExportTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIImportExportTestCase.testAPIExport()" name="testAPIExport" class="org.wso2.am.integration.tests.other.APIImportExportTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIImportExportTestCase.testAPIImport()" name="testAPIImport" class="org.wso2.am.integration.tests.other.APIImportExportTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIImportExportTestCase.testAPIState()" name="testAPIState" class="org.wso2.am.integration.tests.other.APIImportExportTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIImportExportTestCase.testNewAPICreation()" name="testNewAPICreation" class="org.wso2.am.integration.tests.other.APIImportExportTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIImportExportTestCase.testNewAPIInvoke()" name="testNewAPIInvoke" class="org.wso2.am.integration.tests.other.APIImportExportTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIImportExportTestCase.testNewAPIExport()" name="testNewAPIExport" class="org.wso2.am.integration.tests.other.APIImportExportTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIImportExportTestCase.testNewAPIImport()" name="testNewAPIImport" class="org.wso2.am.integration.tests.other.APIImportExportTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIImportExportTestCase.testNewAPIState()" name="testNewAPIState" class="org.wso2.am.integration.tests.other.APIImportExportTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIImportExportTestCase.testNewAPIInvokeAfterImport()" name="testNewAPIInvokeAfterImport" class="org.wso2.am.integration.tests.other.APIImportExportTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIImportExportTestCase.testPreserveProviderTrueAPICreation()" name="testPreserveProviderTrueAPICreation" class="org.wso2.am.integration.tests.other.APIImportExportTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIImportExportTestCase.testPreserveProviderTrueApiExport()" name="testPreserveProviderTrueApiExport" class="org.wso2.am.integration.tests.other.APIImportExportTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIImportExportTestCase.testPreserveProviderTrueSameProviderApiImport()" name="testPreserveProviderTrueSameProviderApiImport" class="org.wso2.am.integration.tests.other.APIImportExportTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIImportExportTestCase.testPreserveProviderFalseAPICreation()" name="testPreserveProviderFalseAPICreation" class="org.wso2.am.integration.tests.other.APIImportExportTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIImportExportTestCase.testPreserveProviderFalseApiExport()" name="testPreserveProviderFalseApiExport" class="org.wso2.am.integration.tests.other.APIImportExportTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIImportExportTestCase.testPreserveProviderFalseSameProviderApiImport()" name="testPreserveProviderFalseSameProviderApiImport" class="org.wso2.am.integration.tests.other.APIImportExportTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIInvocationFailureTestCase.APIInvocationFailure()" name="APIInvocationFailure" class="org.wso2.am.integration.tests.other.APIInvocationFailureTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIM4765ResourceOrderInSwagger.swaggerResourceOrderTest()" name="swaggerResourceOrderTest" class="org.wso2.am.integration.tests.other.APIM4765ResourceOrderInSwagger"/>
        <method signature="org.wso2.am.integration.tests.other.APIMANAGER3226APINameWithDifferentCaseTestCase.testValidateAddAPIsWithDifferentCase()" name="testValidateAddAPIsWithDifferentCase" class="org.wso2.am.integration.tests.other.APIMANAGER3226APINameWithDifferentCaseTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIMANAGER4081PaginationCountTestCase.testPagination()" name="testPagination" class="org.wso2.am.integration.tests.other.APIMANAGER4081PaginationCountTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIScopeTestCase.testSetScopeToResourceTestCase()" name="testSetScopeToResourceTestCase" class="org.wso2.am.integration.tests.other.APIScopeTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIScopeTestCase.testCopyApiWithScopes()" name="testCopyApiWithScopes" class="org.wso2.am.integration.tests.other.APIScopeTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIScopeTestCase.testUpdateApiWithScopes()" name="testUpdateApiWithScopes" class="org.wso2.am.integration.tests.other.APIScopeTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APISearchAPIByTagTestCase.testAPICreation()" name="testAPICreation" class="org.wso2.am.integration.tests.other.APISearchAPIByTagTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APISearchAPIByTagTestCase.testAPISearchByTag()" name="testAPISearchByTag" class="org.wso2.am.integration.tests.other.APISearchAPIByTagTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APISearchAPIByTagTestCase.testAPISearchByTagGroup()" name="testAPISearchByTagGroup" class="org.wso2.am.integration.tests.other.APISearchAPIByTagTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.DAOTestCase.testApplication()" name="testApplication" class="org.wso2.am.integration.tests.other.DAOTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.DAOTestCase.testApplicationOperations()" name="testApplicationOperations" class="org.wso2.am.integration.tests.other.DAOTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.DAOTestCase.testDAOTestCase()" name="testDAOTestCase" class="org.wso2.am.integration.tests.other.DAOTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.DigestAuthenticationTestCase.testDigestAuthentication()" name="testDigestAuthentication" class="org.wso2.am.integration.tests.other.DigestAuthenticationTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.InvalidAuthTokenLargePayloadTestCase.testApiCreation()" name="testApiCreation" class="org.wso2.am.integration.tests.other.InvalidAuthTokenLargePayloadTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.InvalidAuthTokenLargePayloadTestCase.testApiInvocation()" name="testApiInvocation" class="org.wso2.am.integration.tests.other.InvalidAuthTokenLargePayloadTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.LocationHeaderTestCase.testAPIWithLocationHeader()" name="testAPIWithLocationHeader" class="org.wso2.am.integration.tests.other.LocationHeaderTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.RelativeUrlLocationHeaderTestCase.testAPIWithRelativeUrlLocationHeader()" name="testAPIWithRelativeUrlLocationHeader" class="org.wso2.am.integration.tests.other.RelativeUrlLocationHeaderTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.TagsRatingCommentTestCase.testTagsRatingCommentTestCase()" name="testTagsRatingCommentTestCase" class="org.wso2.am.integration.tests.other.TagsRatingCommentTestCase"/>
        <method signature="org.wso2.am.integration.tests.rest.SearchPaginatedAPIsWithMultipleStatusTestCase.testPaginationWithMultipleStatus()" name="testPaginationWithMultipleStatus" class="org.wso2.am.integration.tests.rest.SearchPaginatedAPIsWithMultipleStatusTestCase"/>
        <method signature="org.wso2.am.integration.tests.rest.URLMappingRESTTestCase.testRESTURITemplate()" name="testRESTURITemplate" class="org.wso2.am.integration.tests.rest.URLMappingRESTTestCase"/>
        <method signature="org.wso2.am.integration.tests.rest.UriTemplateReservedCharacterEncodingTest.testURITemplateExpandWithEscapedPercentEncoding()" name="testURITemplateExpandWithEscapedPercentEncoding" class="org.wso2.am.integration.tests.rest.UriTemplateReservedCharacterEncodingTest"/>
        <method signature="org.wso2.am.integration.tests.rest.UriTemplateReservedCharacterEncodingTest.testURITemplateExpandWithEscapedPercentEncodingPathParam()" name="testURITemplateExpandWithEscapedPercentEncodingPathParam" class="org.wso2.am.integration.tests.rest.UriTemplateReservedCharacterEncodingTest"/>
        <method signature="org.wso2.am.integration.tests.rest.UriTemplateReservedCharacterEncodingTest.testURITemplateExpandWithPercentEncoding()" name="testURITemplateExpandWithPercentEncoding" class="org.wso2.am.integration.tests.rest.UriTemplateReservedCharacterEncodingTest"/>
        <method signature="org.wso2.am.integration.tests.rest.UriTemplateReservedCharacterEncodingTest.testURITemplateExpandWithPercentEncodingPathParamCase()" name="testURITemplateExpandWithPercentEncodingPathParamCase" class="org.wso2.am.integration.tests.rest.UriTemplateReservedCharacterEncodingTest"/>
        <method signature="org.wso2.am.integration.tests.rest.UriTemplateReservedCharacterEncodingTest.testURITemplateParameterDecodingPlusCharacterCase()" name="testURITemplateParameterDecodingPlusCharacterCase" class="org.wso2.am.integration.tests.rest.UriTemplateReservedCharacterEncodingTest"/>
        <method signature="org.wso2.am.integration.tests.rest.UriTemplateReservedCharacterEncodingTest.testURITemplateParameterDecodingSpaceCharacterCase()" name="testURITemplateParameterDecodingSpaceCharacterCase" class="org.wso2.am.integration.tests.rest.UriTemplateReservedCharacterEncodingTest"/>
        <method signature="org.wso2.am.integration.tests.rest.UriTemplateReservedCharacterEncodingTest.testURITemplateParameterDecodingTrailingPercentageCase()" name="testURITemplateParameterDecodingTrailingPercentageCase" class="org.wso2.am.integration.tests.rest.UriTemplateReservedCharacterEncodingTest"/>
        <method signature="org.wso2.am.integration.tests.rest.UriTemplateReservedCharacterEncodingTest.testURITemplateParameterDecodingWithPercentEncodingEscapedAtExpansion()" name="testURITemplateParameterDecodingWithPercentEncodingEscapedAtExpansion" class="org.wso2.am.integration.tests.rest.UriTemplateReservedCharacterEncodingTest"/>
        <method signature="org.wso2.am.integration.tests.rest.UriTemplateReservedCharacterEncodingTest.testURITemplateSpecialCaseVariableWithFullURL()" name="testURITemplateSpecialCaseVariableWithFullURL" class="org.wso2.am.integration.tests.rest.UriTemplateReservedCharacterEncodingTest"/>
        <method signature="org.wso2.am.integration.tests.throttling.ThrottlingTestCase.throttlingTestCase()" name="throttlingTestCase" class="org.wso2.am.integration.tests.throttling.ThrottlingTestCase"/>
        <method signature="org.wso2.am.integration.tests.token.OpenIDTokenAPITestCase.testGenerateAccessTokenWithOpenIdScope()" name="testGenerateAccessTokenWithOpenIdScope" class="org.wso2.am.integration.tests.token.OpenIDTokenAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.token.OpenIDTokenAPITestCase.testCallUserInfoApiWithOpenIdAccessToken()" name="testCallUserInfoApiWithOpenIdAccessToken" class="org.wso2.am.integration.tests.token.OpenIDTokenAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.token.RefreshTokenTestCase.testRefreshTokenAPITestCase()" name="testRefreshTokenAPITestCase" class="org.wso2.am.integration.tests.token.RefreshTokenTestCase"/>
        <method signature="org.wso2.am.integration.tests.token.TokenAPITestCase.testJWTTokenAPITestCase()" name="testJWTTokenAPITestCase" class="org.wso2.am.integration.tests.token.TokenAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.token.TokenAPITestCase.testTokenAPITestCase()" name="testTokenAPITestCase" class="org.wso2.am.integration.tests.token.TokenAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.token.TokenAPITestCase.testTokenEqualityBeforeExpiration()" name="testTokenEqualityBeforeExpiration" class="org.wso2.am.integration.tests.token.TokenAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.version.DefaultVersionAPITestCase.testDefaultVersionAPI()" name="testDefaultVersionAPI" class="org.wso2.am.integration.tests.version.DefaultVersionAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.resources.APIResourceModificationTestCase.testSetScopeToResourceTestCase()" name="testSetScopeToResourceTestCase" class="org.wso2.am.integration.tests.resources.APIResourceModificationTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIMANAGER2611EndpointValidationTestCase.checkEndpointValidation()" name="checkEndpointValidation" class="org.wso2.am.integration.tests.other.APIMANAGER2611EndpointValidationTestCase"/>
        <method signature="org.wso2.am.integration.tests.login.EmailUserNameLoginTestCase.LoginWithEmailUserNameTestCase()" name="LoginWithEmailUserNameTestCase" class="org.wso2.am.integration.tests.login.EmailUserNameLoginTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.HttpPATCHSupportTestCase.testHttpPatchSupport()" name="testHttpPatchSupport" class="org.wso2.am.integration.tests.other.HttpPATCHSupportTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.PublisherAccessControlTestCase.testAPIAdditionWithAccessControlRestriction()" name="testAPIAdditionWithAccessControlRestriction" class="org.wso2.am.integration.tests.other.PublisherAccessControlTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.PublisherAccessControlTestCase.testAPIAdditionWithoutAccessControlRestriction()" name="testAPIAdditionWithoutAccessControlRestriction" class="org.wso2.am.integration.tests.other.PublisherAccessControlTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.PublisherAccessControlTestCase.testCheckPublisherRoleCanViewRestrictedVisibilityAPIs()" name="testCheckPublisherRoleCanViewRestrictedVisibilityAPIs" class="org.wso2.am.integration.tests.other.PublisherAccessControlTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.PublisherAccessControlTestCase.testGetPublicAPIFromStoreWithRestrictedPublisherAccess()" name="testGetPublicAPIFromStoreWithRestrictedPublisherAccess" class="org.wso2.am.integration.tests.other.PublisherAccessControlTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.PublisherAccessControlTestCase.testPublisherAndStoreRestricted()" name="testPublisherAndStoreRestricted" class="org.wso2.am.integration.tests.other.PublisherAccessControlTestCase"/>
        <method signature="org.wso2.am.integration.tests.prototype.APIM23VisibilityOfPrototypedAPIInStoreTestCase.testVisibilityInPrototypedAPI()" name="testVisibilityInPrototypedAPI" class="org.wso2.am.integration.tests.prototype.APIM23VisibilityOfPrototypedAPIInStoreTestCase"/>
        <method signature="org.wso2.am.integration.tests.prototype.APIM24VisibilityOfPrototypedAPIOfDifferentViewInStoreTestCase.testOpenAlreadySavedAPIAndDeployedAsAPrototyped()" name="testOpenAlreadySavedAPIAndDeployedAsAPrototyped" class="org.wso2.am.integration.tests.prototype.APIM24VisibilityOfPrototypedAPIOfDifferentViewInStoreTestCase"/>
        <method signature="org.wso2.am.integration.tests.prototype.APIM24VisibilityOfPrototypedAPIOfDifferentViewInStoreTestCase.testPrototypedAPIVisibilityInGeneralAPI()" name="testPrototypedAPIVisibilityInGeneralAPI" class="org.wso2.am.integration.tests.prototype.APIM24VisibilityOfPrototypedAPIOfDifferentViewInStoreTestCase"/>
        <method signature="org.wso2.am.integration.tests.prototype.APIM24VisibilityOfPrototypedAPIOfDifferentViewInStoreTestCase.testPrototypedAPIVisibilityInRecentlyAddedList()" name="testPrototypedAPIVisibilityInRecentlyAddedList" class="org.wso2.am.integration.tests.prototype.APIM24VisibilityOfPrototypedAPIOfDifferentViewInStoreTestCase"/>
        <method signature="org.wso2.am.integration.tests.prototype.APIM24VisibilityOfPrototypedAPIOfDifferentViewInStoreTestCase.testTagsOfPrototypedAPIVisibilityInTagList()" name="testTagsOfPrototypedAPIVisibilityInTagList" class="org.wso2.am.integration.tests.prototype.APIM24VisibilityOfPrototypedAPIOfDifferentViewInStoreTestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM18CreateAnAPIThroughThePublisherRestAPITestCase.testCreateAnAPIThroughThePublisherRest()" name="testCreateAnAPIThroughThePublisherRest" class="org.wso2.am.integration.tests.publisher.APIM18CreateAnAPIThroughThePublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM18CreateAnAPIThroughThePublisherRestAPITestCase.testRemoveAnAPIThroughThePublisherRest()" name="testRemoveAnAPIThroughThePublisherRest" class="org.wso2.am.integration.tests.publisher.APIM18CreateAnAPIThroughThePublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM514CreateAnAPIWithoutProvidingMandatoryFieldsTestCase.testCreateAnAPIThroughThePublisherRestWithoutAction()" name="testCreateAnAPIThroughThePublisherRestWithoutAction" class="org.wso2.am.integration.tests.publisher.APIM514CreateAnAPIWithoutProvidingMandatoryFieldsTestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM514CreateAnAPIWithoutProvidingMandatoryFieldsTestCase.testCreateAnAPIThroughThePublisherRestWithoutContext()" name="testCreateAnAPIThroughThePublisherRestWithoutContext" class="org.wso2.am.integration.tests.publisher.APIM514CreateAnAPIWithoutProvidingMandatoryFieldsTestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM514CreateAnAPIWithoutProvidingMandatoryFieldsTestCase.testCreateAnAPIThroughThePublisherRestWithoutName()" name="testCreateAnAPIThroughThePublisherRestWithoutName" class="org.wso2.am.integration.tests.publisher.APIM514CreateAnAPIWithoutProvidingMandatoryFieldsTestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM514CreateAnAPIWithoutProvidingMandatoryFieldsTestCase.testCreateAnAPIThroughThePublisherRestWithoutTierAvailability()" name="testCreateAnAPIThroughThePublisherRestWithoutTierAvailability" class="org.wso2.am.integration.tests.publisher.APIM514CreateAnAPIWithoutProvidingMandatoryFieldsTestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM514CreateAnAPIWithoutProvidingMandatoryFieldsTestCase.testCreateAnAPIThroughThePublisherRestWithoutVersion()" name="testCreateAnAPIThroughThePublisherRestWithoutVersion" class="org.wso2.am.integration.tests.publisher.APIM514CreateAnAPIWithoutProvidingMandatoryFieldsTestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM519CreateAnAPIThroughTheRestAPIWithoutLoggingInTestCase.testCreateAnAPIThroughThePublisherRest()" name="testCreateAnAPIThroughThePublisherRest" class="org.wso2.am.integration.tests.publisher.APIM519CreateAnAPIThroughTheRestAPIWithoutLoggingInTestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM520UpdateAnAPIThroughThePublisherRestAPITestCase.testUpdateAnAPIThroughThePublisherRest()" name="testUpdateAnAPIThroughThePublisherRest" class="org.wso2.am.integration.tests.publisher.APIM520UpdateAnAPIThroughThePublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM534GetAllTheAPIsCreatedThroughThePublisherRestAPITestCase.testCheckIfAnAPIExistsThroughThePublisherRestAPI()" name="testCheckIfAnAPIExistsThroughThePublisherRestAPI" class="org.wso2.am.integration.tests.publisher.APIM534GetAllTheAPIsCreatedThroughThePublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM548CopyAnAPIToANewerVersionThroughThePublisherRestAPITestCase.testCopyAnAPIToANewerVersionThroughThePublisherRest()" name="testCopyAnAPIToANewerVersionThroughThePublisherRest" class="org.wso2.am.integration.tests.publisher.APIM548CopyAnAPIToANewerVersionThroughThePublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM570CheckIfAnOlderVersionOfTheAPIExistsThroughThePublisherRestAPITestCase.testCreateAnApiUsingValidDataAndGetThroughThePublisherRest()" name="testCreateAnApiUsingValidDataAndGetThroughThePublisherRest" class="org.wso2.am.integration.tests.publisher.APIM570CheckIfAnOlderVersionOfTheAPIExistsThroughThePublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM574ChangeTheStatusOfAnAPIToPrototypedThroughThePublisherRestAPITestCase.testCreateAnAPIThroughThePublisherRest()" name="testCreateAnAPIThroughThePublisherRest" class="org.wso2.am.integration.tests.publisher.APIM574ChangeTheStatusOfAnAPIToPrototypedThroughThePublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM574ChangeTheStatusOfAnAPIToPrototypedThroughThePublisherRestAPITestCase.testChangeTheStatusOfTheAPIToPrototyped()" name="testChangeTheStatusOfTheAPIToPrototyped" class="org.wso2.am.integration.tests.publisher.APIM574ChangeTheStatusOfAnAPIToPrototypedThroughThePublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM574ChangeTheStatusOfAnAPIToPrototypedThroughThePublisherRestAPITestCase.testChangeTheStatusOfTheAPIToPublished()" name="testChangeTheStatusOfTheAPIToPublished" class="org.wso2.am.integration.tests.publisher.APIM574ChangeTheStatusOfAnAPIToPrototypedThroughThePublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM574ChangeTheStatusOfAnAPIToPrototypedThroughThePublisherRestAPITestCase.testChangeTheStatusOfTheAPIToDeprecated()" name="testChangeTheStatusOfTheAPIToDeprecated" class="org.wso2.am.integration.tests.publisher.APIM574ChangeTheStatusOfAnAPIToPrototypedThroughThePublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM574ChangeTheStatusOfAnAPIToPrototypedThroughThePublisherRestAPITestCase.testChangeTheStatusOfTheAPIToRetired()" name="testChangeTheStatusOfTheAPIToRetired" class="org.wso2.am.integration.tests.publisher.APIM574ChangeTheStatusOfAnAPIToPrototypedThroughThePublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM611AddDocumentationToAnAPIWithDocTypeHowToThroughPublisherRestAPITestCase.testAddDocumentToAnAPIHowToInline()" name="testAddDocumentToAnAPIHowToInline" class="org.wso2.am.integration.tests.publisher.APIM611AddDocumentationToAnAPIWithDocTypeHowToThroughPublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM611AddDocumentationToAnAPIWithDocTypeHowToThroughPublisherRestAPITestCase.testAddDocumentToAnAPIHowToUrl()" name="testAddDocumentToAnAPIHowToUrl" class="org.wso2.am.integration.tests.publisher.APIM611AddDocumentationToAnAPIWithDocTypeHowToThroughPublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase.testApiCreation()" name="testApiCreation" class="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase.testAddDocumentToAnAPIHowToFile()" name="testAddDocumentToAnAPIHowToFile" class="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase.testAddDocumentToAnAPISDKToFile()" name="testAddDocumentToAnAPISDKToFile" class="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase.testAddDocumentToAnAPIPublicToFile()" name="testAddDocumentToAnAPIPublicToFile" class="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase.testAddDocumentToAnAPISupportToFile()" name="testAddDocumentToAnAPISupportToFile" class="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase.testAddDocumentToAnAPIOtherFile()" name="testAddDocumentToAnAPIOtherFile" class="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM620AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase.testAddDocumentToAnAPISDKInline()" name="testAddDocumentToAnAPISDKInline" class="org.wso2.am.integration.tests.publisher.APIM620AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM620AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase.testAddDocumentToAnAPISDKUrl()" name="testAddDocumentToAnAPISDKUrl" class="org.wso2.am.integration.tests.publisher.APIM620AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM623AddDocumentationToAnAPIWithDocTypePublicForumThroughPublisherRestAPITestCase.testAddDocumentToAnAPIPublicInline()" name="testAddDocumentToAnAPIPublicInline" class="org.wso2.am.integration.tests.publisher.APIM623AddDocumentationToAnAPIWithDocTypePublicForumThroughPublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM625AddDocumentationToAnAPIWithDocTypeSupportForumThroughPublisherRestAPITestCase.testAddDocumentToAnAPISupportInline()" name="testAddDocumentToAnAPISupportInline" class="org.wso2.am.integration.tests.publisher.APIM625AddDocumentationToAnAPIWithDocTypeSupportForumThroughPublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM627AddDocumentationToAnAPIWithDocTypeOtherThroughPublisherRestAPITestCase.testAddDocumentToAnAPIOtherInline()" name="testAddDocumentToAnAPIOtherInline" class="org.wso2.am.integration.tests.publisher.APIM627AddDocumentationToAnAPIWithDocTypeOtherThroughPublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM627AddDocumentationToAnAPIWithDocTypeOtherThroughPublisherRestAPITestCase.testAddDocumentToAnAPIOtherUrl()" name="testAddDocumentToAnAPIOtherUrl" class="org.wso2.am.integration.tests.publisher.APIM627AddDocumentationToAnAPIWithDocTypeOtherThroughPublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM627AddDocumentationToAnAPIWithDocTypeOtherThroughPublisherRestAPITestCase.testRemoveDocumentationOtherTheAPI()" name="testRemoveDocumentationOtherTheAPI" class="org.wso2.am.integration.tests.publisher.APIM627AddDocumentationToAnAPIWithDocTypeOtherThroughPublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM634GetAllTheThrottlingTiersFromThePublisherRestAPITestCase.testGetAllTheThrottlingTiers()" name="testGetAllTheThrottlingTiers" class="org.wso2.am.integration.tests.publisher.APIM634GetAllTheThrottlingTiersFromThePublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM638ValidateTheRoleOfAnExistingUserThroughThePublisherRestAPITestCase.testValidateTheRoleOfAnExistingUser()" name="testValidateTheRoleOfAnExistingUser" class="org.wso2.am.integration.tests.publisher.APIM638ValidateTheRoleOfAnExistingUserThroughThePublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIM638ValidateTheRoleOfAnExistingUserThroughThePublisherRestAPITestCase.testValidateTheRoleOfAnNonExistingUser()" name="testValidateTheRoleOfAnNonExistingUser" class="org.wso2.am.integration.tests.publisher.APIM638ValidateTheRoleOfAnExistingUserThroughThePublisherRestAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIResourceWithTemplateTestCase.testAPIwithResourceTemplateForAPI()" name="testAPIwithResourceTemplateForAPI" class="org.wso2.am.integration.tests.publisher.APIResourceWithTemplateTestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIResourceWithTemplateTestCase.testAPIwithResourceTemplateForDefaultAPI()" name="testAPIwithResourceTemplateForDefaultAPI" class="org.wso2.am.integration.tests.publisher.APIResourceWithTemplateTestCase"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIResourceWithTemplateTestCase.testUriEncodingInTemplate()" name="testUriEncodingInTemplate" class="org.wso2.am.integration.tests.publisher.APIResourceWithTemplateTestCase"/>
        <method signature="org.wso2.am.integration.tests.rest.DocAPIParameterTamperingTest.testParameterTampaeredResponseOfDocAPI()" name="testParameterTampaeredResponseOfDocAPI" class="org.wso2.am.integration.tests.rest.DocAPIParameterTamperingTest"/>
        <method signature="org.wso2.am.integration.tests.publisher.APIMANAGER5834APICreationWithInvalidInputsTestCase.testAPICreationWithInvalidContext()" name="testAPICreationWithInvalidContext" class="org.wso2.am.integration.tests.publisher.APIMANAGER5834APICreationWithInvalidInputsTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.sdk.SDKGenerationTestCase.testSDKGeneration()" name="testSDKGeneration" class="org.wso2.am.integration.tests.api.sdk.SDKGenerationTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.sdk.SDKGenerationTestCase.testSDKGenerationForPrivateAPIs()" name="testSDKGenerationForPrivateAPIs" class="org.wso2.am.integration.tests.api.sdk.SDKGenerationTestCase"/>
        <method signature="org.wso2.am.integration.tests.application.APIMANAGER3706ApplicationUpdateTestCase.testApplicationCreation()" name="testApplicationCreation" class="org.wso2.am.integration.tests.application.APIMANAGER3706ApplicationUpdateTestCase"/>
        <method signature="org.wso2.am.integration.tests.application.APIMANAGER3706ApplicationUpdateTestCase.testApplicationUpdate()" name="testApplicationUpdate" class="org.wso2.am.integration.tests.application.APIMANAGER3706ApplicationUpdateTestCase"/>
        <method signature="org.wso2.am.integration.tests.application.APIMANAGER3706ApplicationUpdateTestCase.testApplicationNameUpdateAfterKeyGeneration()" name="testApplicationNameUpdateAfterKeyGeneration" class="org.wso2.am.integration.tests.application.APIMANAGER3706ApplicationUpdateTestCase"/>
        <method signature="org.wso2.am.integration.tests.application.APIMANAGER3706ApplicationUpdateTestCase.testRegenerateConsumerSecret()" name="testRegenerateConsumerSecret" class="org.wso2.am.integration.tests.application.APIMANAGER3706ApplicationUpdateTestCase"/>
        <method signature="org.wso2.am.integration.tests.application.AuthApplicationUpdateTestCase.testApplicationCreation()" name="testApplicationCreation" class="org.wso2.am.integration.tests.application.AuthApplicationUpdateTestCase"/>
        <method signature="org.wso2.am.integration.tests.application.AuthApplicationUpdateTestCase.testApplicationUpdate()" name="testApplicationUpdate" class="org.wso2.am.integration.tests.application.AuthApplicationUpdateTestCase"/>
        <method signature="org.wso2.am.integration.tests.application.AuthApplicationUpdateTestCase.testApplicationGrantTypeAfterUpdate()" name="testApplicationGrantTypeAfterUpdate" class="org.wso2.am.integration.tests.application.AuthApplicationUpdateTestCase"/>
        <method signature="org.wso2.am.integration.tests.application.AuthApplicationUpdateTestCase.testApplicationNameUpdateAfterKeyGeneration()" name="testApplicationNameUpdateAfterKeyGeneration" class="org.wso2.am.integration.tests.application.AuthApplicationUpdateTestCase"/>
        <method signature="org.wso2.am.integration.tests.application.AuthApplicationUpdateTestCase.testSubscriptionAfterApplicationNameUpdate()" name="testSubscriptionAfterApplicationNameUpdate" class="org.wso2.am.integration.tests.application.AuthApplicationUpdateTestCase"/>
        <method signature="org.wso2.am.integration.tests.application.CAPIMGT12CallBackURLOverwriteTestCase.callBackUrlUpdateTestCase()" name="callBackUrlUpdateTestCase" class="org.wso2.am.integration.tests.application.CAPIMGT12CallBackURLOverwriteTestCase"/>
        <method signature="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase.testAPICreation()" name="testAPICreation" class="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase"/>
        <method signature="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase.testApplicationCreation()" name="testApplicationCreation" class="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase"/>
        <method signature="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase.testAuthCode()" name="testAuthCode" class="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase"/>
        <method signature="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase.testImplicit()" name="testImplicit" class="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase"/>
        <method signature="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase.testApplicationCreationWithoutCallBackURL()" name="testApplicationCreationWithoutCallBackURL" class="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase"/>
        <method signature="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase.testAuthRequestWithoutCallbackURL()" name="testAuthRequestWithoutCallbackURL" class="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase"/>
        <method signature="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase.testApplicationUpdateAndTestKeyGeneration()" name="testApplicationUpdateAndTestKeyGeneration" class="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIMANAGER3965TestCase.testAPICreationWithOutCorsConfiguration()" name="testAPICreationWithOutCorsConfiguration" class="org.wso2.am.integration.tests.other.APIMANAGER3965TestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIMANAGER3965TestCase.testAPICreationWithCorsConfiguration()" name="testAPICreationWithCorsConfiguration" class="org.wso2.am.integration.tests.other.APIMANAGER3965TestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIMANAGER4373BrokenAPIInStoreTestCase.testAPIRoleChangeEffectInStore()" name="testAPIRoleChangeEffectInStore" class="org.wso2.am.integration.tests.other.APIMANAGER4373BrokenAPIInStoreTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIMANAGER5326CustomStatusMsgTestCase.testAPIErrorResponse()" name="testAPIErrorResponse" class="org.wso2.am.integration.tests.other.APIMANAGER5326CustomStatusMsgTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.ErrorResponseCheckTestCase.testAPIErrorResponse()" name="testAPIErrorResponse" class="org.wso2.am.integration.tests.other.ErrorResponseCheckTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.LoadBalancedEndPointTestCase.testCreateApiWithBothProdAndSandboxEndpoints()" name="testCreateApiWithBothProdAndSandboxEndpoints" class="org.wso2.am.integration.tests.other.LoadBalancedEndPointTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.LoadBalancedEndPointTestCase.testCreateApiWithDifferentProductionEndpoints()" name="testCreateApiWithDifferentProductionEndpoints" class="org.wso2.am.integration.tests.other.LoadBalancedEndPointTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.LoadBalancedEndPointTestCase.testRoundRobinAlgorithmInProductionAndSandboxEndpoints()" name="testRoundRobinAlgorithmInProductionAndSandboxEndpoints" class="org.wso2.am.integration.tests.other.LoadBalancedEndPointTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.LoadBalancedEndPointTestCase.testRoundRobinAlgorithmInProductionEndpoints()" name="testRoundRobinAlgorithmInProductionEndpoints" class="org.wso2.am.integration.tests.other.LoadBalancedEndPointTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.StoreChangePasswordTestCase.changePasswordWithInvalidSession()" name="changePasswordWithInvalidSession" class="org.wso2.am.integration.tests.other.StoreChangePasswordTestCase"/>
        <method signature="org.wso2.am.integration.tests.restapi.testcases.APIMANAGER4877CreateAPIWithScopesAndUpdateTemplateTestCase.testCreateAPIWithScopesAndUpdate()" name="testCreateAPIWithScopesAndUpdate" class="org.wso2.am.integration.tests.restapi.testcases.APIMANAGER4877CreateAPIWithScopesAndUpdateTemplateTestCase"/>
        <method signature="org.wso2.am.integration.tests.restapi.testcases.APITestCase.testAPIs()" name="testAPIs" class="org.wso2.am.integration.tests.restapi.testcases.APITestCase"/>
        <method signature="org.wso2.am.integration.tests.restapi.testcases.ApplicationRegenerateConsumerSecretTestCase.testRegenerateConsumerSecret()" name="testRegenerateConsumerSecret" class="org.wso2.am.integration.tests.restapi.testcases.ApplicationRegenerateConsumerSecretTestCase"/>
        <method signature="org.wso2.am.integration.tests.restapi.testcases.ApplicationScopeValidationTestCase.testGetApplicationScope()" name="testGetApplicationScope" class="org.wso2.am.integration.tests.restapi.testcases.ApplicationScopeValidationTestCase"/>
        <method signature="org.wso2.am.integration.tests.restapi.testcases.ApplicationTestCase.testApplications()" name="testApplications" class="org.wso2.am.integration.tests.restapi.testcases.ApplicationTestCase"/>
        <method signature="org.wso2.am.integration.tests.restapi.testcases.ApplicationWithCustomAttributesTestCase.testApplications()" name="testApplications" class="org.wso2.am.integration.tests.restapi.testcases.ApplicationWithCustomAttributesTestCase"/>
        <method signature="org.wso2.am.integration.tests.restapi.testcases.EnvironmentTestCase.testEnvironment()" name="testEnvironment" class="org.wso2.am.integration.tests.restapi.testcases.EnvironmentTestCase"/>
        <method signature="org.wso2.am.integration.tests.restapi.testcases.APIMANAGER5872UpdateAPIWithoutThumbnailValueAndAPISummaryTestCase.testUpdateAPIwhichHasThumbnail()" name="testUpdateAPIwhichHasThumbnail" class="org.wso2.am.integration.tests.restapi.testcases.APIMANAGER5872UpdateAPIWithoutThumbnailValueAndAPISummaryTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AddNewMediationAndInvokeAPITestCase.testAPIInvocationBeforeAddingNewMediation()" name="testAPIInvocationBeforeAddingNewMediation" class="org.wso2.am.integration.tests.api.lifecycle.AddNewMediationAndInvokeAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AddNewMediationAndInvokeAPITestCase.testAPIInvocationAfterAddingNewMediation()" name="testAPIInvocationAfterAddingNewMediation" class="org.wso2.am.integration.tests.api.lifecycle.AddNewMediationAndInvokeAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.AddNewMediationAndInvokeAPITestCase.testAPIInvocationBeforeRemovingNewMediation()" name="testAPIInvocationBeforeRemovingNewMediation" class="org.wso2.am.integration.tests.api.lifecycle.AddNewMediationAndInvokeAPITestCase"/>
        <method signature="org.wso2.am.integration.tests.websocket.APIMANAGER5869WSGayewatURLTestCase.testAPICreation()" name="testAPICreation" class="org.wso2.am.integration.tests.websocket.APIMANAGER5869WSGayewatURLTestCase"/>
        <method signature="org.wso2.am.integration.tests.websocket.APIMANAGER5869WSGayewatURLTestCase.testApiGatewayUrlsTest()" name="testApiGatewayUrlsTest" class="org.wso2.am.integration.tests.websocket.APIMANAGER5869WSGayewatURLTestCase"/>
        <method signature="org.wso2.am.integration.tests.websocket.APIMANAGER5869WSGayewatURLTestCase.testApiGatewayUrlsAfterConfigChangeTest()" name="testApiGatewayUrlsAfterConfigChangeTest" class="org.wso2.am.integration.tests.websocket.APIMANAGER5869WSGayewatURLTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.APIMANAGER5843WSDLHostnameTestCase.testAPICreationWithWSDL()" name="testAPICreationWithWSDL" class="org.wso2.am.integration.tests.other.APIMANAGER5843WSDLHostnameTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.GIT2231HeadRequestNPEErrorTestCase.testAPIWithLocationHeader()" name="testAPIWithLocationHeader" class="org.wso2.am.integration.tests.other.GIT2231HeadRequestNPEErrorTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.NotificationTestCase.notificationTestCase()" name="notificationTestCase" class="org.wso2.am.integration.tests.other.NotificationTestCase"/>
        <method signature="org.wso2.am.integration.tests.other.TokenEncryptionScopeTestCase.testTokenEncryptionWithScopes()" name="testTokenEncryptionWithScopes" class="org.wso2.am.integration.tests.other.TokenEncryptionScopeTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.ChangeAPITierAndTestInvokingTestCase.testInvokingWithGoldTier()" name="testInvokingWithGoldTier" class="org.wso2.am.integration.tests.api.lifecycle.ChangeAPITierAndTestInvokingTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.ChangeAPITierAndTestInvokingTestCase.testInvokingAfterExpireThrottleExpireTime()" name="testInvokingAfterExpireThrottleExpireTime" class="org.wso2.am.integration.tests.api.lifecycle.ChangeAPITierAndTestInvokingTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.ChangeAPITierAndTestInvokingTestCase.testEditAPITierToSilver()" name="testEditAPITierToSilver" class="org.wso2.am.integration.tests.api.lifecycle.ChangeAPITierAndTestInvokingTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.ChangeAPITierAndTestInvokingTestCase.testInvokingWithSilverTier()" name="testInvokingWithSilverTier" class="org.wso2.am.integration.tests.api.lifecycle.ChangeAPITierAndTestInvokingTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.EditTiersXMLAndVerifyInPublisherTestCase.testAvailabilityOfTiersInPermissionPageBeforeChangeTiersXML()" name="testAvailabilityOfTiersInPermissionPageBeforeChangeTiersXML" class="org.wso2.am.integration.tests.api.lifecycle.EditTiersXMLAndVerifyInPublisherTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.EditTiersXMLAndVerifyInPublisherTestCase.testAvailabilityOfTiersInAPIManagePageBeforeChangeTiersXML()" name="testAvailabilityOfTiersInAPIManagePageBeforeChangeTiersXML" class="org.wso2.am.integration.tests.api.lifecycle.EditTiersXMLAndVerifyInPublisherTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.EditTiersXMLAndVerifyInPublisherTestCase.testAvailabilityOfTiersInPermissionPageAfterChangeTiersXML()" name="testAvailabilityOfTiersInPermissionPageAfterChangeTiersXML" class="org.wso2.am.integration.tests.api.lifecycle.EditTiersXMLAndVerifyInPublisherTestCase"/>
        <method signature="org.wso2.am.integration.tests.api.lifecycle.EditTiersXMLAndVerifyInPublisherTestCase.testAvailabilityOfTiersInAPIManagePageAfterChangeTiersXML()" name="testAvailabilityOfTiersInAPIManagePageAfterChangeTiersXML" class="org.wso2.am.integration.tests.api.lifecycle.EditTiersXMLAndVerifyInPublisherTestCase"/>
        <method signature="org.wso2.am.integration.tests.restapi.testcases.MultipleSubscriptionsTestCase.testSubscription()" name="testSubscription" class="org.wso2.am.integration.tests.restapi.testcases.MultipleSubscriptionsTestCase"/>
        <method signature="org.wso2.am.integration.tests.restapi.testcases.OnHoldSubscriptionWorkflowIdTestCase.testSubscription()" name="testSubscription" class="org.wso2.am.integration.tests.restapi.testcases.OnHoldSubscriptionWorkflowIdTestCase"/>
        <method signature="org.wso2.am.integration.tests.restapi.testcases.SubscriptionTestCase.testSubscription()" name="testSubscription" class="org.wso2.am.integration.tests.restapi.testcases.SubscriptionTestCase"/>
        <method signature="org.wso2.am.integration.tests.restapi.testcases.TagTestCase.testAPITags()" name="testAPITags" class="org.wso2.am.integration.tests.restapi.testcases.TagTestCase"/>
        <method signature="org.wso2.am.integration.tests.restapi.testcases.TierTestCase.testTiers()" name="testTiers" class="org.wso2.am.integration.tests.restapi.testcases.TierTestCase"/>
        <method signature="org.wso2.am.integration.tests.restapi.testcases.APILifecycleTestCase.testAPILifecycle()" name="testAPILifecycle" class="org.wso2.am.integration.tests.restapi.testcases.APILifecycleTestCase"/>
      </group>
    </groups>
    <test name="apim-integration-tests-api-lifecycle" duration-ms="1198819" started-at="2018-11-05T06:44:43Z" finished-at="2018-11-05T07:04:42Z">
      <class name="org.wso2.am.integration.tests.api.lifecycle.ChangeAPITagsTestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="295" started-at="2018-11-05T06:47:35Z" finished-at="2018-11-05T06:47:35Z">
        </test-method>
        <test-method status="PASS" signature="testFilterByTagsBeforeTagChange()" name="testFilterByTagsBeforeTagChange" duration-ms="12013" started-at="2018-11-05T06:47:35Z" description="Test the filter by Tags before changing the Tags" finished-at="2018-11-05T06:47:47Z">
        </test-method>
        <test-method status="PASS" signature="testUpdateTagsAndFilterByTags()" name="testUpdateTagsAndFilterByTags" duration-ms="70847" started-at="2018-11-05T06:47:47Z" description="Test the filter by Tags After changing the Tags" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.ChangeAPITagsTestCase.testFilterByTagsBeforeTagChange" finished-at="2018-11-05T06:48:58Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="1331" started-at="2018-11-05T06:48:58Z" finished-at="2018-11-05T06:48:59Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.rest.MalformedRequestTest">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="1679" started-at="2018-11-05T07:02:42Z" finished-at="2018-11-05T07:02:44Z">
        </test-method>
        <test-method status="PASS" signature="testMalformedPostWithMessageBuilding()" name="testMalformedPostWithMessageBuilding" duration-ms="53" started-at="2018-11-05T07:02:44Z" description="Check if a malformed request breaks the system" finished-at="2018-11-05T07:02:44Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.APIPublishingAndVisibilityInStoreTestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="559" started-at="2018-11-05T06:46:18Z" finished-at="2018-11-05T06:46:19Z">
        </test-method>
        <test-method status="PASS" signature="testAvailabilityOfAPIInPublisher()" name="testAvailabilityOfAPIInPublisher" duration-ms="632" started-at="2018-11-05T06:46:19Z" description="Create a API and  check its availability in Publisher." finished-at="2018-11-05T06:46:20Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityOfAPIInStoreBeforePublishing()" name="testVisibilityOfAPIInStoreBeforePublishing" duration-ms="14" started-at="2018-11-05T06:46:20Z" description="Check the visibility of API in Store before the API publish. it should not be available in store." depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIPublishingAndVisibilityInStoreTestCase.testAvailabilityOfAPIInPublisher" finished-at="2018-11-05T06:46:20Z">
        </test-method>
        <test-method status="PASS" signature="testAPIPublishing()" name="testAPIPublishing" duration-ms="1658" started-at="2018-11-05T06:46:20Z" description="Test the API publishing action. Response HTTP message should contains API status change from  CREATED to PUBLISHED" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIPublishingAndVisibilityInStoreTestCase.testVisibilityOfAPIInStoreBeforePublishing" finished-at="2018-11-05T06:46:21Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityOfAPIInStoreAfterPublishing()" name="testVisibilityOfAPIInStoreAfterPublishing" duration-ms="93" started-at="2018-11-05T06:46:21Z" description="Test the visibility of API in the store after API publish." depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIPublishingAndVisibilityInStoreTestCase.testAPIPublishing" finished-at="2018-11-05T06:46:21Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="438" started-at="2018-11-05T06:46:21Z" finished-at="2018-11-05T06:46:22Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.throttling.APIThrottlingTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="47297" started-at="2018-11-05T07:03:06Z" finished-at="2018-11-05T07:03:53Z">
        </test-method>
        <test-method status="PASS" signature="testAPIThrottling_1()" name="testAPIThrottling_1" duration-ms="48624" started-at="2018-11-05T07:03:53Z" description="API Throttling Test" finished-at="2018-11-05T07:04:41Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="695" started-at="2018-11-05T07:04:41Z" finished-at="2018-11-05T07:04:42Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.APIAccessibilityOfPublishedOldAPIAndPublishedCopyAPITestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="824" started-at="2018-11-05T06:46:11Z" finished-at="2018-11-05T06:46:12Z">
        </test-method>
        <test-method status="PASS" signature="testCopyAPI()" name="testCopyAPI" duration-ms="3177" started-at="2018-11-05T06:46:12Z" description=" Test Copy API.Copy API version 1.0.0  to 2.0.0 " finished-at="2018-11-05T06:46:15Z">
        </test-method>
        <test-method status="PASS" signature="testPublishCopiedAPI()" name="testPublishCopiedAPI" duration-ms="1927" started-at="2018-11-05T06:46:15Z" description="Test publish activity of a copied API." depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIAccessibilityOfPublishedOldAPIAndPublishedCopyAPITestCase.testCopyAPI" finished-at="2018-11-05T06:46:17Z">
        </test-method>
        <test-method status="PASS" signature="testAvailabilityOfOldAndNewAPIVersionsInStore()" name="testAvailabilityOfOldAndNewAPIVersionsInStore" duration-ms="181" started-at="2018-11-05T06:46:17Z" description=" Test availability of old and new API versions in the store." depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIAccessibilityOfPublishedOldAPIAndPublishedCopyAPITestCase.testPublishCopiedAPI" finished-at="2018-11-05T06:46:17Z">
        </test-method>
        <test-method status="PASS" signature="testSubscribeOldVersion()" name="testSubscribeOldVersion" duration-ms="38" started-at="2018-11-05T06:46:17Z" description="Test subscribe of old API version." depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIAccessibilityOfPublishedOldAPIAndPublishedCopyAPITestCase.testAvailabilityOfOldAndNewAPIVersionsInStore" finished-at="2018-11-05T06:46:17Z">
        </test-method>
        <test-method status="PASS" signature="testSubscribeNewVersion()" name="testSubscribeNewVersion" duration-ms="37" started-at="2018-11-05T06:46:17Z" description=" Test availability of old and new API versions i the store." depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIAccessibilityOfPublishedOldAPIAndPublishedCopyAPITestCase.testSubscribeOldVersion" finished-at="2018-11-05T06:46:17Z">
        </test-method>
        <test-method status="PASS" signature="testAccessibilityOfPublishedOldAPIAndPublishedCopyAPI()" name="testAccessibilityOfPublishedOldAPIAndPublishedCopyAPI" duration-ms="385" started-at="2018-11-05T06:46:17Z" description="Publish a API and check its visibility in the API Store. Copy and create a new version, publish  the new version, test invocation of both old and new API versions." depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIAccessibilityOfPublishedOldAPIAndPublishedCopyAPITestCase.testSubscribeNewVersion" finished-at="2018-11-05T06:46:18Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="731" started-at="2018-11-05T06:46:18Z" finished-at="2018-11-05T06:46:18Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.CustomLifeCycleTestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="303" started-at="2018-11-05T07:02:46Z" finished-at="2018-11-05T07:02:46Z">
        </test-method>
        <test-method status="PASS" signature="testCustomLifeCycle()" name="testCustomLifeCycle" duration-ms="3776" started-at="2018-11-05T07:02:46Z" description="Check custom life cycle state." finished-at="2018-11-05T07:02:50Z">
        </test-method>
        <test-method status="PASS" signature="cleanupArtifacts()" name="cleanupArtifacts" is-config="true" duration-ms="790" started-at="2018-11-05T07:02:50Z" finished-at="2018-11-05T07:02:51Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.ChangeAuthTypeOfResourceTestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="326" started-at="2018-11-05T06:48:59Z" finished-at="2018-11-05T06:48:59Z">
        </test-method>
        <test-method status="PASS" signature="testInvokeResourceWithAuthTypeApplicationAndApplicationUser()" name="testInvokeResourceWithAuthTypeApplicationAndApplicationUser" duration-ms="3986" started-at="2018-11-05T06:48:59Z" description="Invoke a resource with auth type Application And Application User" finished-at="2018-11-05T06:49:03Z">
        </test-method>
        <test-method status="PASS" signature="testInvokeResourceWithAuthTypeApplication()" name="testInvokeResourceWithAuthTypeApplication" duration-ms="15994" started-at="2018-11-05T06:49:03Z" description="Invoke a resource with auth type Application" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.ChangeAuthTypeOfResourceTestCase.testInvokeResourceWithAuthTypeApplicationAndApplicationUser" finished-at="2018-11-05T06:49:19Z">
        </test-method>
        <test-method status="PASS" signature="testInvokeGETResourceWithAuthTypeApplicationUser()" name="testInvokeGETResourceWithAuthTypeApplicationUser" duration-ms="16168" started-at="2018-11-05T06:49:19Z" description="Invoke a resource with auth type Application User" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.ChangeAuthTypeOfResourceTestCase.testInvokeResourceWithAuthTypeApplication" finished-at="2018-11-05T06:49:35Z">
        </test-method>
        <test-method status="PASS" signature="testInvokeGETResourceWithAuthTypeNone()" name="testInvokeGETResourceWithAuthTypeNone" duration-ms="15940" started-at="2018-11-05T06:49:35Z" description="Invoke a resource with auth type None" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.ChangeAuthTypeOfResourceTestCase.testInvokeGETResourceWithAuthTypeApplicationUser" finished-at="2018-11-05T06:49:51Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="1202" started-at="2018-11-05T06:49:51Z" finished-at="2018-11-05T06:49:53Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.EditAPIAndCheckUpdatedInformationTestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="299" started-at="2018-11-05T06:58:01Z" finished-at="2018-11-05T06:58:02Z">
        </test-method>
        <test-method status="PASS" signature="testEditAPIInformation()" name="testEditAPIInformation" duration-ms="18864" started-at="2018-11-05T06:58:02Z" description="Edit the API Information" finished-at="2018-11-05T06:58:21Z">
        </test-method>
        <test-method status="PASS" signature="testUpdatedAPIInformationFromAPIPublisher()" name="testUpdatedAPIInformationFromAPIPublisher" duration-ms="36" started-at="2018-11-05T06:58:21Z" description="Test whether the updated information available in the publisher " depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.EditAPIAndCheckUpdatedInformationTestCase.testEditAPIInformation" finished-at="2018-11-05T06:58:21Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="232" started-at="2018-11-05T06:58:21Z" finished-at="2018-11-05T06:58:21Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfRetireAPITestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="326" started-at="2018-11-05T06:46:02Z" finished-at="2018-11-05T06:46:03Z">
        </test-method>
        <test-method status="PASS" signature="testInvokeAPIBeforeChangeAPILifecycleToRetired()" name="testInvokeAPIBeforeChangeAPILifecycleToRetired" duration-ms="3076" started-at="2018-11-05T06:46:03Z" description="Test invocation of the APi before retire" finished-at="2018-11-05T06:46:06Z">
        </test-method>
        <test-method status="PASS" signature="testChangeAPILifecycleToDepricated()" name="testChangeAPILifecycleToDepricated" duration-ms="2091" started-at="2018-11-05T06:46:06Z" description="Change API lifecycle to Retired" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfRetireAPITestCase.testInvokeAPIBeforeChangeAPILifecycleToRetired" finished-at="2018-11-05T06:46:08Z">
        </test-method>
        <test-method status="PASS" signature="testChangeAPILifecycleToRetired()" name="testChangeAPILifecycleToRetired" duration-ms="1964" started-at="2018-11-05T06:46:08Z" description="Change API lifecycle to Retired" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfRetireAPITestCase.testChangeAPILifecycleToDepricated" finished-at="2018-11-05T06:46:10Z">
        </test-method>
        <test-method status="PASS" signature="testAvailabilityOfRetiredAPIInStore()" name="testAvailabilityOfRetiredAPIInStore" duration-ms="86" started-at="2018-11-05T06:46:10Z" description="Test the availability of retired API in the store" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfRetireAPITestCase.testChangeAPILifecycleToRetired" finished-at="2018-11-05T06:46:10Z">
        </test-method>
        <test-method status="PASS" signature="testInvokeAPIAfterChangeAPILifecycleToRetired()" name="testInvokeAPIAfterChangeAPILifecycleToRetired" duration-ms="98" started-at="2018-11-05T06:46:10Z" description="Test the invocation of the API after retire" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfRetireAPITestCase.testAvailabilityOfRetiredAPIInStore" finished-at="2018-11-05T06:46:10Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="1027" started-at="2018-11-05T06:46:10Z" finished-at="2018-11-05T06:46:11Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfBlockAPITestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="314" started-at="2018-11-05T06:44:43Z" finished-at="2018-11-05T06:44:44Z">
        </test-method>
        <test-method status="PASS" signature="testInvokeAPIBeforeChangeAPILifecycleToBlock()" name="testInvokeAPIBeforeChangeAPILifecycleToBlock" duration-ms="3519" started-at="2018-11-05T06:44:44Z" description="Test invocation of the APi before block" finished-at="2018-11-05T06:44:47Z">
        </test-method>
        <test-method status="PASS" signature="testChangeAPILifecycleToBlock()" name="testChangeAPILifecycleToBlock" duration-ms="2028" started-at="2018-11-05T06:44:47Z" description="Change API lifecycle to block" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfBlockAPITestCase.testInvokeAPIBeforeChangeAPILifecycleToBlock" finished-at="2018-11-05T06:44:49Z">
        </test-method>
        <test-method status="PASS" signature="testInvokeAPIAfterChangeAPILifecycleToBlock()" name="testInvokeAPIAfterChangeAPILifecycleToBlock" duration-ms="15022" started-at="2018-11-05T06:44:49Z" description="Invocation og the APi after block" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfBlockAPITestCase.testChangeAPILifecycleToBlock" finished-at="2018-11-05T06:45:04Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="2626" started-at="2018-11-05T06:45:04Z" finished-at="2018-11-05T06:45:07Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="897" started-at="2018-11-05T06:47:24Z" finished-at="2018-11-05T06:47:25Z">
        </test-method>
        <test-method status="PASS" signature="testDirectLinkAnonymous()" name="testDirectLinkAnonymous" duration-ms="3368" started-at="2018-11-05T06:47:25Z" description="Test availability of the api without login" finished-at="2018-11-05T06:47:28Z">
        </test-method>
        <test-method status="PASS" signature="testDirectLink()" name="testDirectLink" duration-ms="552" started-at="2018-11-05T06:47:28Z" description="Test availability of the api with login" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase.testDirectLinkAnonymous" finished-at="2018-11-05T06:47:29Z">
        </test-method>
        <test-method status="PASS" signature="testDirectLinkWithoutRestrictedRoleUser()" name="testDirectLinkWithoutRestrictedRoleUser" duration-ms="361" started-at="2018-11-05T06:47:29Z" description="Test availability of the api from user without restricted role" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase.testDirectLink" finished-at="2018-11-05T06:47:29Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreationInTenant()" name="testAPICreationInTenant" duration-ms="3466" started-at="2018-11-05T06:47:29Z" description="Sample API creation and publishing in Tenant" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase.testDirectLinkWithoutRestrictedRoleUser" finished-at="2018-11-05T06:47:33Z">
        </test-method>
        <test-method status="PASS" signature="testDirectLinkInTenantAnonymous()" name="testDirectLinkInTenantAnonymous" duration-ms="128" started-at="2018-11-05T06:47:33Z" description="Test availability of the api without login in tenant" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase.testAPICreationInTenant" finished-at="2018-11-05T06:47:33Z">
        </test-method>
        <test-method status="PASS" signature="testDirectLinkInTenant()" name="testDirectLinkInTenant" duration-ms="315" started-at="2018-11-05T06:47:33Z" description="Test availability of the api with login in tenant" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase.testDirectLinkInTenantAnonymous" finished-at="2018-11-05T06:47:33Z">
        </test-method>
        <test-method status="PASS" signature="testDirectLinkInTenantWithoutRestrictedRoleUser()" name="testDirectLinkInTenantWithoutRestrictedRoleUser" duration-ms="204" started-at="2018-11-05T06:47:33Z" description="Test availability of the api from user without restricted role in tenant" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityWithDirectURLTestCase.testDirectLinkInTenant" finished-at="2018-11-05T06:47:33Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="1023" started-at="2018-11-05T06:47:33Z" finished-at="2018-11-05T06:47:35Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="869" started-at="2018-11-05T06:46:41Z" finished-at="2018-11-05T06:46:42Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForCreatorInPublisher()" name="testVisibilityForCreatorInPublisher" duration-ms="2368" started-at="2018-11-05T06:46:42Z" description="Test the visibility of API in Publisher for API creator " finished-at="2018-11-05T06:46:44Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForCreatorInStore()" name="testVisibilityForCreatorInStore" duration-ms="16" started-at="2018-11-05T06:46:44Z" description="Test the visibility of API in Store for API creator" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForCreatorInPublisher" finished-at="2018-11-05T06:46:44Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAdminInSameDomainInPublisher()" name="testVisibilityForAdminInSameDomainInPublisher" duration-ms="25" started-at="2018-11-05T06:46:44Z" description="Test the visibility of API in Publisher for admin in same domain " depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForCreatorInStore" finished-at="2018-11-05T06:46:44Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAdminInSameDomainInStore()" name="testVisibilityForAdminInSameDomainInStore" duration-ms="15" started-at="2018-11-05T06:46:44Z" description="Test the visibility of API in Store for admin in same domain " depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForAdminInSameDomainInPublisher" finished-at="2018-11-05T06:46:44Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAnotherUserInSameDomainInPublisher()" name="testVisibilityForAnotherUserInSameDomainInPublisher" duration-ms="25" started-at="2018-11-05T06:46:44Z" description="Test the visibility of API in Publisher for another user in same domain" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForAdminInSameDomainInStore" finished-at="2018-11-05T06:46:44Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAnotherUserInSameDomainInStore()" name="testVisibilityForAnotherUserInSameDomainInStore" duration-ms="14" started-at="2018-11-05T06:46:44Z" description="Test the visibility of API in Store for another user in same domain" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForAnotherUserInSameDomainInPublisher" finished-at="2018-11-05T06:46:44Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAnotherUserInOtherDomainInPublisher()" name="testVisibilityForAnotherUserInOtherDomainInPublisher" duration-ms="7" started-at="2018-11-05T06:46:44Z" description="Test the visibility of API in Publisher for another user in other domain" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForAnotherUserInSameDomainInStore" finished-at="2018-11-05T06:46:44Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAnotherUserInOtherDomainInStore()" name="testVisibilityForAnotherUserInOtherDomainInStore" duration-ms="5" started-at="2018-11-05T06:46:44Z" description="Test the visibility of API in Store for another user in other domain" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForAnotherUserInOtherDomainInPublisher" finished-at="2018-11-05T06:46:44Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAdminInOtherDomainInPublisher()" name="testVisibilityForAdminInOtherDomainInPublisher" duration-ms="5" started-at="2018-11-05T06:46:44Z" description="Test the visibility of API in Publisher for admin in other domain" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForAnotherUserInOtherDomainInStore" finished-at="2018-11-05T06:46:44Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAdminInOtherDomainInStore()" name="testVisibilityForAdminInOtherDomainInStore" duration-ms="6" started-at="2018-11-05T06:46:44Z" description="Test the visibility of API in Store for admin in other domain" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForAdminInOtherDomainInPublisher" finished-at="2018-11-05T06:46:44Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAnonymousUserInOtherDomainInStore()" name="testVisibilityForAnonymousUserInOtherDomainInStore" duration-ms="32" started-at="2018-11-05T06:46:44Z" description="Test the visibility for API in other domainStore for anonymous user" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForAdminInOtherDomainInStore" finished-at="2018-11-05T06:46:44Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAnonymousUserInSameDomainInStore()" name="testVisibilityForAnonymousUserInSameDomainInStore" duration-ms="2050" started-at="2018-11-05T06:46:44Z" description="Test the visibility for API in Same domainStore for anonymous user" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByPublicTestCase.testVisibilityForAnonymousUserInOtherDomainInStore" finished-at="2018-11-05T06:46:46Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="328" started-at="2018-11-05T06:46:46Z" finished-at="2018-11-05T06:46:47Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.EditAPIContextAndCheckAccessibilityTestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="324" started-at="2018-11-05T06:58:21Z" finished-at="2018-11-05T06:58:21Z">
        </test-method>
        <test-method status="PASS" signature="testInvokeAPIBeforeChangeAPIContext()" name="testInvokeAPIBeforeChangeAPIContext" duration-ms="2941" started-at="2018-11-05T06:58:21Z" description="Test invoke the API before the context change" finished-at="2018-11-05T06:58:24Z">
        </test-method>
        <test-method status="PASS" signature="testEditAPIContext()" name="testEditAPIContext" duration-ms="1052" started-at="2018-11-05T06:58:24Z" description="Test changing of the API context" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.EditAPIContextAndCheckAccessibilityTestCase.testInvokeAPIBeforeChangeAPIContext" finished-at="2018-11-05T06:58:25Z">
        </test-method>
        <test-method status="PASS" signature="testInvokeAPIAfterChangeAPIContextWithOldContext()" name="testInvokeAPIAfterChangeAPIContextWithOldContext" duration-ms="15022" started-at="2018-11-05T06:58:25Z" description="Test the invocation of API using old context after Context change after the API context change" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.EditAPIContextAndCheckAccessibilityTestCase.testEditAPIContext" finished-at="2018-11-05T06:58:40Z">
        </test-method>
        <test-method status="PASS" signature="testInvokeAPIAfterChangeAPIContextWithNewContext()" name="testInvokeAPIAfterChangeAPIContextWithNewContext" duration-ms="51" started-at="2018-11-05T06:58:40Z" description="Test the invocation of API using new context after Context change" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.EditAPIContextAndCheckAccessibilityTestCase.testInvokeAPIAfterChangeAPIContextWithOldContext" finished-at="2018-11-05T06:58:40Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="554" started-at="2018-11-05T06:58:40Z" finished-at="2018-11-05T06:58:41Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.header.CORSHeadersTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="5118" started-at="2018-11-05T07:02:07Z" finished-at="2018-11-05T07:02:13Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="3703" started-at="2018-11-05T07:02:13Z" finished-at="2018-11-05T07:02:16Z">
        </test-method>
        <test-method status="PASS" signature="CheckCORSHeadersInPreFlightResponse()" name="CheckCORSHeadersInPreFlightResponse" duration-ms="24" started-at="2018-11-05T07:02:16Z" description="Checking CORS headers in pre-flight response" finished-at="2018-11-05T07:02:16Z">
        </test-method>
        <test-method status="PASS" signature="CheckCORSHeadersInPreFlightResponse()" name="CheckCORSHeadersInPreFlightResponse" duration-ms="22" started-at="2018-11-05T07:02:16Z" description="Checking CORS headers in pre-flight response" finished-at="2018-11-05T07:02:16Z">
        </test-method>
        <test-method status="PASS" signature="CheckCORSHeadersInResponse()" name="CheckCORSHeadersInResponse" duration-ms="96" started-at="2018-11-05T07:02:16Z" description="Checking CORS headers in response" depends-on-methods="org.wso2.am.integration.tests.header.CORSHeadersTestCase.CheckCORSHeadersInPreFlightResponse" finished-at="2018-11-05T07:02:16Z">
        </test-method>
        <test-method status="PASS" signature="CheckCORSHeadersInResponse()" name="CheckCORSHeadersInResponse" duration-ms="133" started-at="2018-11-05T07:02:16Z" description="Checking CORS headers in response" depends-on-methods="org.wso2.am.integration.tests.header.CORSHeadersTestCase.CheckCORSHeadersInPreFlightResponse" finished-at="2018-11-05T07:02:17Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="557" started-at="2018-11-05T07:02:17Z" finished-at="2018-11-05T07:02:17Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="364" started-at="2018-11-05T07:02:17Z" finished-at="2018-11-05T07:02:17Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.NewVersionUpdateTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="505" started-at="2018-11-05T07:01:23Z" finished-at="2018-11-05T07:01:24Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="335" started-at="2018-11-05T07:01:24Z" finished-at="2018-11-05T07:01:24Z">
        </test-method>
        <test-method status="PASS" signature="testAPINewVersionCreation()" name="testAPINewVersionCreation" duration-ms="4820" started-at="2018-11-05T07:01:24Z" description="Create new version and publish" finished-at="2018-11-05T07:01:29Z">
        </test-method>
        <test-method status="PASS" signature="testAPINewVersionCreation()" name="testAPINewVersionCreation" duration-ms="5559" started-at="2018-11-05T07:01:29Z" description="Create new version and publish" finished-at="2018-11-05T07:01:35Z">
        </test-method>
        <test-method status="PASS" signature="testNewVersionAPIUpdate()" name="testNewVersionAPIUpdate" duration-ms="15553" started-at="2018-11-05T07:01:35Z" description="Update new version api with endpoint" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.NewVersionUpdateTestCase.testAPINewVersionCreation" finished-at="2018-11-05T07:01:50Z">
        </test-method>
        <test-method status="PASS" signature="testNewVersionAPIUpdate()" name="testNewVersionAPIUpdate" duration-ms="15739" started-at="2018-11-05T07:01:50Z" description="Update new version api with endpoint" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.NewVersionUpdateTestCase.testAPINewVersionCreation" finished-at="2018-11-05T07:02:06Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="1106" started-at="2018-11-05T07:02:06Z" finished-at="2018-11-05T07:02:07Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="454" started-at="2018-11-05T07:02:07Z" finished-at="2018-11-05T07:02:07Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.ChangeEndPointSecurityOfAPITestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="304" started-at="2018-11-05T06:49:53Z" finished-at="2018-11-05T06:49:53Z">
        </test-method>
        <test-method status="PASS" signature="testInvokeGETResourceWithSecuredEndPointPasswordOnlyNumbersAndLetters()" name="testInvokeGETResourceWithSecuredEndPointPasswordOnlyNumbersAndLetters" duration-ms="2844" started-at="2018-11-05T06:49:53Z" description="Test the API with endpoint security enabled with simple password that only has characters and numbers" finished-at="2018-11-05T06:49:56Z">
        </test-method>
        <test-method status="PASS" signature="testInvokeGETResourceWithSecuredEndPointComplexPassword()" name="testInvokeGETResourceWithSecuredEndPointComplexPassword" duration-ms="485025" started-at="2018-11-05T06:49:56Z" description="Test the API with endpoint security enabled with complex password" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.ChangeEndPointSecurityOfAPITestCase.testInvokeGETResourceWithSecuredEndPointPasswordOnlyNumbersAndLetters" finished-at="2018-11-05T06:58:01Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="563" started-at="2018-11-05T06:58:01Z" finished-at="2018-11-05T06:58:01Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithOutReSubscriptionTestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="520" started-at="2018-11-05T06:45:17Z" finished-at="2018-11-05T06:45:17Z">
        </test-method>
        <test-method status="PASS" signature="testSubscriptionOfOldAPI()" name="testSubscriptionOfOldAPI" duration-ms="2720" started-at="2018-11-05T06:45:17Z" description="Test subscribe of old api version." finished-at="2018-11-05T06:45:20Z">
        </test-method>
        <test-method status="PASS" signature="testPublishCopiedAPIWithOutReSubscriptionRequired()" name="testPublishCopiedAPIWithOutReSubscriptionRequired" duration-ms="2927" started-at="2018-11-05T06:45:20Z" description="Test publishing of copied API with out re-subscription required" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithOutReSubscriptionTestCase.testSubscriptionOfOldAPI" finished-at="2018-11-05T06:45:23Z">
        </test-method>
        <test-method status="PASS" signature="testInvokeNewAPIWithoutSubscribeTheNewVersion()" name="testInvokeNewAPIWithoutSubscribeTheNewVersion" duration-ms="1131" started-at="2018-11-05T06:45:23Z" description="Test invocation of new API version before the new version is subscribed." depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithOutReSubscriptionTestCase.testPublishCopiedAPIWithOutReSubscriptionRequired" finished-at="2018-11-05T06:45:24Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="1276" started-at="2018-11-05T06:45:24Z" finished-at="2018-11-05T06:45:25Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithReSubscriptionTestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="438" started-at="2018-11-05T06:45:25Z" finished-at="2018-11-05T06:45:26Z">
        </test-method>
        <test-method status="PASS" signature="testSubscriptionOfOldAPI()" name="testSubscriptionOfOldAPI" duration-ms="2394" started-at="2018-11-05T06:45:26Z" description="Test subscribe of old api version." finished-at="2018-11-05T06:45:28Z">
        </test-method>
        <test-method status="PASS" signature="testPublishCopiedAPIWithReSubscriptionRequired()" name="testPublishCopiedAPIWithReSubscriptionRequired" duration-ms="2799" started-at="2018-11-05T06:45:28Z" description="Test publishing of copied API with re-subscription required" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithReSubscriptionTestCase.testSubscriptionOfOldAPI" finished-at="2018-11-05T06:45:31Z">
        </test-method>
        <test-method status="PASS" signature="testInvokeOldAPIBeforeSubscribeTheNewVersion()" name="testInvokeOldAPIBeforeSubscribeTheNewVersion" duration-ms="692" started-at="2018-11-05T06:45:31Z" description="Test invocation of old API version  before the new version is subscribed." depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithReSubscriptionTestCase.testPublishCopiedAPIWithReSubscriptionRequired" finished-at="2018-11-05T06:45:31Z">
        </test-method>
        <test-method status="PASS" signature="testInvokeNewAPIBeforeSubscribeTheNewVersion()" name="testInvokeNewAPIBeforeSubscribeTheNewVersion" duration-ms="42" started-at="2018-11-05T06:45:31Z" description="Test invocation of new API version  before the new version is subscribed.This invocation should be failed" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithReSubscriptionTestCase.testInvokeOldAPIBeforeSubscribeTheNewVersion" finished-at="2018-11-05T06:45:31Z">
        </test-method>
        <test-method status="PASS" signature="testSubscribeTheNewVersion()" name="testSubscribeTheNewVersion" duration-ms="54" started-at="2018-11-05T06:45:31Z" description="Test subscribe the new API Version" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithReSubscriptionTestCase.testInvokeNewAPIBeforeSubscribeTheNewVersion" finished-at="2018-11-05T06:45:32Z">
        </test-method>
        <test-method status="PASS" signature="testInvokeNewAPIAfterSubscribeTheNewVersion()" name="testInvokeNewAPIAfterSubscribeTheNewVersion" duration-ms="30065" started-at="2018-11-05T06:45:32Z" description="Test invocation of new API version  after the new version is subscribed." depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfOldAPIAndCopyAPIWithReSubscriptionTestCase.testSubscribeTheNewVersion" finished-at="2018-11-05T06:46:02Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="815" started-at="2018-11-05T06:46:02Z" finished-at="2018-11-05T06:46:02Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.token.InvalidTokenTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="236" started-at="2018-11-05T07:02:59Z" finished-at="2018-11-05T07:02:59Z">
        </test-method>
        <test-method status="PASS" signature="testAPIAccessWithInvalidToken()" name="testAPIAccessWithInvalidToken" duration-ms="2447" started-at="2018-11-05T07:02:59Z" description="Check functionality of API access with invalid token" finished-at="2018-11-05T07:03:02Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="371" started-at="2018-11-05T07:03:02Z" finished-at="2018-11-05T07:03:02Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="181" started-at="2018-11-05T07:03:02Z" finished-at="2018-11-05T07:03:02Z">
        </test-method>
        <test-method status="PASS" signature="testAPIAccessWithInvalidToken()" name="testAPIAccessWithInvalidToken" duration-ms="2821" started-at="2018-11-05T07:03:02Z" description="Check functionality of API access with invalid token" finished-at="2018-11-05T07:03:05Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="384" started-at="2018-11-05T07:03:05Z" finished-at="2018-11-05T07:03:06Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="857" started-at="2018-11-05T06:45:07Z" finished-at="2018-11-05T06:45:08Z">
        </test-method>
        <test-method status="PASS" signature="testSubscribeOldVersionBeforeDeprecate()" name="testSubscribeOldVersionBeforeDeprecate" duration-ms="5366" started-at="2018-11-05T06:45:08Z" description="Test subscribe of old API version before deprecate the old version" finished-at="2018-11-05T06:45:13Z">
        </test-method>
        <test-method status="PASS" signature="testSubscribeNewVersion()" name="testSubscribeNewVersion" duration-ms="47" started-at="2018-11-05T06:45:13Z" description="Test subscribe of new API version before deprecate the old version" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase.testSubscribeOldVersionBeforeDeprecate" finished-at="2018-11-05T06:45:13Z">
        </test-method>
        <test-method status="PASS" signature="testDeprecateOldVersion()" name="testDeprecateOldVersion" duration-ms="1846" started-at="2018-11-05T06:45:13Z" description="Test deprecate old api version" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase.testSubscribeNewVersion" finished-at="2018-11-05T06:45:15Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityOfOldAPIInStoreAfterDeprecate()" name="testVisibilityOfOldAPIInStoreAfterDeprecate" duration-ms="230" started-at="2018-11-05T06:45:15Z" description="Test the visibility of API in the store after API deprecate." depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase.testDeprecateOldVersion" finished-at="2018-11-05T06:45:15Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityOfNewAPIInStore()" name="testVisibilityOfNewAPIInStore" duration-ms="38" started-at="2018-11-05T06:45:15Z" description="Test the visibility of API in the store after API deprecate." depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase.testVisibilityOfOldAPIInStoreAfterDeprecate" finished-at="2018-11-05T06:45:15Z">
        </test-method>
        <test-method status="PASS" signature="testSubscribeOldVersionAfterDeprecate()" name="testSubscribeOldVersionAfterDeprecate" duration-ms="52" started-at="2018-11-05T06:45:15Z" description="Test the subscription of deprecated API version." depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase.testVisibilityOfNewAPIInStore" finished-at="2018-11-05T06:45:15Z">
        </test-method>
        <test-method status="PASS" signature="testAccessibilityOfDeprecateOldAPIAndPublishedCopyAPI()" name="testAccessibilityOfDeprecateOldAPIAndPublishedCopyAPI" duration-ms="371" started-at="2018-11-05T06:45:15Z" description="Test the invocation of both deprecated old and  publish new API versions" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AccessibilityOfDeprecatedOldAPIAndPublishedCopyAPITestCase.testSubscribeOldVersionAfterDeprecate" finished-at="2018-11-05T06:45:16Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="863" started-at="2018-11-05T06:45:16Z" finished-at="2018-11-05T06:45:17Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.sequence.DefaultEndpointTestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="670" started-at="2018-11-05T07:02:22Z" finished-at="2018-11-05T07:02:23Z">
        </test-method>
        <test-method status="PASS" signature="testAPIInvocationAfterAddingDynamicEndpoint()" name="testAPIInvocationAfterAddingDynamicEndpoint" duration-ms="18749" started-at="2018-11-05T07:02:23Z" description="Invoke the API after adding the default endpoint" finished-at="2018-11-05T07:02:42Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.APITagVisibilityByRoleTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="339" started-at="2018-11-05T06:59:31Z" finished-at="2018-11-05T06:59:31Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="400" started-at="2018-11-05T06:59:31Z" finished-at="2018-11-05T06:59:32Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreationWithVisibility()" name="testAPICreationWithVisibility" duration-ms="4947" started-at="2018-11-05T06:59:32Z" description="Create and publish two apis with public and role based visibility" finished-at="2018-11-05T06:59:36Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreationWithVisibility()" name="testAPICreationWithVisibility" duration-ms="4695" started-at="2018-11-05T06:59:36Z" description="Create and publish two apis with public and role based visibility" finished-at="2018-11-05T06:59:41Z">
        </test-method>
        <test-method status="PASS" signature="testAPITagVisibilityAnonymousUser()" name="testAPITagVisibilityAnonymousUser" duration-ms="45371" started-at="2018-11-05T06:59:41Z" description="Test the API tag visibility as a anonymous user" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APITagVisibilityByRoleTestCase.testAPICreationWithVisibility" finished-at="2018-11-05T07:00:27Z">
        </test-method>
        <test-method status="PASS" signature="testAPITagVisibilityAnonymousUser()" name="testAPITagVisibilityAnonymousUser" duration-ms="45242" started-at="2018-11-05T07:00:27Z" description="Test the API tag visibility as a anonymous user" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APITagVisibilityByRoleTestCase.testAPICreationWithVisibility" finished-at="2018-11-05T07:01:12Z">
        </test-method>
        <test-method status="PASS" signature="testAPITagVisibilityAuthorisedUser()" name="testAPITagVisibilityAuthorisedUser" duration-ms="5195" started-at="2018-11-05T07:01:12Z" description="Test the API tag visibility as a authorised user" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APITagVisibilityByRoleTestCase.testAPITagVisibilityAnonymousUser" finished-at="2018-11-05T07:01:17Z">
        </test-method>
        <test-method status="PASS" signature="testAPITagVisibilityAuthorisedUser()" name="testAPITagVisibilityAuthorisedUser" duration-ms="5188" started-at="2018-11-05T07:01:17Z" description="Test the API tag visibility as a authorised user" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APITagVisibilityByRoleTestCase.testAPITagVisibilityAnonymousUser" finished-at="2018-11-05T07:01:22Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="550" started-at="2018-11-05T07:01:22Z" finished-at="2018-11-05T07:01:23Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="710" started-at="2018-11-05T07:01:23Z" finished-at="2018-11-05T07:01:23Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.ScriptMediatorTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="1861" started-at="2018-11-05T07:02:44Z" finished-at="2018-11-05T07:02:45Z">
        </test-method>
        <test-method status="PASS" signature="testScriptMediatorWithNullObject()" name="testScriptMediatorWithNullObject" duration-ms="220" started-at="2018-11-05T07:02:45Z" description="Check whether the script mediator works when a null object is returned in the json" finished-at="2018-11-05T07:02:46Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.APIInvocationWithSimilarResourcesAndDifferentVerbsTestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="1811" started-at="2018-11-05T07:02:17Z" finished-at="2018-11-05T07:02:19Z">
        </test-method>
        <test-method status="PASS" signature="testInvokeAllResources()" name="testInvokeAllResources" duration-ms="2808" started-at="2018-11-05T07:02:19Z" description="Invoke all resources and verbs that are valid" finished-at="2018-11-05T07:02:22Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="369" started-at="2018-11-05T07:02:22Z" finished-at="2018-11-05T07:02:22Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.RegistryLifeCycleInclusionTest">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="372" started-at="2018-11-05T06:58:47Z" finished-at="2018-11-05T06:58:48Z">
        </test-method>
        <test-method status="PASS" signature="testAPIInfoLifecycleTabForPublishedAPI()" name="testAPIInfoLifecycleTabForPublishedAPI" duration-ms="3288" started-at="2018-11-05T06:58:48Z" description="Test LC tab of an published api" finished-at="2018-11-05T06:58:51Z">
        </test-method>
        <test-method status="PASS" signature="testChecklistItemsVisibility()" name="testChecklistItemsVisibility" duration-ms="1836" started-at="2018-11-05T06:58:51Z" description="Test checklist item visibility for new version of an api" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.RegistryLifeCycleInclusionTest.testAPIInfoLifecycleTabForPublishedAPI" finished-at="2018-11-05T06:58:53Z">
        </test-method>
        <test-method status="PASS" signature="testLCStateChengeVisibility()" name="testLCStateChengeVisibility" duration-ms="36925" started-at="2018-11-05T06:58:53Z" description="Test LC state change visibility in the LC tab in publisher" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.RegistryLifeCycleInclusionTest.testChecklistItemsVisibility" finished-at="2018-11-05T06:59:30Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="884" started-at="2018-11-05T06:59:30Z" finished-at="2018-11-05T06:59:31Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.UsersAndDocsInAPIOverviewTestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="339" started-at="2018-11-05T06:58:41Z" finished-at="2018-11-05T06:58:41Z">
        </test-method>
        <test-method status="PASS" signature="testNumberOfUsersInAPIOverview()" name="testNumberOfUsersInAPIOverview" duration-ms="4867" started-at="2018-11-05T06:58:41Z" description="test the user count in API overview is correct" finished-at="2018-11-05T06:58:46Z">
        </test-method>
        <test-method status="PASS" signature="testUsersInformationInUserTabInAPIOverview()" name="testUsersInformationInUserTabInAPIOverview" duration-ms="242" started-at="2018-11-05T06:58:46Z" description="test user information in API overview Users tab is correct" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.UsersAndDocsInAPIOverviewTestCase.testNumberOfUsersInAPIOverview" finished-at="2018-11-05T06:58:46Z">
        </test-method>
        <test-method status="PASS" signature="testDocInformationInDocsTabInAPIOverview()" name="testDocInformationInDocsTabInAPIOverview" duration-ms="831" started-at="2018-11-05T06:58:46Z" description="test user information in API overview Docs tab is correct" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.UsersAndDocsInAPIOverviewTestCase.testUsersInformationInUserTabInAPIOverview" finished-at="2018-11-05T06:58:47Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="437" started-at="2018-11-05T06:58:47Z" finished-at="2018-11-05T06:58:47Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="1670" started-at="2018-11-05T06:46:47Z" finished-at="2018-11-05T06:46:48Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForCreatorInPublisher()" name="testVisibilityForCreatorInPublisher" duration-ms="34923" started-at="2018-11-05T06:46:48Z" description="Test the visibility of API in Publisher for API creator " finished-at="2018-11-05T06:47:23Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAdminUserWithAdminAndSubscriberRoleInSameDomainInStore()" name="testVisibilityForAdminUserWithAdminAndSubscriberRoleInSameDomainInStore" duration-ms="24" started-at="2018-11-05T06:47:23Z" description="Test the visibility of API in Store for admin in same domain " depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForCreatorInPublisher" finished-at="2018-11-05T06:47:23Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAnotherUserWithAdminAndSubscriberRoleInSameDomainInPublisher()" name="testVisibilityForAnotherUserWithAdminAndSubscriberRoleInSameDomainInPublisher" duration-ms="37" started-at="2018-11-05T06:47:23Z" description="Test the visibility of API in Publisher for another user in same domain" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAdminUserWithAdminAndSubscriberRoleInSameDomainInStore" finished-at="2018-11-05T06:47:23Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAnotherUserWithAdminAndSubscriberRoleInSameDomainInStore()" name="testVisibilityForAnotherUserWithAdminAndSubscriberRoleInSameDomainInStore" duration-ms="22" started-at="2018-11-05T06:47:23Z" description="Test the visibility of API in Store for another user in same domain" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAnotherUserWithAdminAndSubscriberRoleInSameDomainInPublisher" finished-at="2018-11-05T06:47:23Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAnotherUserWithAdminAndSubscriberRoleInOtherDomainInPublisher()" name="testVisibilityForAnotherUserWithAdminAndSubscriberRoleInOtherDomainInPublisher" duration-ms="3" started-at="2018-11-05T06:47:23Z" description="Test the visibility of API in Publisher for another user in other domain" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAnotherUserWithAdminAndSubscriberRoleInSameDomainInStore" finished-at="2018-11-05T06:47:23Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAnotherUserWithAdminAndSubscriberRoleInOtherDomainInStore()" name="testVisibilityForAnotherUserWithAdminAndSubscriberRoleInOtherDomainInStore" duration-ms="5" started-at="2018-11-05T06:47:23Z" description="Test the visibility of API in Store for another user in other domain" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAnotherUserWithAdminAndSubscriberRoleInOtherDomainInPublisher" finished-at="2018-11-05T06:47:23Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAdminWithAdminAndSubscriberRoleInOtherDomainInPublisher()" name="testVisibilityForAdminWithAdminAndSubscriberRoleInOtherDomainInPublisher" duration-ms="6" started-at="2018-11-05T06:47:23Z" description="Test the visibility of API in Publisher for admin in other domain" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAnotherUserWithAdminAndSubscriberRoleInOtherDomainInStore" finished-at="2018-11-05T06:47:23Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAdminWithAdminAndSubscriberRoleInOtherDomainInStore()" name="testVisibilityForAdminWithAdminAndSubscriberRoleInOtherDomainInStore" duration-ms="49" started-at="2018-11-05T06:47:23Z" description="Test the visibility of API in Store for admin in other domain" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAdminWithAdminAndSubscriberRoleInOtherDomainInPublisher" finished-at="2018-11-05T06:47:24Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAnotherUserWithSubscriberRoleInSameDomainInStore()" name="testVisibilityForAnotherUserWithSubscriberRoleInSameDomainInStore" duration-ms="59" started-at="2018-11-05T06:47:24Z" description="Test the visibility of API in Store for another user in same domain" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAdminWithAdminAndSubscriberRoleInOtherDomainInStore" finished-at="2018-11-05T06:47:24Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAnotherUserWithSubscriberRoleInOtherDomainInStore()" name="testVisibilityForAnotherUserWithSubscriberRoleInOtherDomainInStore" duration-ms="4" started-at="2018-11-05T06:47:24Z" description="Test the visibility of API in Store for another user in same domain" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAnotherUserWithSubscriberRoleInSameDomainInStore" finished-at="2018-11-05T06:47:24Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAnonymousUserInOtherDomainInStore()" name="testVisibilityForAnonymousUserInOtherDomainInStore" duration-ms="16" started-at="2018-11-05T06:47:24Z" description="Test the visibility for API in other domainStore for anonymous user" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAnotherUserWithSubscriberRoleInOtherDomainInStore" finished-at="2018-11-05T06:47:24Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAnonymousUserInSameDomainInStore()" name="testVisibilityForAnonymousUserInSameDomainInStore" duration-ms="10" started-at="2018-11-05T06:47:24Z" description="Test the visibility for API in Same domainStore for anonymous user" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForAnonymousUserInOtherDomainInStore" finished-at="2018-11-05T06:47:24Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForCreatorInStore()" name="testVisibilityForCreatorInStore" duration-ms="22" started-at="2018-11-05T06:47:24Z" description="Test the visibility of API in Store for API creator" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByRoleTestCase.testVisibilityForCreatorInPublisher" finished-at="2018-11-05T06:47:24Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="533" started-at="2018-11-05T06:47:24Z" finished-at="2018-11-05T06:47:24Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.APIMANAGER5337SubscriptionRetainTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="1718" started-at="2018-11-05T07:02:51Z" finished-at="2018-11-05T07:02:52Z">
        </test-method>
        <test-method status="PASS" signature="testAPIErrorResponse()" name="testAPIErrorResponse" duration-ms="6141" started-at="2018-11-05T07:02:52Z" description="testing error responses" finished-at="2018-11-05T07:02:58Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="662" started-at="2018-11-05T07:02:58Z" finished-at="2018-11-05T07:02:59Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="1053" started-at="2018-11-05T06:46:22Z" finished-at="2018-11-05T06:46:23Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForCreatorInPublisher()" name="testVisibilityForCreatorInPublisher" duration-ms="17326" started-at="2018-11-05T06:46:23Z" description="Test the visibility of API in Publisher for API creator " finished-at="2018-11-05T06:46:40Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForCreatorInStore()" name="testVisibilityForCreatorInStore" duration-ms="17" started-at="2018-11-05T06:46:40Z" description="Test the visibility of API in Store for API creator" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForCreatorInPublisher" finished-at="2018-11-05T06:46:40Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAdminInSameDomainInPublisher()" name="testVisibilityForAdminInSameDomainInPublisher" duration-ms="27" started-at="2018-11-05T06:46:40Z" description="Test the visibility of API in Publisher for admin in same domain " depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForCreatorInStore" finished-at="2018-11-05T06:46:40Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAdminInSameDomainInStore()" name="testVisibilityForAdminInSameDomainInStore" duration-ms="13" started-at="2018-11-05T06:46:40Z" description="Test the visibility of API in Store for admin in same domain " depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForAdminInSameDomainInPublisher" finished-at="2018-11-05T06:46:40Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAnotherUserInSameDomainInPublisher()" name="testVisibilityForAnotherUserInSameDomainInPublisher" duration-ms="25" started-at="2018-11-05T06:46:40Z" description="Test the visibility of API in Publisher for another user in same domain" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForAdminInSameDomainInStore" finished-at="2018-11-05T06:46:40Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAnotherUserInSameDomainInStore()" name="testVisibilityForAnotherUserInSameDomainInStore" duration-ms="28" started-at="2018-11-05T06:46:40Z" description="Test the visibility of API in Store for another user in same domain" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForAnotherUserInSameDomainInPublisher" finished-at="2018-11-05T06:46:40Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAnotherUserInOtherDomainInPublisher()" name="testVisibilityForAnotherUserInOtherDomainInPublisher" duration-ms="5" started-at="2018-11-05T06:46:40Z" description="Test the visibility of API in Publisher for another user in other domain" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForAnotherUserInSameDomainInStore" finished-at="2018-11-05T06:46:40Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAnotherUserInOtherDomainInStore()" name="testVisibilityForAnotherUserInOtherDomainInStore" duration-ms="25" started-at="2018-11-05T06:46:40Z" description="Test the visibility of API in Store for another user in other domain" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForAnotherUserInOtherDomainInPublisher" finished-at="2018-11-05T06:46:40Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAdminInOtherDomainInPublisher()" name="testVisibilityForAdminInOtherDomainInPublisher" duration-ms="40" started-at="2018-11-05T06:46:40Z" description="Test the visibility of API in Publisher for admin in other domain" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForAnotherUserInOtherDomainInStore" finished-at="2018-11-05T06:46:40Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAdminInOtherDomainInStore()" name="testVisibilityForAdminInOtherDomainInStore" duration-ms="10" started-at="2018-11-05T06:46:40Z" description="Test the visibility of API in Store for admin in other domain" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForAdminInOtherDomainInPublisher" finished-at="2018-11-05T06:46:40Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAnonymousUserInSameDomainInStore()" name="testVisibilityForAnonymousUserInSameDomainInStore" duration-ms="41" started-at="2018-11-05T06:46:40Z" description="Test the visibility for API in Same domainStore for anonymous user" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForAdminInOtherDomainInStore" finished-at="2018-11-05T06:46:40Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityForAnonymousUserInOtherDomainInStore()" name="testVisibilityForAnonymousUserInOtherDomainInStore" duration-ms="33" started-at="2018-11-05T06:46:40Z" description="Test the visibility for API in other domainStore for anonymous user" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.APIVisibilityByDomainTestCase.testVisibilityForAnonymousUserInSameDomainInStore" finished-at="2018-11-05T06:46:40Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="559" started-at="2018-11-05T06:46:40Z" finished-at="2018-11-05T06:46:41Z">
        </test-method>
      </class>
    </test>
    <test name="apim-integration-tests-api-common" duration-ms="94217" started-at="2018-11-05T06:42:12Z" finished-at="2018-11-05T06:43:46Z">
      <class name="org.wso2.am.integration.tests.api.lifecycle.AddEditRemoveRESTResourceTestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="437" started-at="2018-11-05T06:42:31Z" finished-at="2018-11-05T06:42:32Z">
        </test-method>
        <test-method status="PASS" signature="testInvokeGETResource()" name="testInvokeGETResource" duration-ms="2375" started-at="2018-11-05T06:42:32Z" description="Test the invocation of GET resource" finished-at="2018-11-05T06:42:34Z">
        </test-method>
        <test-method status="PASS" signature="testInvokePOSTResourceBeforeAddingPOSTResource()" name="testInvokePOSTResourceBeforeAddingPOSTResource" duration-ms="31" started-at="2018-11-05T06:42:34Z" description="Test the invocation of POST resource, before adding a POSt resource" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AddEditRemoveRESTResourceTestCase.testInvokeGETResource" finished-at="2018-11-05T06:42:34Z">
        </test-method>
        <test-method status="PASS" signature="testInvokePOSTAndGETResourceAfterAddingPOSTResource()" name="testInvokePOSTAndGETResourceAfterAddingPOSTResource" duration-ms="17056" started-at="2018-11-05T06:42:34Z" description="Test the invocation of POST and GET resource, after adding a POST resource" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AddEditRemoveRESTResourceTestCase.testInvokePOSTResourceBeforeAddingPOSTResource" finished-at="2018-11-05T06:42:51Z">
        </test-method>
        <test-method status="PASS" signature="testInvokePOSTAndGetResourceAfterAddingURLPattern()" name="testInvokePOSTAndGetResourceAfterAddingURLPattern" duration-ms="18867" started-at="2018-11-05T06:42:51Z" description="Test the invocation of POST and GET resource, after adding a URL pattern" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AddEditRemoveRESTResourceTestCase.testInvokePOSTAndGETResourceAfterAddingPOSTResource" finished-at="2018-11-05T06:43:10Z">
        </test-method>
        <test-method status="PASS" signature="testInvokeGETAndPOSTResourceAfterRemovePOSTResource()" name="testInvokeGETAndPOSTResourceAfterRemovePOSTResource" duration-ms="16841" started-at="2018-11-05T06:43:10Z" description="Test the invocation of POST and GET resource, after Remove POST resource" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AddEditRemoveRESTResourceTestCase.testInvokePOSTAndGetResourceAfterAddingURLPattern" finished-at="2018-11-05T06:43:27Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.ChangeAPIEndPointURLTestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="305" started-at="2018-11-05T06:43:28Z" finished-at="2018-11-05T06:43:28Z">
        </test-method>
        <test-method status="PASS" signature="testAPIInvocationBeforeChangeTheEndPointURL()" name="testAPIInvocationBeforeChangeTheEndPointURL" duration-ms="29" depends-on-groups="webapp" started-at="2018-11-05T06:43:28Z" description="Test  invocation of API before change the  api end point URL." finished-at="2018-11-05T06:43:28Z">
        </test-method>
        <test-method name="testEditEndPointURL" signature="testEditEndPointURL()" depends-on-groups="webapp" status="PASS" duration-ms="16564" finished-at="2018-11-05T06:43:45Z" started-at="2018-11-05T06:43:28Z" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.ChangeAPIEndPointURLTestCase.testAPIInvocationBeforeChangeTheEndPointURL" description="Test changing of the API end point URL">
        </test-method>
        <test-method name="testInvokeAPIAfterChangeAPIEndPointURLWithNewEndPointURL" signature="testInvokeAPIAfterChangeAPIEndPointURLWithNewEndPointURL()" depends-on-groups="webapp" status="PASS" duration-ms="144" finished-at="2018-11-05T06:43:45Z" started-at="2018-11-05T06:43:45Z" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.ChangeAPIEndPointURLTestCase.testEditEndPointURL" description="Test the invocation of API using new end point URL  after end point URL  change">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.AdvancedWebAppDeploymentConfig">
        <test-method status="PASS" signature="deployWebApps()" name="deployWebApps" is-config="true" duration-ms="19682" started-at="2018-11-05T06:42:12Z" finished-at="2018-11-05T06:42:31Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="1071" started-at="2018-11-05T06:43:45Z" finished-at="2018-11-05T06:43:46Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.PluggableVersioningStrategyTestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="777" started-at="2018-11-05T06:43:27Z" finished-at="2018-11-05T06:43:28Z">
        </test-method>
        <test-method status="PASS" signature="testPluggableVersioningStratergy()" name="testPluggableVersioningStratergy" duration-ms="26" started-at="2018-11-05T06:43:28Z" description="This test method tests the pluggable versioning stratergy" finished-at="2018-11-05T06:43:28Z">
        </test-method>
      </class>
    </test>
    <test name="apim-CORS-tests" duration-ms="430120" started-at="2018-11-05T07:04:42Z" finished-at="2018-11-05T07:11:52Z">
      <class name="org.wso2.am.integration.tests.header.CORSAccessControlAllowCredentialsHeaderTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="1732" started-at="2018-11-05T07:04:42Z" finished-at="2018-11-05T07:04:44Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="260" started-at="2018-11-05T07:04:44Z" finished-at="2018-11-05T07:04:44Z">
        </test-method>
        <test-method status="PASS" signature="CheckAccessControlAllowCredentialsHeadersWithAnyOrigin()" name="CheckAccessControlAllowCredentialsHeadersWithAnyOrigin" duration-ms="130440" started-at="2018-11-05T07:04:44Z" description="Checking Access-Control-Allow-Credentials header in response when Access-Control-Allow-Origin is &#039;*&#039;" finished-at="2018-11-05T07:06:55Z">
        </test-method>
        <test-method status="PASS" signature="CheckAccessControlAllowCredentialsHeadersWithAnyOrigin()" name="CheckAccessControlAllowCredentialsHeadersWithAnyOrigin" duration-ms="9075" started-at="2018-11-05T07:06:55Z" description="Checking Access-Control-Allow-Credentials header in response when Access-Control-Allow-Origin is &#039;*&#039;" finished-at="2018-11-05T07:07:04Z">
        </test-method>
        <test-method status="PASS" signature="CheckAccessControlAllowCredentialsHeadersWithSpecificOrigin()" name="CheckAccessControlAllowCredentialsHeadersWithSpecificOrigin" duration-ms="140207" started-at="2018-11-05T07:07:04Z" description="Checking Access-Control-Allow-Credentials header in response when Access-Control-Allow-Origin is &#039;http://localhost&#039;" depends-on-methods="org.wso2.am.integration.tests.header.CORSAccessControlAllowCredentialsHeaderTestCase.CheckAccessControlAllowCredentialsHeadersWithAnyOrigin" finished-at="2018-11-05T07:09:24Z">
        </test-method>
        <test-method status="PASS" signature="CheckAccessControlAllowCredentialsHeadersWithSpecificOrigin()" name="CheckAccessControlAllowCredentialsHeadersWithSpecificOrigin" duration-ms="8090" started-at="2018-11-05T07:09:24Z" description="Checking Access-Control-Allow-Credentials header in response when Access-Control-Allow-Origin is &#039;http://localhost&#039;" depends-on-methods="org.wso2.am.integration.tests.header.CORSAccessControlAllowCredentialsHeaderTestCase.CheckAccessControlAllowCredentialsHeadersWithAnyOrigin" finished-at="2018-11-05T07:09:32Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="134204" started-at="2018-11-05T07:09:32Z" finished-at="2018-11-05T07:11:46Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="6112" started-at="2018-11-05T07:11:46Z" finished-at="2018-11-05T07:11:52Z">
        </test-method>
      </class>
    </test>
    <test name="apim-publisher-tests" duration-ms="214383" started-at="2018-11-05T07:48:34Z" finished-at="2018-11-05T07:52:08Z">
      <class name="org.wso2.am.integration.tests.prototype.APIM24VisibilityOfPrototypedAPIOfDifferentViewInStoreTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="339" started-at="2018-11-05T07:48:34Z" finished-at="2018-11-05T07:48:34Z">
        </test-method>
        <test-method status="PASS" signature="testOpenAlreadySavedAPIAndDeployedAsAPrototyped()" name="testOpenAlreadySavedAPIAndDeployedAsAPrototyped" duration-ms="24366" started-at="2018-11-05T07:48:34Z" description="Open already Saved API in design stage and Deploy it as a prototype and check the visibility of prototyped API In store" finished-at="2018-11-05T07:48:59Z">
        </test-method>
        <test-method status="PASS" signature="testPrototypedAPIVisibilityInGeneralAPI()" name="testPrototypedAPIVisibilityInGeneralAPI" duration-ms="113" started-at="2018-11-05T07:48:59Z" description="API deployed as a prototype and check the visibility in general store" depends-on-methods="org.wso2.am.integration.tests.prototype.APIM24VisibilityOfPrototypedAPIOfDifferentViewInStoreTestCase.testOpenAlreadySavedAPIAndDeployedAsAPrototyped" finished-at="2018-11-05T07:48:59Z">
        </test-method>
        <test-method status="PASS" signature="testPrototypedAPIVisibilityInRecentlyAddedList()" name="testPrototypedAPIVisibilityInRecentlyAddedList" duration-ms="33" started-at="2018-11-05T07:48:59Z" description="API deployed as a prototype and check the visibility in Recently Added list in store" depends-on-methods="org.wso2.am.integration.tests.prototype.APIM24VisibilityOfPrototypedAPIOfDifferentViewInStoreTestCase.testOpenAlreadySavedAPIAndDeployedAsAPrototyped" finished-at="2018-11-05T07:48:59Z">
        </test-method>
        <test-method status="PASS" signature="testTagsOfPrototypedAPIVisibilityInTagList()" name="testTagsOfPrototypedAPIVisibilityInTagList" duration-ms="93" started-at="2018-11-05T07:48:59Z" description="API deployed as a prototype and check the tags of API visibility in Tag list in store" depends-on-methods="org.wso2.am.integration.tests.prototype.APIM24VisibilityOfPrototypedAPIOfDifferentViewInStoreTestCase.testOpenAlreadySavedAPIAndDeployedAsAPrototyped" finished-at="2018-11-05T07:48:59Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="1138" started-at="2018-11-05T07:48:59Z" finished-at="2018-11-05T07:49:00Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.publisher.APIM519CreateAnAPIThroughTheRestAPIWithoutLoggingInTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="343" started-at="2018-11-05T07:49:55Z" finished-at="2018-11-05T07:49:55Z">
        </test-method>
        <test-method status="PASS" signature="testCreateAnAPIThroughThePublisherRest()" name="testCreateAnAPIThroughThePublisherRest" duration-ms="15" started-at="2018-11-05T07:49:55Z" description="Create an API Through the Publisher Rest API" finished-at="2018-11-05T07:49:55Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.publisher.APIM638ValidateTheRoleOfAnExistingUserThroughThePublisherRestAPITestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="744" started-at="2018-11-05T07:50:39Z" finished-at="2018-11-05T07:50:39Z">
        </test-method>
        <test-method status="PASS" signature="testValidateTheRoleOfAnExistingUser()" name="testValidateTheRoleOfAnExistingUser" duration-ms="11" started-at="2018-11-05T07:50:39Z" description="Validate the Role of an existing user through the publisher rest API " finished-at="2018-11-05T07:50:39Z">
        </test-method>
        <test-method status="PASS" signature="testValidateTheRoleOfAnNonExistingUser()" name="testValidateTheRoleOfAnNonExistingUser" duration-ms="6" started-at="2018-11-05T07:50:39Z" description="Validate the Role of an non-existing user through the publisher rest API " finished-at="2018-11-05T07:50:39Z">
        </test-method>
        <test-method status="PASS" signature="clearRoles()" name="clearRoles" is-config="true" duration-ms="212" started-at="2018-11-05T07:50:39Z" finished-at="2018-11-05T07:50:39Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.PublisherAccessControlTestCase">
        <test-method status="PASS" signature="initTestCase()" name="initTestCase" is-config="true" duration-ms="866" started-at="2018-11-05T07:51:33Z" finished-at="2018-11-05T07:51:34Z">
        </test-method>
        <test-method status="PASS" signature="testAPIAdditionWithAccessControlRestriction()" name="testAPIAdditionWithAccessControlRestriction" duration-ms="1047" started-at="2018-11-05T07:51:34Z" description="This test case tests the retrieval of API which was added with a access control restriction." finished-at="2018-11-05T07:51:35Z">
        </test-method>
        <test-method status="PASS" signature="testAPIAdditionWithoutAccessControlRestriction()" name="testAPIAdditionWithoutAccessControlRestriction" duration-ms="1624" started-at="2018-11-05T07:51:35Z" description="This test case tests the retrieval of API which was added without access control restriction." finished-at="2018-11-05T07:51:37Z">
        </test-method>
        <test-method status="PASS" signature="testCheckPublisherRoleCanViewRestrictedVisibilityAPIs()" name="testCheckPublisherRoleCanViewRestrictedVisibilityAPIs" duration-ms="2595" started-at="2018-11-05T07:51:37Z" description="This test case add restricted visibility on store for role1, but user who can log into publisher should be able to view the api even though he does not have the role role1" finished-at="2018-11-05T07:51:40Z">
        </test-method>
        <test-method status="PASS" signature="testGetPublicAPIFromStoreWithRestrictedPublisherAccess()" name="testGetPublicAPIFromStoreWithRestrictedPublisherAccess" duration-ms="3136" started-at="2018-11-05T07:51:40Z" description="This test case tests the retrieval of API which from store which was added without access control restriction and public visibility." finished-at="2018-11-05T07:51:43Z">
        </test-method>
        <test-method status="PASS" signature="testPublisherAndStoreRestricted()" name="testPublisherAndStoreRestricted" duration-ms="24073" started-at="2018-11-05T07:51:43Z" description="This test case add restricted access in publisher(role1) and restricted visibility in store(subscriber_role1). So check correct behaviour in publisher and store " finished-at="2018-11-05T07:52:07Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="1615" started-at="2018-11-05T07:52:07Z" finished-at="2018-11-05T07:52:08Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.publisher.APIM611AddDocumentationToAnAPIWithDocTypeHowToThroughPublisherRestAPITestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="292" started-at="2018-11-05T07:49:20Z" finished-at="2018-11-05T07:49:21Z">
        </test-method>
        <test-method status="PASS" signature="testAddDocumentToAnAPIHowToInline()" name="testAddDocumentToAnAPIHowToInline" duration-ms="835" started-at="2018-11-05T07:49:21Z" description="Add Documentation To An API With Type HowTo And Source Inline through the publisher rest API " finished-at="2018-11-05T07:49:21Z">
        </test-method>
        <test-method status="PASS" signature="testAddDocumentToAnAPIHowToUrl()" name="testAddDocumentToAnAPIHowToUrl" duration-ms="100" started-at="2018-11-05T07:49:21Z" description="Add Documentation To An API With Type HowTo And Source Url through the publisher rest API " depends-on-methods="org.wso2.am.integration.tests.publisher.APIM611AddDocumentationToAnAPIWithDocTypeHowToThroughPublisherRestAPITestCase.testAddDocumentToAnAPIHowToInline" finished-at="2018-11-05T07:49:22Z">
        </test-method>
        <test-method status="PASS" signature="destroyAPIs()" name="destroyAPIs" is-config="true" duration-ms="452" started-at="2018-11-05T07:49:22Z" finished-at="2018-11-05T07:49:22Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.publisher.APIM574ChangeTheStatusOfAnAPIToPrototypedThroughThePublisherRestAPITestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="368" started-at="2018-11-05T07:49:12Z" finished-at="2018-11-05T07:49:12Z">
        </test-method>
        <test-method status="PASS" signature="testCreateAnAPIThroughThePublisherRest()" name="testCreateAnAPIThroughThePublisherRest" duration-ms="668" started-at="2018-11-05T07:49:12Z" description="Create an API throgh the publisher rest API " finished-at="2018-11-05T07:49:13Z">
        </test-method>
        <test-method status="PASS" signature="testChangeTheStatusOfTheAPIToPrototyped()" name="testChangeTheStatusOfTheAPIToPrototyped" duration-ms="1687" started-at="2018-11-05T07:49:13Z" description="Change the status of the API to PROTOTYPED through the publisher rest API " depends-on-methods="org.wso2.am.integration.tests.publisher.APIM574ChangeTheStatusOfAnAPIToPrototypedThroughThePublisherRestAPITestCase.testCreateAnAPIThroughThePublisherRest" finished-at="2018-11-05T07:49:15Z">
        </test-method>
        <test-method status="PASS" signature="testChangeTheStatusOfTheAPIToPublished()" name="testChangeTheStatusOfTheAPIToPublished" duration-ms="1873" started-at="2018-11-05T07:49:15Z" description="Change the status of the API to PUBLISHED through the publisher rest API " depends-on-methods="org.wso2.am.integration.tests.publisher.APIM574ChangeTheStatusOfAnAPIToPrototypedThroughThePublisherRestAPITestCase.testChangeTheStatusOfTheAPIToPrototyped" finished-at="2018-11-05T07:49:17Z">
        </test-method>
        <test-method status="PASS" signature="testChangeTheStatusOfTheAPIToDeprecated()" name="testChangeTheStatusOfTheAPIToDeprecated" duration-ms="1677" started-at="2018-11-05T07:49:17Z" description="Change the status of the API to DEPRECATED through the publisher rest API " depends-on-methods="org.wso2.am.integration.tests.publisher.APIM574ChangeTheStatusOfAnAPIToPrototypedThroughThePublisherRestAPITestCase.testChangeTheStatusOfTheAPIToPublished" finished-at="2018-11-05T07:49:18Z">
        </test-method>
        <test-method status="PASS" signature="testChangeTheStatusOfTheAPIToRetired()" name="testChangeTheStatusOfTheAPIToRetired" duration-ms="1702" started-at="2018-11-05T07:49:18Z" description="Change the status of the API to RETIRED through the publisher rest API " depends-on-methods="org.wso2.am.integration.tests.publisher.APIM574ChangeTheStatusOfAnAPIToPrototypedThroughThePublisherRestAPITestCase.testChangeTheStatusOfTheAPIToDeprecated" finished-at="2018-11-05T07:49:20Z">
        </test-method>
        <test-method status="PASS" signature="cleanUp()" name="cleanUp" is-config="true" duration-ms="480" started-at="2018-11-05T07:49:20Z" finished-at="2018-11-05T07:49:20Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.rest.DocAPIParameterTamperingTest">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="194" started-at="2018-11-05T07:51:33Z" finished-at="2018-11-05T07:51:33Z">
        </test-method>
        <test-method status="PASS" signature="testParameterTampaeredResponseOfDocAPI()" name="testParameterTampaeredResponseOfDocAPI" duration-ms="71" started-at="2018-11-05T07:51:33Z" description="Test whether the response expose the stack trace" finished-at="2018-11-05T07:51:33Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.publisher.APIMANAGER5834APICreationWithInvalidInputsTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="315" started-at="2018-11-05T07:49:53Z" finished-at="2018-11-05T07:49:54Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreationWithInvalidContext()" name="testAPICreationWithInvalidContext" duration-ms="15" started-at="2018-11-05T07:49:54Z" description="Test API creation with invalid context" finished-at="2018-11-05T07:49:54Z">
        </test-method>
        <test-method status="PASS" signature="destroyAPIs()" name="destroyAPIs" is-config="true" duration-ms="187" started-at="2018-11-05T07:49:54Z" finished-at="2018-11-05T07:49:54Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="227" started-at="2018-11-05T07:49:54Z" finished-at="2018-11-05T07:49:54Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreationWithInvalidContext()" name="testAPICreationWithInvalidContext" duration-ms="6" started-at="2018-11-05T07:49:54Z" description="Test API creation with invalid context" finished-at="2018-11-05T07:49:54Z">
        </test-method>
        <test-method status="PASS" signature="destroyAPIs()" name="destroyAPIs" is-config="true" duration-ms="113" started-at="2018-11-05T07:49:54Z" finished-at="2018-11-05T07:49:54Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.publisher.APIM625AddDocumentationToAnAPIWithDocTypeSupportForumThroughPublisherRestAPITestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="241" started-at="2018-11-05T07:50:37Z" finished-at="2018-11-05T07:50:37Z">
        </test-method>
        <test-method status="PASS" signature="testAddDocumentToAnAPISupportInline()" name="testAddDocumentToAnAPISupportInline" duration-ms="783" started-at="2018-11-05T07:50:37Z" description="Add Documentation To An API With Type  support forum And Source Url through the publisher rest API " finished-at="2018-11-05T07:50:38Z">
        </test-method>
        <test-method status="PASS" signature="destroyAPIs()" name="destroyAPIs" is-config="true" duration-ms="597" started-at="2018-11-05T07:50:38Z" finished-at="2018-11-05T07:50:38Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.publisher.APIM520UpdateAnAPIThroughThePublisherRestAPITestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="389" started-at="2018-11-05T07:49:55Z" finished-at="2018-11-05T07:49:56Z">
        </test-method>
        <test-method status="PASS" signature="testUpdateAnAPIThroughThePublisherRest()" name="testUpdateAnAPIThroughThePublisherRest" duration-ms="16923" started-at="2018-11-05T07:49:56Z" description="Update an API Through the Publisher Rest API" finished-at="2018-11-05T07:50:13Z">
        </test-method>
        <test-method status="PASS" signature="destroyAPIs()" name="destroyAPIs" is-config="true" duration-ms="407" started-at="2018-11-05T07:50:13Z" finished-at="2018-11-05T07:50:13Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="336" started-at="2018-11-05T07:50:13Z" finished-at="2018-11-05T07:50:13Z">
        </test-method>
        <test-method status="PASS" signature="testUpdateAnAPIThroughThePublisherRest()" name="testUpdateAnAPIThroughThePublisherRest" duration-ms="16629" started-at="2018-11-05T07:50:13Z" description="Update an API Through the Publisher Rest API" finished-at="2018-11-05T07:50:30Z">
        </test-method>
        <test-method status="PASS" signature="destroyAPIs()" name="destroyAPIs" is-config="true" duration-ms="485" started-at="2018-11-05T07:50:30Z" finished-at="2018-11-05T07:50:31Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.publisher.APIM570CheckIfAnOlderVersionOfTheAPIExistsThroughThePublisherRestAPITestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="242" started-at="2018-11-05T07:49:07Z" finished-at="2018-11-05T07:49:07Z">
        </test-method>
        <test-method status="PASS" signature="testCreateAnApiUsingValidDataAndGetThroughThePublisherRest()" name="testCreateAnApiUsingValidDataAndGetThroughThePublisherRest" duration-ms="721" started-at="2018-11-05T07:49:07Z" description="Create an API using valid data and get the API" finished-at="2018-11-05T07:49:08Z">
        </test-method>
        <test-method status="PASS" signature="testCheckIfAnOlderVersionOfTheAPIExistsThroughThePublisherRestAPI(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)" name="testCheckIfAnOlderVersionOfTheAPIExistsThroughThePublisherRestAPI" duration-ms="1449" started-at="2018-11-05T07:49:08Z" description="Copy an API with the multiple version check if the older version exist through Publisher Rest API" depends-on-methods="org.wso2.am.integration.tests.publisher.APIM570CheckIfAnOlderVersionOfTheAPIExistsThroughThePublisherRestAPITestCase.testCreateAnApiUsingValidDataAndGetThroughThePublisherRest" finished-at="2018-11-05T07:49:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[APIM570PublisherTest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2.0.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[default_version]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testCheckIfAnOlderVersionOfTheAPIExistsThroughThePublisherRestAPI(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)" name="testCheckIfAnOlderVersionOfTheAPIExistsThroughThePublisherRestAPI" duration-ms="1454" started-at="2018-11-05T07:49:10Z" description="Copy an API with the multiple version check if the older version exist through Publisher Rest API" depends-on-methods="org.wso2.am.integration.tests.publisher.APIM570CheckIfAnOlderVersionOfTheAPIExistsThroughThePublisherRestAPITestCase.testCreateAnApiUsingValidDataAndGetThroughThePublisherRest" finished-at="2018-11-05T07:49:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[APIM570PublisherTest]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3.0.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[default_version]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="destroyAPIs()" name="destroyAPIs" is-config="true" duration-ms="843" started-at="2018-11-05T07:49:11Z" finished-at="2018-11-05T07:49:12Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.publisher.APIM534GetAllTheAPIsCreatedThroughThePublisherRestAPITestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="492" started-at="2018-11-05T07:49:02Z" finished-at="2018-11-05T07:49:03Z">
        </test-method>
        <test-method status="PASS" signature="testGetAllTheAPICreatedThroughThePublisherRestAPI(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL)" name="testGetAllTheAPICreatedThroughThePublisherRestAPI" duration-ms="1090" started-at="2018-11-05T07:49:03Z" description="Create an API using valid data and get all the API through Publisher Rest API" finished-at="2018-11-05T07:49:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[APIM534PublisherTest1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apim534PublisherTest1API]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[http://localhost:10263/jaxrs_basic/services/customers/customerservice/customers/123]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testGetAllTheAPICreatedThroughThePublisherRestAPI(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL)" name="testGetAllTheAPICreatedThroughThePublisherRestAPI" duration-ms="1056" started-at="2018-11-05T07:49:04Z" description="Create an API using valid data and get all the API through Publisher Rest API" finished-at="2018-11-05T07:49:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[APIM534PublisherTest2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apim534PublisherTest2API]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[http://localhost:10263/name-check1/]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testGetAllTheAPICreatedThroughThePublisherRestAPI(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL)" name="testGetAllTheAPICreatedThroughThePublisherRestAPI" duration-ms="1266" started-at="2018-11-05T07:49:05Z" description="Create an API using valid data and get all the API through Publisher Rest API" finished-at="2018-11-05T07:49:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[APIM534PublisherTest3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[apim534PublisherTest3API]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[http://localhost:10263/pizzashack-api-1.0.0/api/]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testCheckIfAnAPIExistsThroughThePublisherRestAPI()" name="testCheckIfAnAPIExistsThroughThePublisherRestAPI" duration-ms="11" started-at="2018-11-05T07:49:06Z" description="Validate if an API exists through the publisher REST API" depends-on-methods="org.wso2.am.integration.tests.publisher.APIM534GetAllTheAPIsCreatedThroughThePublisherRestAPITestCase.testGetAllTheAPICreatedThroughThePublisherRestAPI" finished-at="2018-11-05T07:49:06Z">
        </test-method>
        <test-method status="PASS" signature="destroyAPIs()" name="destroyAPIs" is-config="true" duration-ms="934" started-at="2018-11-05T07:49:06Z" finished-at="2018-11-05T07:49:07Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.publisher.APIM634GetAllTheThrottlingTiersFromThePublisherRestAPITestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="289" started-at="2018-11-05T07:50:38Z" finished-at="2018-11-05T07:50:39Z">
        </test-method>
        <test-method status="PASS" signature="testGetAllTheThrottlingTiers()" name="testGetAllTheThrottlingTiers" duration-ms="15" started-at="2018-11-05T07:50:39Z" description="Get all the throttling tiers from the publisher rest API " finished-at="2018-11-05T07:50:39Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.publisher.APIResourceWithTemplateTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="1686" started-at="2018-11-05T07:50:39Z" finished-at="2018-11-05T07:50:41Z">
        </test-method>
        <test-method status="PASS" signature="testAPIwithResourceTemplateForAPI()" name="testAPIwithResourceTemplateForAPI" duration-ms="2560" started-at="2018-11-05T07:50:41Z" description="Test API with resouce containing url template" finished-at="2018-11-05T07:50:44Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="320" started-at="2018-11-05T07:50:44Z" finished-at="2018-11-05T07:50:44Z">
        </test-method>
        <test-method status="PASS" signature="testAPIwithResourceTemplateForAPI()" name="testAPIwithResourceTemplateForAPI" duration-ms="2675" started-at="2018-11-05T07:50:44Z" description="Test API with resouce containing url template" finished-at="2018-11-05T07:50:47Z">
        </test-method>
        <test-method status="PASS" signature="testAPIwithResourceTemplateForDefaultAPI()" name="testAPIwithResourceTemplateForDefaultAPI" duration-ms="2708" started-at="2018-11-05T07:50:47Z" description="Test API with resouce containing url template for default api" finished-at="2018-11-05T07:50:49Z">
        </test-method>
        <test-method status="PASS" signature="testAPIwithResourceTemplateForDefaultAPI()" name="testAPIwithResourceTemplateForDefaultAPI" duration-ms="3172" started-at="2018-11-05T07:50:49Z" description="Test API with resouce containing url template for default api" finished-at="2018-11-05T07:50:53Z">
        </test-method>
        <test-method status="PASS" signature="testUriEncodingInTemplate()" name="testUriEncodingInTemplate" duration-ms="19122" started-at="2018-11-05T07:50:53Z" description="Test API uri template default/encode behavior" finished-at="2018-11-05T07:51:12Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="1846" started-at="2018-11-05T07:51:12Z" finished-at="2018-11-05T07:51:14Z">
        </test-method>
        <test-method status="PASS" signature="testUriEncodingInTemplate()" name="testUriEncodingInTemplate" duration-ms="19262" started-at="2018-11-05T07:51:14Z" description="Test API uri template default/encode behavior" finished-at="2018-11-05T07:51:33Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="329" started-at="2018-11-05T07:51:33Z" finished-at="2018-11-05T07:51:33Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.publisher.APIM514CreateAnAPIWithoutProvidingMandatoryFieldsTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="326" started-at="2018-11-05T07:49:54Z" finished-at="2018-11-05T07:49:55Z">
        </test-method>
        <test-method status="PASS" signature="testCreateAnAPIThroughThePublisherRestWithoutAction()" name="testCreateAnAPIThroughThePublisherRestWithoutAction" duration-ms="9" started-at="2018-11-05T07:49:55Z" description="Create an API Through the Publisher Rest API without proving Action" finished-at="2018-11-05T07:49:55Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="244" started-at="2018-11-05T07:49:55Z" finished-at="2018-11-05T07:49:55Z">
        </test-method>
        <test-method status="PASS" signature="testCreateAnAPIThroughThePublisherRestWithoutAction()" name="testCreateAnAPIThroughThePublisherRestWithoutAction" duration-ms="3" started-at="2018-11-05T07:49:55Z" description="Create an API Through the Publisher Rest API without proving Action" finished-at="2018-11-05T07:49:55Z">
        </test-method>
        <test-method status="PASS" signature="testCreateAnAPIThroughThePublisherRestWithoutContext()" name="testCreateAnAPIThroughThePublisherRestWithoutContext" duration-ms="10" started-at="2018-11-05T07:49:55Z" description="Create an API Through the Publisher Rest API without proving Context" finished-at="2018-11-05T07:49:55Z">
        </test-method>
        <test-method status="PASS" signature="testCreateAnAPIThroughThePublisherRestWithoutContext()" name="testCreateAnAPIThroughThePublisherRestWithoutContext" duration-ms="7" started-at="2018-11-05T07:49:55Z" description="Create an API Through the Publisher Rest API without proving Context" finished-at="2018-11-05T07:49:55Z">
        </test-method>
        <test-method status="PASS" signature="testCreateAnAPIThroughThePublisherRestWithoutName()" name="testCreateAnAPIThroughThePublisherRestWithoutName" duration-ms="5" started-at="2018-11-05T07:49:55Z" description="Create an API Through the Publisher Rest API without proving API Name" finished-at="2018-11-05T07:49:55Z">
        </test-method>
        <test-method status="PASS" signature="testCreateAnAPIThroughThePublisherRestWithoutName()" name="testCreateAnAPIThroughThePublisherRestWithoutName" duration-ms="6" started-at="2018-11-05T07:49:55Z" description="Create an API Through the Publisher Rest API without proving API Name" finished-at="2018-11-05T07:49:55Z">
        </test-method>
        <test-method status="PASS" signature="testCreateAnAPIThroughThePublisherRestWithoutTierAvailability()" name="testCreateAnAPIThroughThePublisherRestWithoutTierAvailability" duration-ms="5" started-at="2018-11-05T07:49:55Z" description="Create an API Through the Publisher Rest API without proving tier availability" finished-at="2018-11-05T07:49:55Z">
        </test-method>
        <test-method status="PASS" signature="testCreateAnAPIThroughThePublisherRestWithoutTierAvailability()" name="testCreateAnAPIThroughThePublisherRestWithoutTierAvailability" duration-ms="6" started-at="2018-11-05T07:49:55Z" description="Create an API Through the Publisher Rest API without proving tier availability" finished-at="2018-11-05T07:49:55Z">
        </test-method>
        <test-method status="PASS" signature="testCreateAnAPIThroughThePublisherRestWithoutVersion()" name="testCreateAnAPIThroughThePublisherRestWithoutVersion" duration-ms="10" started-at="2018-11-05T07:49:55Z" description="Create an API Through the Publisher Rest API without proving version" finished-at="2018-11-05T07:49:55Z">
        </test-method>
        <test-method status="PASS" signature="destroyAPIs()" name="destroyAPIs" is-config="true" duration-ms="16" started-at="2018-11-05T07:49:55Z" finished-at="2018-11-05T07:49:55Z">
        </test-method>
        <test-method status="PASS" signature="testCreateAnAPIThroughThePublisherRestWithoutVersion()" name="testCreateAnAPIThroughThePublisherRestWithoutVersion" duration-ms="7" started-at="2018-11-05T07:49:55Z" description="Create an API Through the Publisher Rest API without proving version" finished-at="2018-11-05T07:49:55Z">
        </test-method>
        <test-method status="PASS" signature="destroyAPIs()" name="destroyAPIs" is-config="true" duration-ms="16" started-at="2018-11-05T07:49:55Z" finished-at="2018-11-05T07:49:55Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.publisher.APIM620AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="333" started-at="2018-11-05T07:49:22Z" finished-at="2018-11-05T07:49:22Z">
        </test-method>
        <test-method status="PASS" signature="testAddDocumentToAnAPISDKInline()" name="testAddDocumentToAnAPISDKInline" duration-ms="770" started-at="2018-11-05T07:49:22Z" description="Add Documentation To An API With Type HowTo And Source Inline through the publisher rest API " finished-at="2018-11-05T07:49:23Z">
        </test-method>
        <test-method status="PASS" signature="testAddDocumentToAnAPISDKUrl()" name="testAddDocumentToAnAPISDKUrl" duration-ms="101" started-at="2018-11-05T07:49:23Z" description="Add Documentation To An API With Type HowTo And Source Url through the publisher rest API " depends-on-methods="org.wso2.am.integration.tests.publisher.APIM620AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase.testAddDocumentToAnAPISDKInline" finished-at="2018-11-05T07:49:23Z">
        </test-method>
        <test-method status="PASS" signature="destroyAPIs()" name="destroyAPIs" is-config="true" duration-ms="481" started-at="2018-11-05T07:49:23Z" finished-at="2018-11-05T07:49:24Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.publisher.APIM627AddDocumentationToAnAPIWithDocTypeOtherThroughPublisherRestAPITestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="253" started-at="2018-11-05T07:49:24Z" finished-at="2018-11-05T07:49:24Z">
        </test-method>
        <test-method status="PASS" signature="testAddDocumentToAnAPIOtherInline()" name="testAddDocumentToAnAPIOtherInline" duration-ms="1079" started-at="2018-11-05T07:49:24Z" description="Add Documentation To An API With Type Other And Source Inline through the publisher rest API " finished-at="2018-11-05T07:49:25Z">
        </test-method>
        <test-method status="PASS" signature="testAddDocumentToAnAPIOtherUrl()" name="testAddDocumentToAnAPIOtherUrl" duration-ms="95" started-at="2018-11-05T07:49:25Z" description="Add Documentation To An API With Type HowTo And Source Url through the publisher rest API " depends-on-methods="org.wso2.am.integration.tests.publisher.APIM627AddDocumentationToAnAPIWithDocTypeOtherThroughPublisherRestAPITestCase.testAddDocumentToAnAPIOtherInline" finished-at="2018-11-05T07:49:25Z">
        </test-method>
        <test-method status="PASS" signature="testRemoveDocumentationOtherTheAPI()" name="testRemoveDocumentationOtherTheAPI" duration-ms="162" started-at="2018-11-05T07:49:25Z" description="Remove API Documentation from the API through the publisher rest API " depends-on-methods="org.wso2.am.integration.tests.publisher.APIM627AddDocumentationToAnAPIWithDocTypeOtherThroughPublisherRestAPITestCase.testAddDocumentToAnAPIOtherInline" finished-at="2018-11-05T07:49:25Z">
        </test-method>
        <test-method status="PASS" signature="destroyAPIs()" name="destroyAPIs" is-config="true" duration-ms="1035" started-at="2018-11-05T07:49:25Z" finished-at="2018-11-05T07:49:26Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.prototype.APIM23VisibilityOfPrototypedAPIInStoreTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="250" started-at="2018-11-05T07:49:32Z" finished-at="2018-11-05T07:49:33Z">
        </test-method>
        <test-method status="PASS" signature="testVisibilityInPrototypedAPI()" name="testVisibilityInPrototypedAPI" duration-ms="19304" started-at="2018-11-05T07:49:33Z" description="Create an API &amp; deployed as a prototype and check the visibility in prototype API In store" finished-at="2018-11-05T07:49:52Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="416" started-at="2018-11-05T07:49:52Z" finished-at="2018-11-05T07:49:52Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="295" started-at="2018-11-05T07:49:26Z" finished-at="2018-11-05T07:49:27Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="315" started-at="2018-11-05T07:49:27Z" finished-at="2018-11-05T07:49:27Z">
        </test-method>
        <test-method status="PASS" signature="testApiCreation()" name="testApiCreation" duration-ms="1235" started-at="2018-11-05T07:49:27Z" description="Create an API to update the documents with source type file  through the publisher rest API " finished-at="2018-11-05T07:49:28Z">
        </test-method>
        <test-method status="PASS" signature="testApiCreation()" name="testApiCreation" duration-ms="609" started-at="2018-11-05T07:49:28Z" description="Create an API to update the documents with source type file  through the publisher rest API " finished-at="2018-11-05T07:49:29Z">
        </test-method>
        <test-method status="PASS" signature="testAddDocumentToAnAPIHowToFile()" name="testAddDocumentToAnAPIHowToFile" duration-ms="263" started-at="2018-11-05T07:49:29Z" description="Add Documentation To An API With Type HowTo And Source File through the publisher rest API " depends-on-methods="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase.testApiCreation" finished-at="2018-11-05T07:49:29Z">
        </test-method>
        <test-method status="PASS" signature="testAddDocumentToAnAPIHowToFile()" name="testAddDocumentToAnAPIHowToFile" duration-ms="262" started-at="2018-11-05T07:49:29Z" description="Add Documentation To An API With Type HowTo And Source File through the publisher rest API " depends-on-methods="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase.testApiCreation" finished-at="2018-11-05T07:49:29Z">
        </test-method>
        <test-method status="PASS" signature="testAddDocumentToAnAPISDKToFile()" name="testAddDocumentToAnAPISDKToFile" duration-ms="241" started-at="2018-11-05T07:49:29Z" description="Add Documentation To An API With Type Sample SDK And Source File through the publisher rest API " depends-on-methods="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase.testAddDocumentToAnAPIHowToFile" finished-at="2018-11-05T07:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testAddDocumentToAnAPISDKToFile()" name="testAddDocumentToAnAPISDKToFile" duration-ms="216" started-at="2018-11-05T07:49:30Z" description="Add Documentation To An API With Type Sample SDK And Source File through the publisher rest API " depends-on-methods="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase.testAddDocumentToAnAPIHowToFile" finished-at="2018-11-05T07:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testAddDocumentToAnAPIPublicToFile()" name="testAddDocumentToAnAPIPublicToFile" duration-ms="222" started-at="2018-11-05T07:49:30Z" description="Add Documentation To An API With Type  public forum And Source File through the publisher rest API " depends-on-methods="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase.testAddDocumentToAnAPISDKToFile" finished-at="2018-11-05T07:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testAddDocumentToAnAPIPublicToFile()" name="testAddDocumentToAnAPIPublicToFile" duration-ms="215" started-at="2018-11-05T07:49:30Z" description="Add Documentation To An API With Type  public forum And Source File through the publisher rest API " depends-on-methods="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase.testAddDocumentToAnAPISDKToFile" finished-at="2018-11-05T07:49:30Z">
        </test-method>
        <test-method status="PASS" signature="testAddDocumentToAnAPISupportToFile()" name="testAddDocumentToAnAPISupportToFile" duration-ms="431" started-at="2018-11-05T07:49:30Z" description="Add Documentation To An API With Type  support forum And Source File through the publisher rest API " depends-on-methods="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase.testAddDocumentToAnAPIPublicToFile" finished-at="2018-11-05T07:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testAddDocumentToAnAPISupportToFile()" name="testAddDocumentToAnAPISupportToFile" duration-ms="245" started-at="2018-11-05T07:49:31Z" description="Add Documentation To An API With Type  support forum And Source File through the publisher rest API " depends-on-methods="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase.testAddDocumentToAnAPIPublicToFile" finished-at="2018-11-05T07:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testAddDocumentToAnAPIOtherFile()" name="testAddDocumentToAnAPIOtherFile" duration-ms="274" started-at="2018-11-05T07:49:31Z" description="Add Documentation To An API With Type Other And Source File through the publisher rest API " depends-on-methods="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase.testAddDocumentToAnAPISupportToFile" finished-at="2018-11-05T07:49:31Z">
        </test-method>
        <test-method status="PASS" signature="testAddDocumentToAnAPIOtherFile()" name="testAddDocumentToAnAPIOtherFile" duration-ms="216" started-at="2018-11-05T07:49:31Z" description="Add Documentation To An API With Type Other And Source File through the publisher rest API " depends-on-methods="org.wso2.am.integration.tests.publisher.APIM614AddDocumentationToAnAPIWithDocTypeSampleAndSDKThroughPublisherRestAPITestCase.testAddDocumentToAnAPISupportToFile" finished-at="2018-11-05T07:49:31Z">
        </test-method>
        <test-method status="PASS" signature="destroyAPIs()" name="destroyAPIs" is-config="true" duration-ms="569" started-at="2018-11-05T07:49:31Z" finished-at="2018-11-05T07:49:32Z">
        </test-method>
        <test-method status="PASS" signature="destroyAPIs()" name="destroyAPIs" is-config="true" duration-ms="449" started-at="2018-11-05T07:49:32Z" finished-at="2018-11-05T07:49:32Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.publisher.APIM18CreateAnAPIThroughThePublisherRestAPITestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="270" started-at="2018-11-05T07:49:00Z" finished-at="2018-11-05T07:49:00Z">
        </test-method>
        <test-method status="PASS" signature="testCreateAnAPIThroughThePublisherRest()" name="testCreateAnAPIThroughThePublisherRest" duration-ms="1484" started-at="2018-11-05T07:49:00Z" description="Create an API Through the Publisher Rest API" finished-at="2018-11-05T07:49:02Z">
        </test-method>
        <test-method status="PASS" signature="testRemoveAnAPIThroughThePublisherRest()" name="testRemoveAnAPIThroughThePublisherRest" duration-ms="321" started-at="2018-11-05T07:49:02Z" description="Remove an API Through the Publisher Rest API" depends-on-methods="org.wso2.am.integration.tests.publisher.APIM18CreateAnAPIThroughThePublisherRestAPITestCase.testCreateAnAPIThroughThePublisherRest" finished-at="2018-11-05T07:49:02Z">
        </test-method>
        <test-method status="PASS" signature="destroyAPIs()" name="destroyAPIs" is-config="true" duration-ms="157" started-at="2018-11-05T07:49:02Z" finished-at="2018-11-05T07:49:02Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.publisher.APIM548CopyAnAPIToANewerVersionThroughThePublisherRestAPITestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="258" started-at="2018-11-05T07:50:31Z" finished-at="2018-11-05T07:50:31Z">
        </test-method>
        <test-method status="PASS" signature="testCopyAnAPIToANewerVersionThroughThePublisherRest()" name="testCopyAnAPIToANewerVersionThroughThePublisherRest" duration-ms="2479" started-at="2018-11-05T07:50:31Z" description="Copy An API To A Newer Version Through the Publisher Rest API" finished-at="2018-11-05T07:50:33Z">
        </test-method>
        <test-method status="PASS" signature="destroyAPIs()" name="destroyAPIs" is-config="true" duration-ms="615" started-at="2018-11-05T07:50:33Z" finished-at="2018-11-05T07:50:34Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.publisher.APIM16LoginToTheAPIPublisherThroughThePublisherRestAPITestCase">
        <test-method status="PASS" signature="testInvalidStoreLogin(java.lang.String, java.lang.String)" name="testInvalidStoreLogin" duration-ms="53" started-at="2018-11-05T07:49:52Z" description="Login to the API Publisher through publisher Rest API using invalid credentials " finished-at="2018-11-05T07:49:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[invalid]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testInvalidStoreLogin(java.lang.String, java.lang.String)" name="testInvalidStoreLogin" duration-ms="53" started-at="2018-11-05T07:49:52Z" description="Login to the API Publisher through publisher Rest API using invalid credentials " finished-at="2018-11-05T07:49:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testInvalidStoreLogin(java.lang.String, java.lang.String)" name="testInvalidStoreLogin" duration-ms="48" started-at="2018-11-05T07:49:53Z" description="Login to the API Publisher through publisher Rest API using invalid credentials " finished-at="2018-11-05T07:49:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[invalid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testInvalidStoreLogin(java.lang.String, java.lang.String)" name="testInvalidStoreLogin" duration-ms="46" started-at="2018-11-05T07:49:53Z" description="Login to the API Publisher through publisher Rest API using invalid credentials " finished-at="2018-11-05T07:49:53Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testInvalidStoreLogin(java.lang.String, java.lang.String)" name="testInvalidStoreLogin" duration-ms="46" started-at="2018-11-05T07:49:53Z" description="Login to the API Publisher through publisher Rest API using invalid credentials " finished-at="2018-11-05T07:49:53Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testInvalidStoreLogin(java.lang.String, java.lang.String)" name="testInvalidStoreLogin" duration-ms="47" started-at="2018-11-05T07:49:53Z" description="Login to the API Publisher through publisher Rest API using invalid credentials " finished-at="2018-11-05T07:49:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[asde]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testPublisherLoginAndLogoutForValidCredentials(java.lang.String, java.lang.String)" name="testPublisherLoginAndLogoutForValidCredentials" duration-ms="122" started-at="2018-11-05T07:49:53Z" description="Login to the API Publisher through publisher Rest API using valid credentials" finished-at="2018-11-05T07:49:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testPublisherLoginAndLogoutForValidCredentials(java.lang.String, java.lang.String)" name="testPublisherLoginAndLogoutForValidCredentials" duration-ms="147" started-at="2018-11-05T07:49:53Z" description="Login to the API Publisher through publisher Rest API using valid credentials" finished-at="2018-11-05T07:49:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[testu1@carbon.super]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testu1pass]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testPublisherLoginAndLogoutForValidCredentials(java.lang.String, java.lang.String)" name="testPublisherLoginAndLogoutForValidCredentials" duration-ms="336" started-at="2018-11-05T07:49:53Z" description="Login to the API Publisher through publisher Rest API using valid credentials" finished-at="2018-11-05T07:49:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin@wso2.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testPublisherLoginAndLogoutForValidCredentials(java.lang.String, java.lang.String)" name="testPublisherLoginAndLogoutForValidCredentials" duration-ms="171" started-at="2018-11-05T07:49:53Z" description="Login to the API Publisher through publisher Rest API using valid credentials" finished-at="2018-11-05T07:49:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser11@wso2.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testuser11]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.publisher.APIM623AddDocumentationToAnAPIWithDocTypePublicForumThroughPublisherRestAPITestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="256" started-at="2018-11-05T07:50:34Z" finished-at="2018-11-05T07:50:34Z">
        </test-method>
        <test-method status="PASS" signature="testAddDocumentToAnAPIPublicInline()" name="testAddDocumentToAnAPIPublicInline" duration-ms="2004" started-at="2018-11-05T07:50:34Z" description="Add Documentation To An API With Type  public forum And Source Url through the publisher rest API " finished-at="2018-11-05T07:50:36Z">
        </test-method>
        <test-method status="PASS" signature="destroyAPIs()" name="destroyAPIs" is-config="true" duration-ms="426" started-at="2018-11-05T07:50:36Z" finished-at="2018-11-05T07:50:37Z">
        </test-method>
      </class>
    </test>
    <test name="apim-integration-tests-without-advance-throttling" duration-ms="346440" started-at="2018-11-05T08:17:54Z" finished-at="2018-11-05T08:23:40Z">
      <class name="org.wso2.am.integration.tests.restapi.testcases.OnHoldSubscriptionWorkflowIdTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="247" started-at="2018-11-05T08:23:34Z" finished-at="2018-11-05T08:23:35Z">
        </test-method>
        <test-method status="PASS" signature="testSubscription()" name="testSubscription" duration-ms="5751" started-at="2018-11-05T08:23:35Z" description="Returning workflow external ref. id from subscriptions rest api in publisher when subscription is in ON_HOLD status" finished-at="2018-11-05T08:23:40Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="225" started-at="2018-11-05T08:23:40Z" finished-at="2018-11-05T08:23:40Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.restapi.testcases.SubscriptionTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="277" started-at="2018-11-05T08:22:58Z" finished-at="2018-11-05T08:22:59Z">
        </test-method>
        <test-method status="PASS" signature="testSubscription()" name="testSubscription" duration-ms="10332" started-at="2018-11-05T08:22:59Z" description="REST API Implementation test : API Subscription test case" finished-at="2018-11-05T08:23:09Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="261" started-at="2018-11-05T08:23:09Z" finished-at="2018-11-05T08:23:09Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.restapi.testcases.TagTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="189" started-at="2018-11-05T08:23:19Z" finished-at="2018-11-05T08:23:19Z">
        </test-method>
        <test-method status="PASS" signature="testAPITags()" name="testAPITags" duration-ms="4471" started-at="2018-11-05T08:23:19Z" description="REST API Implementation test : API tags test case" finished-at="2018-11-05T08:23:23Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="173" started-at="2018-11-05T08:23:23Z" finished-at="2018-11-05T08:23:23Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.throttling.AdvancedThrottlingConfig">
        <test-method status="PASS" signature="disableAdvancedThrottling()" name="disableAdvancedThrottling" is-config="true" duration-ms="128821" started-at="2018-11-05T08:17:54Z" finished-at="2018-11-05T08:20:03Z">
        </test-method>
        <test-method status="PASS" signature="enableAdvancedThrottling()" name="enableAdvancedThrottling" is-config="true" duration-ms="0" started-at="2018-11-05T08:23:40Z" finished-at="2018-11-05T08:23:40Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.EditTiersXMLAndVerifyInPublisherTestCase">
        <test-method status="PASS" signature="testAvailabilityOfTiersInPermissionPageBeforeChangeTiersXML()" name="testAvailabilityOfTiersInPermissionPageBeforeChangeTiersXML" duration-ms="4458" started-at="2018-11-05T08:22:50Z" description="test availability of tiers in Permission Page before change tiers XML" finished-at="2018-11-05T08:22:54Z">
        </test-method>
        <test-method status="PASS" signature="testAvailabilityOfTiersInAPIManagePageBeforeChangeTiersXML()" name="testAvailabilityOfTiersInAPIManagePageBeforeChangeTiersXML" duration-ms="1019" started-at="2018-11-05T08:22:54Z" description="Test availability of tiers in API Manage Page before change tiers XML" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.EditTiersXMLAndVerifyInPublisherTestCase.testAvailabilityOfTiersInPermissionPageBeforeChangeTiersXML" finished-at="2018-11-05T08:22:55Z">
        </test-method>
        <test-method status="PASS" signature="testAvailabilityOfTiersInPermissionPageAfterChangeTiersXML()" name="testAvailabilityOfTiersInPermissionPageAfterChangeTiersXML" duration-ms="1056" started-at="2018-11-05T08:22:55Z" description="test availability of tiers in Permission Page after change tiers XML" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.EditTiersXMLAndVerifyInPublisherTestCase.testAvailabilityOfTiersInAPIManagePageBeforeChangeTiersXML" finished-at="2018-11-05T08:22:56Z">
        </test-method>
        <test-method status="PASS" signature="testAvailabilityOfTiersInAPIManagePageAfterChangeTiersXML()" name="testAvailabilityOfTiersInAPIManagePageAfterChangeTiersXML" duration-ms="679" started-at="2018-11-05T08:22:56Z" description="Test availability of tiers in API Manage Page after change tiers XML" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.EditTiersXMLAndVerifyInPublisherTestCase.testAvailabilityOfTiersInPermissionPageAfterChangeTiersXML" finished-at="2018-11-05T08:22:57Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="1264" started-at="2018-11-05T08:22:57Z" finished-at="2018-11-05T08:22:58Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.restapi.testcases.MultipleSubscriptionsTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="249" started-at="2018-11-05T08:23:09Z" finished-at="2018-11-05T08:23:09Z">
        </test-method>
        <test-method status="PASS" signature="testSubscription()" name="testSubscription" duration-ms="8764" started-at="2018-11-05T08:23:09Z" description="REST API Implementation test : API Subscription test case" finished-at="2018-11-05T08:23:18Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="296" started-at="2018-11-05T08:23:18Z" finished-at="2018-11-05T08:23:19Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.restapi.testcases.TierTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="174" started-at="2018-11-05T08:23:23Z" finished-at="2018-11-05T08:23:24Z">
        </test-method>
        <test-method status="PASS" signature="testTiers()" name="testTiers" duration-ms="2786" started-at="2018-11-05T08:23:24Z" description="REST API Implementation test : Tier handling test case" finished-at="2018-11-05T08:23:26Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="184" started-at="2018-11-05T08:23:26Z" finished-at="2018-11-05T08:23:26Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.restapi.testcases.APILifecycleTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="185" started-at="2018-11-05T08:23:26Z" finished-at="2018-11-05T08:23:27Z">
        </test-method>
        <test-method status="PASS" signature="testAPILifecycle()" name="testAPILifecycle" duration-ms="7389" started-at="2018-11-05T08:23:27Z" description="REST API Implementation test : API Lifecycle change test case" finished-at="2018-11-05T08:23:34Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="197" started-at="2018-11-05T08:23:34Z" finished-at="2018-11-05T08:23:34Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.ChangeAPITierAndTestInvokingTestCase">
        <test-method status="PASS" signature="testInvokingWithGoldTier()" name="testInvokingWithGoldTier" duration-ms="17037" started-at="2018-11-05T08:20:03Z" description="test  invocation of  api under tier Gold." finished-at="2018-11-05T08:20:20Z">
        </test-method>
        <test-method status="PASS" signature="testInvokingAfterExpireThrottleExpireTime()" name="testInvokingAfterExpireThrottleExpireTime" duration-ms="65044" started-at="2018-11-05T08:20:20Z" description="test  invocation of APi after expire the throttling block time." depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.ChangeAPITierAndTestInvokingTestCase.testInvokingWithGoldTier" finished-at="2018-11-05T08:21:25Z">
        </test-method>
        <test-method status="PASS" signature="testEditAPITierToSilver()" name="testEditAPITierToSilver" duration-ms="17633" started-at="2018-11-05T08:21:25Z" description="Test changing of the API Tier from Gold to Silver" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.ChangeAPITierAndTestInvokingTestCase.testInvokingAfterExpireThrottleExpireTime" finished-at="2018-11-05T08:21:43Z">
        </test-method>
        <test-method status="PASS" signature="testInvokingWithSilverTier()" name="testInvokingWithSilverTier" duration-ms="65817" started-at="2018-11-05T08:21:43Z" description="test  invocation of  api under tier Silver." depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.ChangeAPITierAndTestInvokingTestCase.testEditAPITierToSilver" finished-at="2018-11-05T08:22:48Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="1457" started-at="2018-11-05T08:22:48Z" finished-at="2018-11-05T08:22:50Z">
        </test-method>
      </class>
    </test>
    <test name="apim-integration-tests-samples" duration-ms="2201653" started-at="2018-11-05T07:11:52Z" finished-at="2018-11-05T07:48:34Z">
      <class name="org.wso2.am.integration.tests.hostobject.HostObjectTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="207" started-at="2018-11-05T07:41:00Z" finished-at="2018-11-05T07:41:00Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="192" started-at="2018-11-05T07:41:00Z" finished-at="2018-11-05T07:41:00Z">
        </test-method>
        <test-method status="PASS" signature="testAPIProvider()" name="testAPIProvider" duration-ms="0" started-at="2018-11-05T07:41:00Z" description="Test application operations" finished-at="2018-11-05T07:41:00Z">
        </test-method>
        <test-method status="PASS" signature="testApplication()" name="testApplication" duration-ms="0" started-at="2018-11-05T07:41:00Z" description="Test application object" finished-at="2018-11-05T07:41:00Z">
        </test-method>
        <test-method status="PASS" signature="testAPIProvider()" name="testAPIProvider" duration-ms="0" started-at="2018-11-05T07:41:00Z" description="Test application operations" finished-at="2018-11-05T07:41:00Z">
        </test-method>
        <test-method status="PASS" signature="testApplication()" name="testApplication" duration-ms="1" started-at="2018-11-05T07:41:00Z" description="Test application object" finished-at="2018-11-05T07:41:00Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationOperations()" name="testApplicationOperations" duration-ms="0" started-at="2018-11-05T07:41:00Z" description="Test application operations" finished-at="2018-11-05T07:41:00Z">
        </test-method>
        <test-method status="PASS" signature="testHostObjectTestCase()" name="testHostObjectTestCase" duration-ms="17494" started-at="2018-11-05T07:41:00Z" description="API Life cycle test case" finished-at="2018-11-05T07:41:18Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationOperations()" name="testApplicationOperations" duration-ms="0" started-at="2018-11-05T07:41:00Z" description="Test application operations" finished-at="2018-11-05T07:41:00Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="672" started-at="2018-11-05T07:41:18Z" finished-at="2018-11-05T07:41:18Z">
        </test-method>
        <test-method status="PASS" signature="testHostObjectTestCase()" name="testHostObjectTestCase" duration-ms="16201" started-at="2018-11-05T07:41:18Z" description="API Life cycle test case" finished-at="2018-11-05T07:41:35Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="409" started-at="2018-11-05T07:41:35Z" finished-at="2018-11-05T07:41:35Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.InvalidAuthTokenLargePayloadTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="241" started-at="2018-11-05T07:25:09Z" finished-at="2018-11-05T07:25:09Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="333" started-at="2018-11-05T07:25:09Z" finished-at="2018-11-05T07:25:10Z">
        </test-method>
        <test-method status="PASS" signature="testApiCreation()" name="testApiCreation" duration-ms="2406" started-at="2018-11-05T07:25:10Z" description="Sample API creation" finished-at="2018-11-05T07:25:12Z">
        </test-method>
        <test-method status="PASS" signature="testApiCreation()" name="testApiCreation" duration-ms="2529" started-at="2018-11-05T07:25:12Z" description="Sample API creation" finished-at="2018-11-05T07:25:15Z">
        </test-method>
        <test-method status="PASS" signature="testApiInvocation()" name="testApiInvocation" duration-ms="257" started-at="2018-11-05T07:25:15Z" description="Subscribe and invoke api" depends-on-methods="org.wso2.am.integration.tests.other.InvalidAuthTokenLargePayloadTestCase.testApiCreation" finished-at="2018-11-05T07:25:15Z">
        </test-method>
        <test-method status="PASS" signature="testApiInvocation()" name="testApiInvocation" duration-ms="349" started-at="2018-11-05T07:25:15Z" description="Subscribe and invoke api" depends-on-methods="org.wso2.am.integration.tests.other.InvalidAuthTokenLargePayloadTestCase.testApiCreation" finished-at="2018-11-05T07:25:15Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="531" started-at="2018-11-05T07:25:15Z" finished-at="2018-11-05T07:25:16Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="432" started-at="2018-11-05T07:25:16Z" finished-at="2018-11-05T07:25:16Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.throttling.ThrottlingTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="1404" started-at="2018-11-05T07:34:56Z" finished-at="2018-11-05T07:34:57Z">
        </test-method>
        <test-method status="PASS" signature="throttlingTestCase()" name="throttlingTestCase" duration-ms="2138" started-at="2018-11-05T07:34:57Z" description="Token API Test other" finished-at="2018-11-05T07:34:59Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="423" started-at="2018-11-05T07:34:59Z" finished-at="2018-11-05T07:35:00Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="1444" started-at="2018-11-05T07:35:00Z" finished-at="2018-11-05T07:35:01Z">
        </test-method>
        <test-method status="PASS" signature="throttlingTestCase()" name="throttlingTestCase" duration-ms="2140" started-at="2018-11-05T07:35:01Z" description="Token API Test other" finished-at="2018-11-05T07:35:03Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="207" started-at="2018-11-05T07:35:03Z" finished-at="2018-11-05T07:35:04Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.APIMANAGER4081PaginationCountTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="6678" started-at="2018-11-05T07:41:35Z" finished-at="2018-11-05T07:41:42Z">
        </test-method>
        <test-method status="PASS" signature="testPagination()" name="testPagination" duration-ms="309011" started-at="2018-11-05T07:41:42Z" description="Pagination test case" finished-at="2018-11-05T07:46:51Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="1594" started-at="2018-11-05T07:46:51Z" finished-at="2018-11-05T07:46:52Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.rest.UriTemplateReservedCharacterEncodingTest">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="1839" started-at="2018-11-05T07:28:29Z" finished-at="2018-11-05T07:28:31Z">
        </test-method>
        <test-method status="PASS" signature="testURITemplateExpandWithEscapedPercentEncoding()" name="testURITemplateExpandWithEscapedPercentEncoding" duration-ms="418" started-at="2018-11-05T07:28:31Z" description="Sending http request with a query param consist of reserved character : with percent encoding escaped at uri-template expansion" finished-at="2018-11-05T07:28:31Z">
        </test-method>
        <test-method status="PASS" signature="testURITemplateExpandWithEscapedPercentEncodingPathParam()" name="testURITemplateExpandWithEscapedPercentEncodingPathParam" duration-ms="100" started-at="2018-11-05T07:28:31Z" description="Sending http request with a path param consist of reserved character : with percent encoding escaped at uri-template expansion" finished-at="2018-11-05T07:28:31Z">
        </test-method>
        <test-method status="PASS" signature="testURITemplateExpandWithPercentEncoding()" name="testURITemplateExpandWithPercentEncoding" duration-ms="66" started-at="2018-11-05T07:28:31Z" description="Sending http request with a query param consist of reserved character : " finished-at="2018-11-05T07:28:32Z">
        </test-method>
        <test-method status="PASS" signature="testURITemplateExpandWithPercentEncodingPathParamCase()" name="testURITemplateExpandWithPercentEncodingPathParamCase" duration-ms="65" started-at="2018-11-05T07:28:32Z" description="Sending http request with a path param consist of reserved character : " finished-at="2018-11-05T07:28:32Z">
        </test-method>
        <test-method status="PASS" signature="testURITemplateParameterDecodingPlusCharacterCase()" name="testURITemplateParameterDecodingPlusCharacterCase" duration-ms="102" started-at="2018-11-05T07:28:32Z" description="Sending http request with a query param consist of reserved + character " finished-at="2018-11-05T07:28:32Z">
        </test-method>
        <test-method status="PASS" signature="testURITemplateParameterDecodingSpaceCharacterCase()" name="testURITemplateParameterDecodingSpaceCharacterCase" duration-ms="79" started-at="2018-11-05T07:28:32Z" description="Sending http request with a query param consist of reserved space character " finished-at="2018-11-05T07:28:32Z">
        </test-method>
        <test-method status="PASS" signature="testURITemplateParameterDecodingTrailingPercentageCase()" name="testURITemplateParameterDecodingTrailingPercentageCase" duration-ms="63" started-at="2018-11-05T07:28:32Z" description="Sending http request with a query param consist of reserved space character " finished-at="2018-11-05T07:28:32Z">
        </test-method>
        <test-method status="PASS" signature="testURITemplateParameterDecodingWithPercentEncodingEscapedAtExpansion()" name="testURITemplateParameterDecodingWithPercentEncodingEscapedAtExpansion" duration-ms="51" started-at="2018-11-05T07:28:32Z" description="Sending http request with a query param consist of reserved + character " finished-at="2018-11-05T07:28:32Z">
        </test-method>
        <test-method status="PASS" signature="testURITemplateSpecialCaseVariableWithFullURL()" name="testURITemplateSpecialCaseVariableWithFullURL" duration-ms="81" started-at="2018-11-05T07:28:32Z" description="Sending http request with a path param consist of whole URL including protocol , host , port etc. " finished-at="2018-11-05T07:28:32Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="408" started-at="2018-11-05T07:28:32Z" finished-at="2018-11-05T07:28:32Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.token.TokenAPITestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="3532" started-at="2018-11-05T07:39:29Z" finished-at="2018-11-05T07:39:32Z">
        </test-method>
        <test-method status="PASS" signature="testJWTTokenAPITestCase()" name="testJWTTokenAPITestCase" duration-ms="23252" started-at="2018-11-05T07:39:32Z" description="JWT Token API Test other" finished-at="2018-11-05T07:39:55Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="2367" started-at="2018-11-05T07:39:55Z" finished-at="2018-11-05T07:39:58Z">
        </test-method>
        <test-method status="PASS" signature="testJWTTokenAPITestCase()" name="testJWTTokenAPITestCase" duration-ms="14797" started-at="2018-11-05T07:39:58Z" description="JWT Token API Test other" finished-at="2018-11-05T07:40:13Z">
        </test-method>
        <test-method status="PASS" signature="testTokenAPITestCase()" name="testTokenAPITestCase" duration-ms="11660" started-at="2018-11-05T07:40:13Z" description="Token API Test other" finished-at="2018-11-05T07:40:24Z">
        </test-method>
        <test-method status="PASS" signature="testTokenAPITestCase()" name="testTokenAPITestCase" duration-ms="9593" started-at="2018-11-05T07:40:24Z" description="Token API Test other" finished-at="2018-11-05T07:40:34Z">
        </test-method>
        <test-method status="PASS" signature="testTokenEqualityBeforeExpiration()" name="testTokenEqualityBeforeExpiration" duration-ms="392" started-at="2018-11-05T07:40:34Z" description="Token equality test" finished-at="2018-11-05T07:40:34Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="2195" started-at="2018-11-05T07:40:34Z" finished-at="2018-11-05T07:40:36Z">
        </test-method>
        <test-method status="PASS" signature="testTokenEqualityBeforeExpiration()" name="testTokenEqualityBeforeExpiration" duration-ms="836" started-at="2018-11-05T07:40:36Z" description="Token equality test" finished-at="2018-11-05T07:40:37Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="1895" started-at="2018-11-05T07:40:37Z" finished-at="2018-11-05T07:40:39Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.resources.APIResourceModificationTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="201" started-at="2018-11-05T07:28:44Z" finished-at="2018-11-05T07:28:44Z">
        </test-method>
        <test-method status="PASS" signature="testSetScopeToResourceTestCase()" name="testSetScopeToResourceTestCase" duration-ms="4992" started-at="2018-11-05T07:28:44Z" description="add scope to resource test case" finished-at="2018-11-05T07:28:49Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="1178" started-at="2018-11-05T07:28:49Z" finished-at="2018-11-05T07:28:51Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="243" started-at="2018-11-05T07:28:51Z" finished-at="2018-11-05T07:28:51Z">
        </test-method>
        <test-method status="PASS" signature="testSetScopeToResourceTestCase()" name="testSetScopeToResourceTestCase" duration-ms="5929" started-at="2018-11-05T07:28:51Z" description="add scope to resource test case" finished-at="2018-11-05T07:28:57Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="385" started-at="2018-11-05T07:28:57Z" finished-at="2018-11-05T07:28:57Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.token.OpenIDTokenAPITestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="2253" started-at="2018-11-05T07:21:38Z" finished-at="2018-11-05T07:21:40Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="1493" started-at="2018-11-05T07:21:40Z" finished-at="2018-11-05T07:21:41Z">
        </test-method>
        <test-method status="PASS" signature="testGenerateAccessTokenWithOpenIdScope()" name="testGenerateAccessTokenWithOpenIdScope" duration-ms="393" started-at="2018-11-05T07:21:41Z" description="Token API Test sample" finished-at="2018-11-05T07:21:42Z">
        </test-method>
        <test-method status="PASS" signature="testGenerateAccessTokenWithOpenIdScope()" name="testGenerateAccessTokenWithOpenIdScope" duration-ms="675" started-at="2018-11-05T07:21:42Z" description="Token API Test sample" finished-at="2018-11-05T07:21:42Z">
        </test-method>
        <test-method status="PASS" signature="testCallUserInfoApiWithOpenIdAccessToken()" name="testCallUserInfoApiWithOpenIdAccessToken" duration-ms="181" started-at="2018-11-05T07:21:42Z" description="Token API Test sample" depends-on-methods="org.wso2.am.integration.tests.token.OpenIDTokenAPITestCase.testGenerateAccessTokenWithOpenIdScope" finished-at="2018-11-05T07:21:43Z">
        </test-method>
        <test-method status="PASS" signature="testCallUserInfoApiWithOpenIdAccessToken()" name="testCallUserInfoApiWithOpenIdAccessToken" duration-ms="45" started-at="2018-11-05T07:21:43Z" description="Token API Test sample" depends-on-methods="org.wso2.am.integration.tests.token.OpenIDTokenAPITestCase.testGenerateAccessTokenWithOpenIdScope" finished-at="2018-11-05T07:21:43Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="677" started-at="2018-11-05T07:21:43Z" finished-at="2018-11-05T07:21:43Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="598" started-at="2018-11-05T07:21:43Z" finished-at="2018-11-05T07:21:44Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.TagsRatingCommentTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="367" started-at="2018-11-05T07:34:46Z" finished-at="2018-11-05T07:34:46Z">
        </test-method>
        <test-method status="PASS" signature="testTagsRatingCommentTestCase()" name="testTagsRatingCommentTestCase" duration-ms="4616" started-at="2018-11-05T07:34:46Z" description="Comment Rating Test case" finished-at="2018-11-05T07:34:51Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="1000" started-at="2018-11-05T07:34:51Z" finished-at="2018-11-05T07:34:52Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="523" started-at="2018-11-05T07:34:52Z" finished-at="2018-11-05T07:34:52Z">
        </test-method>
        <test-method status="PASS" signature="testTagsRatingCommentTestCase()" name="testTagsRatingCommentTestCase" duration-ms="3395" started-at="2018-11-05T07:34:52Z" description="Comment Rating Test case" finished-at="2018-11-05T07:34:56Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="243" started-at="2018-11-05T07:34:56Z" finished-at="2018-11-05T07:34:56Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.APIMANAGER2611EndpointValidationTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="308" started-at="2018-11-05T07:40:44Z" finished-at="2018-11-05T07:40:44Z">
        </test-method>
        <test-method status="PASS" signature="checkEndpointValidation()" name="checkEndpointValidation" duration-ms="2025" started-at="2018-11-05T07:40:44Z" description="Validate endpoint with Http Head not support End point" finished-at="2018-11-05T07:40:46Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="482" started-at="2018-11-05T07:40:46Z" finished-at="2018-11-05T07:40:46Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="380" started-at="2018-11-05T07:40:46Z" finished-at="2018-11-05T07:40:47Z">
        </test-method>
        <test-method status="PASS" signature="checkEndpointValidation()" name="checkEndpointValidation" duration-ms="733" started-at="2018-11-05T07:40:47Z" description="Validate endpoint with Http Head not support End point" finished-at="2018-11-05T07:40:47Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="553" started-at="2018-11-05T07:40:47Z" finished-at="2018-11-05T07:40:48Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.version.DefaultVersionAPITestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="1576" started-at="2018-11-05T07:29:15Z" finished-at="2018-11-05T07:29:16Z">
        </test-method>
        <test-method status="PASS" signature="testDefaultVersionAPI()" name="testDefaultVersionAPI" duration-ms="4654" started-at="2018-11-05T07:29:16Z" description="Check functionality of the default version API" finished-at="2018-11-05T07:29:21Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="1192" started-at="2018-11-05T07:29:21Z" finished-at="2018-11-05T07:29:22Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="263" started-at="2018-11-05T07:29:22Z" finished-at="2018-11-05T07:29:22Z">
        </test-method>
        <test-method status="PASS" signature="testDefaultVersionAPI()" name="testDefaultVersionAPI" duration-ms="4419" started-at="2018-11-05T07:29:22Z" description="Check functionality of the default version API" finished-at="2018-11-05T07:29:27Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="367" started-at="2018-11-05T07:29:27Z" finished-at="2018-11-05T07:29:27Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.DAOTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="329" started-at="2018-11-05T07:28:57Z" finished-at="2018-11-05T07:28:58Z">
        </test-method>
        <test-method status="PASS" signature="testApplication()" name="testApplication" duration-ms="16" started-at="2018-11-05T07:28:58Z" description="Test application object" finished-at="2018-11-05T07:28:58Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="535" started-at="2018-11-05T07:28:58Z" finished-at="2018-11-05T07:28:58Z">
        </test-method>
        <test-method status="PASS" signature="testApplication()" name="testApplication" duration-ms="11" started-at="2018-11-05T07:28:58Z" description="Test application object" finished-at="2018-11-05T07:28:58Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationOperations()" name="testApplicationOperations" duration-ms="2" started-at="2018-11-05T07:28:58Z" description="Test application operations" finished-at="2018-11-05T07:28:58Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationOperations()" name="testApplicationOperations" duration-ms="2" started-at="2018-11-05T07:28:58Z" description="Test application operations" finished-at="2018-11-05T07:28:58Z">
        </test-method>
        <test-method status="PASS" signature="testDAOTestCase()" name="testDAOTestCase" duration-ms="6883" started-at="2018-11-05T07:28:58Z" description="API Life cycle test case" finished-at="2018-11-05T07:29:05Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="1631" started-at="2018-11-05T07:29:05Z" finished-at="2018-11-05T07:29:07Z">
        </test-method>
        <test-method status="PASS" signature="testDAOTestCase()" name="testDAOTestCase" duration-ms="7025" started-at="2018-11-05T07:29:07Z" description="API Life cycle test case" finished-at="2018-11-05T07:29:14Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="978" started-at="2018-11-05T07:29:14Z" finished-at="2018-11-05T07:29:15Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.jwt.URLSafeJWTTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="129196" started-at="2018-11-05T07:15:50Z" finished-at="2018-11-05T07:17:59Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="3766" started-at="2018-11-05T07:17:59Z" finished-at="2018-11-05T07:18:03Z">
        </test-method>
        <test-method status="PASS" signature="testEnableJWTAndClaims()" name="testEnableJWTAndClaims" duration-ms="15610" started-at="2018-11-05T07:18:03Z" description="Enabling JWT Token generation, admin user claims" finished-at="2018-11-05T07:18:18Z">
        </test-method>
        <test-method status="PASS" signature="testEnableJWTAndClaims()" name="testEnableJWTAndClaims" duration-ms="7639" started-at="2018-11-05T07:18:18Z" description="Enabling JWT Token generation, admin user claims" finished-at="2018-11-05T07:18:26Z">
        </test-method>
        <test-method status="PASS" signature="testAPIAccessWhenJWTCachingEnabledTestCase()" name="testAPIAccessWhenJWTCachingEnabledTestCase" duration-ms="24957" started-at="2018-11-05T07:18:26Z" description="JWT Token generation when JWT caching is enabled" depends-on-methods="org.wso2.am.integration.tests.jwt.URLSafeJWTTestCase.testEnableJWTAndClaims" finished-at="2018-11-05T07:18:51Z">
        </test-method>
        <test-method status="PASS" signature="testAPIAccessWhenJWTCachingEnabledTestCase()" name="testAPIAccessWhenJWTCachingEnabledTestCase" duration-ms="24241" started-at="2018-11-05T07:18:51Z" description="JWT Token generation when JWT caching is enabled" depends-on-methods="org.wso2.am.integration.tests.jwt.URLSafeJWTTestCase.testEnableJWTAndClaims" finished-at="2018-11-05T07:19:15Z">
        </test-method>
        <test-method status="PASS" signature="testSpecificUserJWTClaims()" name="testSpecificUserJWTClaims" duration-ms="1844" started-at="2018-11-05T07:19:15Z" description="Enabling JWT Token generation, specific user claims" depends-on-methods="org.wso2.am.integration.tests.jwt.URLSafeJWTTestCase.testAPIAccessWhenJWTCachingEnabledTestCase" finished-at="2018-11-05T07:19:17Z">
        </test-method>
        <test-method status="PASS" signature="testSpecificUserJWTClaims()" name="testSpecificUserJWTClaims" duration-ms="1854" started-at="2018-11-05T07:19:17Z" description="Enabling JWT Token generation, specific user claims" depends-on-methods="org.wso2.am.integration.tests.jwt.URLSafeJWTTestCase.testAPIAccessWhenJWTCachingEnabledTestCase" finished-at="2018-11-05T07:19:19Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="125855" started-at="2018-11-05T07:19:19Z" finished-at="2018-11-05T07:21:25Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="12723" started-at="2018-11-05T07:21:25Z" finished-at="2018-11-05T07:21:38Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.header.ESBJAVA3447PreserveCharsetInContentTypeTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="6959" started-at="2018-11-05T07:48:19Z" finished-at="2018-11-05T07:48:26Z">
        </test-method>
        <test-method status="PASS" signature="testPreserveCharsetInContentTypeHeader()" name="testPreserveCharsetInContentTypeHeader" duration-ms="21" started-at="2018-11-05T07:48:26Z" description="Test for preserving Charset in Content-Type header in the request" finished-at="2018-11-05T07:48:26Z">
        </test-method>
        <test-method status="PASS" signature="stop()" name="stop" is-config="true" duration-ms="138" started-at="2018-11-05T07:48:26Z" finished-at="2018-11-05T07:48:26Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.rest.SearchPaginatedAPIsWithMultipleStatusTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="381" started-at="2018-11-05T07:46:52Z" finished-at="2018-11-05T07:46:53Z">
        </test-method>
        <test-method status="PASS" signature="testPaginationWithMultipleStatus()" name="testPaginationWithMultipleStatus" duration-ms="65919" started-at="2018-11-05T07:46:53Z" description="check paginated API count" finished-at="2018-11-05T07:47:59Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="8144" started-at="2018-11-05T07:47:59Z" finished-at="2018-11-05T07:48:07Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.DigestAuthenticationTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="2030" started-at="2018-11-05T07:33:55Z" finished-at="2018-11-05T07:33:57Z">
        </test-method>
        <test-method status="PASS" signature="testDigestAuthentication()" name="testDigestAuthentication" duration-ms="12164" started-at="2018-11-05T07:33:57Z" description="Check functionality of the digest authenticated API" finished-at="2018-11-05T07:34:09Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="2000" started-at="2018-11-05T07:34:09Z" finished-at="2018-11-05T07:34:11Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.APIMANAGER3226APINameWithDifferentCaseTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="262" started-at="2018-11-05T07:48:31Z" finished-at="2018-11-05T07:48:32Z">
        </test-method>
        <test-method status="PASS" signature="testValidateAddAPIsWithDifferentCase()" name="testValidateAddAPIsWithDifferentCase" duration-ms="632" started-at="2018-11-05T07:48:32Z" description="Test validation of adding api with same name and different case(uppercase)" finished-at="2018-11-05T07:48:32Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="398" started-at="2018-11-05T07:48:32Z" finished-at="2018-11-05T07:48:33Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="258" started-at="2018-11-05T07:48:33Z" finished-at="2018-11-05T07:48:33Z">
        </test-method>
        <test-method status="PASS" signature="testValidateAddAPIsWithDifferentCase()" name="testValidateAddAPIsWithDifferentCase" duration-ms="753" started-at="2018-11-05T07:48:33Z" description="Test validation of adding api with same name and different case(uppercase)" finished-at="2018-11-05T07:48:34Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="433" started-at="2018-11-05T07:48:34Z" finished-at="2018-11-05T07:48:34Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.token.RefreshTokenTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="232" started-at="2018-11-05T07:34:19Z" finished-at="2018-11-05T07:34:20Z">
        </test-method>
        <test-method status="PASS" signature="testRefreshTokenAPITestCase()" name="testRefreshTokenAPITestCase" duration-ms="9465" started-at="2018-11-05T07:34:20Z" description="Test Refresh token functionality" finished-at="2018-11-05T07:34:29Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="1402" started-at="2018-11-05T07:34:29Z" finished-at="2018-11-05T07:34:31Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="2296" started-at="2018-11-05T07:34:31Z" finished-at="2018-11-05T07:34:33Z">
        </test-method>
        <test-method status="PASS" signature="testRefreshTokenAPITestCase()" name="testRefreshTokenAPITestCase" duration-ms="10480" started-at="2018-11-05T07:34:33Z" description="Test Refresh token functionality" finished-at="2018-11-05T07:34:43Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="2357" started-at="2018-11-05T07:34:43Z" finished-at="2018-11-05T07:34:46Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.APIInvocationFailureTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="325" started-at="2018-11-05T07:28:32Z" finished-at="2018-11-05T07:28:33Z">
        </test-method>
        <test-method status="PASS" signature="APIInvocationFailure()" name="APIInvocationFailure" duration-ms="6616" started-at="2018-11-05T07:28:33Z" description="Calling API with invalid token" finished-at="2018-11-05T07:28:39Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="537" started-at="2018-11-05T07:28:39Z" finished-at="2018-11-05T07:28:40Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="337" started-at="2018-11-05T07:28:40Z" finished-at="2018-11-05T07:28:40Z">
        </test-method>
        <test-method status="PASS" signature="APIInvocationFailure()" name="APIInvocationFailure" duration-ms="3839" started-at="2018-11-05T07:28:40Z" description="Calling API with invalid token" finished-at="2018-11-05T07:28:44Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="229" started-at="2018-11-05T07:28:44Z" finished-at="2018-11-05T07:28:44Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.APISearchAPIByTagTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="410" started-at="2018-11-05T07:25:16Z" finished-at="2018-11-05T07:25:17Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="405" started-at="2018-11-05T07:25:17Z" finished-at="2018-11-05T07:25:17Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreation()" name="testAPICreation" duration-ms="5475" started-at="2018-11-05T07:25:17Z" description="Sample API creation" finished-at="2018-11-05T07:25:22Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreation()" name="testAPICreation" duration-ms="6432" started-at="2018-11-05T07:25:22Z" description="Sample API creation" finished-at="2018-11-05T07:25:29Z">
        </test-method>
        <test-method status="PASS" signature="testAPISearchByTag()" name="testAPISearchByTag" duration-ms="227" started-at="2018-11-05T07:25:29Z" description="API search by TAG" depends-on-methods="org.wso2.am.integration.tests.other.APISearchAPIByTagTestCase.testAPICreation" finished-at="2018-11-05T07:25:29Z">
        </test-method>
        <test-method status="PASS" signature="testAPISearchByTag()" name="testAPISearchByTag" duration-ms="6526" started-at="2018-11-05T07:25:29Z" description="API search by TAG" depends-on-methods="org.wso2.am.integration.tests.other.APISearchAPIByTagTestCase.testAPICreation" finished-at="2018-11-05T07:25:36Z">
        </test-method>
        <test-method status="PASS" signature="testAPISearchByTagGroup()" name="testAPISearchByTagGroup" duration-ms="21196" started-at="2018-11-05T07:25:36Z" description="API search by group TAG" depends-on-methods="org.wso2.am.integration.tests.other.APISearchAPIByTagTestCase.testAPISearchByTag" finished-at="2018-11-05T07:25:57Z">
        </test-method>
        <test-method status="PASS" signature="testAPISearchByTagGroup()" name="testAPISearchByTagGroup" duration-ms="12053" started-at="2018-11-05T07:25:57Z" description="API search by group TAG" depends-on-methods="org.wso2.am.integration.tests.other.APISearchAPIByTagTestCase.testAPISearchByTag" finished-at="2018-11-05T07:26:09Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="133934" started-at="2018-11-05T07:26:09Z" finished-at="2018-11-05T07:28:23Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="6305" started-at="2018-11-05T07:28:23Z" finished-at="2018-11-05T07:28:29Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.APIM4765ResourceOrderInSwagger">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="279" started-at="2018-11-05T07:48:26Z" finished-at="2018-11-05T07:48:26Z">
        </test-method>
        <test-method status="PASS" signature="swaggerResourceOrderTest()" name="swaggerResourceOrderTest" duration-ms="4477" started-at="2018-11-05T07:48:26Z" description="Test resource order in the swagger" finished-at="2018-11-05T07:48:31Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="413" started-at="2018-11-05T07:48:31Z" finished-at="2018-11-05T07:48:31Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.APIImportExportTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="510" started-at="2018-11-05T07:24:10Z" finished-at="2018-11-05T07:24:10Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="509" started-at="2018-11-05T07:24:10Z" finished-at="2018-11-05T07:24:11Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreation()" name="testAPICreation" duration-ms="3123" started-at="2018-11-05T07:24:11Z" description="Sample API creation" finished-at="2018-11-05T07:24:14Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreation()" name="testAPICreation" duration-ms="3087" started-at="2018-11-05T07:24:14Z" description="Sample API creation" finished-at="2018-11-05T07:24:17Z">
        </test-method>
        <test-method status="PASS" signature="testAPIExport()" name="testAPIExport" duration-ms="339" started-at="2018-11-05T07:24:17Z" description="Exported Sample API" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testAPICreation" finished-at="2018-11-05T07:24:17Z">
        </test-method>
        <test-method status="PASS" signature="testAPIExport()" name="testAPIExport" duration-ms="473" started-at="2018-11-05T07:24:17Z" description="Exported Sample API" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testAPICreation" finished-at="2018-11-05T07:24:18Z">
        </test-method>
        <test-method status="PASS" signature="testAPIImport()" name="testAPIImport" duration-ms="2168" started-at="2018-11-05T07:24:18Z" description="Importing exported API" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testAPIExport" finished-at="2018-11-05T07:24:20Z">
        </test-method>
        <test-method status="PASS" signature="testAPIImport()" name="testAPIImport" duration-ms="1903" started-at="2018-11-05T07:24:20Z" description="Importing exported API" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testAPIExport" finished-at="2018-11-05T07:24:22Z">
        </test-method>
        <test-method status="PASS" signature="testAPIState()" name="testAPIState" duration-ms="91" started-at="2018-11-05T07:24:22Z" description="Checking status of the imported API" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testAPIImport" finished-at="2018-11-05T07:24:22Z">
        </test-method>
        <test-method status="PASS" signature="testAPIState()" name="testAPIState" duration-ms="86" started-at="2018-11-05T07:24:22Z" description="Checking status of the imported API" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testAPIImport" finished-at="2018-11-05T07:24:22Z">
        </test-method>
        <test-method status="PASS" signature="testNewAPICreation()" name="testNewAPICreation" duration-ms="3471" started-at="2018-11-05T07:24:22Z" description="Implementing sample api for scope test" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testAPIState" finished-at="2018-11-05T07:24:26Z">
        </test-method>
        <test-method status="PASS" signature="testNewAPICreation()" name="testNewAPICreation" duration-ms="3317" started-at="2018-11-05T07:24:26Z" description="Implementing sample api for scope test" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testAPIState" finished-at="2018-11-05T07:24:29Z">
        </test-method>
        <test-method status="PASS" signature="testNewAPIInvoke()" name="testNewAPIInvoke" duration-ms="795" started-at="2018-11-05T07:24:29Z" description="Invoke the API before export" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testNewAPICreation" finished-at="2018-11-05T07:24:30Z">
        </test-method>
        <test-method status="PASS" signature="testNewAPIInvoke()" name="testNewAPIInvoke" duration-ms="560" started-at="2018-11-05T07:24:30Z" description="Invoke the API before export" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testNewAPICreation" finished-at="2018-11-05T07:24:30Z">
        </test-method>
        <test-method status="PASS" signature="testNewAPIExport()" name="testNewAPIExport" duration-ms="164" started-at="2018-11-05T07:24:30Z" description="Exporting above created new API" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testNewAPIInvoke" finished-at="2018-11-05T07:24:30Z">
        </test-method>
        <test-method status="PASS" signature="testNewAPIExport()" name="testNewAPIExport" duration-ms="192" started-at="2018-11-05T07:24:30Z" description="Exporting above created new API" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testNewAPIInvoke" finished-at="2018-11-05T07:24:31Z">
        </test-method>
        <test-method status="PASS" signature="testNewAPIImport()" name="testNewAPIImport" duration-ms="1702" started-at="2018-11-05T07:24:31Z" description="Importing new API" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testNewAPIExport" finished-at="2018-11-05T07:24:32Z">
        </test-method>
        <test-method status="PASS" signature="testNewAPIImport()" name="testNewAPIImport" duration-ms="2152" started-at="2018-11-05T07:24:32Z" description="Importing new API" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testNewAPIExport" finished-at="2018-11-05T07:24:34Z">
        </test-method>
        <test-method status="PASS" signature="testNewAPIState()" name="testNewAPIState" duration-ms="81" started-at="2018-11-05T07:24:34Z" description="Checking newly imported API status" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testNewAPIImport" finished-at="2018-11-05T07:24:34Z">
        </test-method>
        <test-method status="PASS" signature="testNewAPIState()" name="testNewAPIState" duration-ms="85" started-at="2018-11-05T07:24:34Z" description="Checking newly imported API status" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testNewAPIImport" finished-at="2018-11-05T07:24:35Z">
        </test-method>
        <test-method status="PASS" signature="testNewAPIInvokeAfterImport()" name="testNewAPIInvokeAfterImport" duration-ms="2225" started-at="2018-11-05T07:24:35Z" description="Invoke the newly imported API" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testNewAPIState" finished-at="2018-11-05T07:24:37Z">
        </test-method>
        <test-method status="PASS" signature="testNewAPIInvokeAfterImport()" name="testNewAPIInvokeAfterImport" duration-ms="2586" started-at="2018-11-05T07:24:37Z" description="Invoke the newly imported API" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testNewAPIState" finished-at="2018-11-05T07:24:39Z">
        </test-method>
        <test-method status="PASS" signature="testPreserveProviderTrueAPICreation()" name="testPreserveProviderTrueAPICreation" duration-ms="2636" started-at="2018-11-05T07:24:39Z" description="Sample API creation" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testNewAPIInvokeAfterImport" finished-at="2018-11-05T07:24:42Z">
        </test-method>
        <test-method status="PASS" signature="testPreserveProviderTrueAPICreation()" name="testPreserveProviderTrueAPICreation" duration-ms="2836" started-at="2018-11-05T07:24:42Z" description="Sample API creation" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testNewAPIInvokeAfterImport" finished-at="2018-11-05T07:24:45Z">
        </test-method>
        <test-method status="PASS" signature="testPreserveProviderTrueApiExport()" name="testPreserveProviderTrueApiExport" duration-ms="793" started-at="2018-11-05T07:24:45Z" description="Exported Sample API" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testPreserveProviderTrueAPICreation" finished-at="2018-11-05T07:24:46Z">
        </test-method>
        <test-method status="PASS" signature="testPreserveProviderTrueApiExport()" name="testPreserveProviderTrueApiExport" duration-ms="799" started-at="2018-11-05T07:24:46Z" description="Exported Sample API" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testPreserveProviderTrueAPICreation" finished-at="2018-11-05T07:24:46Z">
        </test-method>
        <test-method status="PASS" signature="testPreserveProviderTrueSameProviderApiImport()" name="testPreserveProviderTrueSameProviderApiImport" duration-ms="2751" started-at="2018-11-05T07:24:46Z" description="Importing exported API" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testPreserveProviderTrueApiExport" finished-at="2018-11-05T07:24:49Z">
        </test-method>
        <test-method status="PASS" signature="testPreserveProviderTrueSameProviderApiImport()" name="testPreserveProviderTrueSameProviderApiImport" duration-ms="2878" started-at="2018-11-05T07:24:49Z" description="Importing exported API" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testPreserveProviderTrueApiExport" finished-at="2018-11-05T07:24:52Z">
        </test-method>
        <test-method status="PASS" signature="testPreserveProviderFalseAPICreation()" name="testPreserveProviderFalseAPICreation" duration-ms="3698" started-at="2018-11-05T07:24:52Z" description="Sample API creation" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testPreserveProviderTrueSameProviderApiImport" finished-at="2018-11-05T07:24:56Z">
        </test-method>
        <test-method status="PASS" signature="testPreserveProviderFalseAPICreation()" name="testPreserveProviderFalseAPICreation" duration-ms="3102" started-at="2018-11-05T07:24:56Z" description="Sample API creation" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testPreserveProviderTrueSameProviderApiImport" finished-at="2018-11-05T07:24:59Z">
        </test-method>
        <test-method status="PASS" signature="testPreserveProviderFalseApiExport()" name="testPreserveProviderFalseApiExport" duration-ms="813" started-at="2018-11-05T07:24:59Z" description="Exported Sample API" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testPreserveProviderFalseAPICreation" finished-at="2018-11-05T07:25:00Z">
        </test-method>
        <test-method status="PASS" signature="testPreserveProviderFalseApiExport()" name="testPreserveProviderFalseApiExport" duration-ms="1068" started-at="2018-11-05T07:25:00Z" description="Exported Sample API" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testPreserveProviderFalseAPICreation" finished-at="2018-11-05T07:25:01Z">
        </test-method>
        <test-method status="PASS" signature="testPreserveProviderFalseSameProviderApiImport()" name="testPreserveProviderFalseSameProviderApiImport" duration-ms="2839" started-at="2018-11-05T07:25:01Z" description="Importing exported API" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testPreserveProviderFalseApiExport" finished-at="2018-11-05T07:25:04Z">
        </test-method>
        <test-method status="PASS" signature="testPreserveProviderFalseSameProviderApiImport()" name="testPreserveProviderFalseSameProviderApiImport" duration-ms="3216" started-at="2018-11-05T07:25:04Z" description="Importing exported API" depends-on-methods="org.wso2.am.integration.tests.other.APIImportExportTestCase.testPreserveProviderFalseApiExport" finished-at="2018-11-05T07:25:07Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="1376" started-at="2018-11-05T07:25:07Z" finished-at="2018-11-05T07:25:08Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="887" started-at="2018-11-05T07:25:08Z" finished-at="2018-11-05T07:25:09Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.login.EmailUserNameLoginTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="121975" started-at="2018-11-05T07:29:27Z" finished-at="2018-11-05T07:31:29Z">
        </test-method>
        <test-method status="PASS" signature="LoginWithEmailUserNameTestCase()" name="LoginWithEmailUserNameTestCase" duration-ms="20872" started-at="2018-11-05T07:31:29Z" description="Email username login test case" finished-at="2018-11-05T07:31:50Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="125133" started-at="2018-11-05T07:31:50Z" finished-at="2018-11-05T07:33:55Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.rest.URLMappingRESTTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="2103" started-at="2018-11-05T07:40:39Z" finished-at="2018-11-05T07:40:41Z">
        </test-method>
        <test-method status="PASS" signature="testRESTURITemplate()" name="testRESTURITemplate" duration-ms="15" started-at="2018-11-05T07:40:41Z" description="Sending a Message Via REST to test uri template fix" finished-at="2018-11-05T07:40:41Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="200" started-at="2018-11-05T07:40:41Z" finished-at="2018-11-05T07:40:42Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="1739" started-at="2018-11-05T07:40:42Z" finished-at="2018-11-05T07:40:43Z">
        </test-method>
        <test-method status="PASS" signature="testRESTURITemplate()" name="testRESTURITemplate" duration-ms="16" started-at="2018-11-05T07:40:43Z" description="Sending a Message Via REST to test uri template fix" finished-at="2018-11-05T07:40:43Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="267" started-at="2018-11-05T07:40:43Z" finished-at="2018-11-05T07:40:44Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="387" started-at="2018-11-05T07:22:55Z" finished-at="2018-11-05T07:22:55Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreation()" name="testAPICreation" duration-ms="4151" started-at="2018-11-05T07:22:55Z" description="Sample API creation and subscribe" finished-at="2018-11-05T07:22:59Z">
        </test-method>
        <test-method status="PASS" signature="testHTTPTransportBeforeUpdate()" name="testHTTPTransportBeforeUpdate" duration-ms="438" started-at="2018-11-05T07:22:59Z" description="Invoke HTTP before Update" depends-on-methods="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase.testAPICreation" finished-at="2018-11-05T07:22:59Z">
        </test-method>
        <test-method status="PASS" signature="testUpdatedHTTPTransport()" name="testUpdatedHTTPTransport" duration-ms="16673" started-at="2018-11-05T07:22:59Z" description="Update to only HTTP transport and invoke" depends-on-methods="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase.testHTTPTransportBeforeUpdate" finished-at="2018-11-05T07:23:16Z">
        </test-method>
        <test-method status="PASS" signature="testUpdatedHTTPSTransport()" name="testUpdatedHTTPSTransport" duration-ms="16304" started-at="2018-11-05T07:23:16Z" description="Update to only HTTPS transport and invoke" depends-on-methods="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase.testUpdatedHTTPTransport" finished-at="2018-11-05T07:23:32Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreationTenant()" name="testAPICreationTenant" duration-ms="3314" started-at="2018-11-05T07:23:32Z" description="Update to only HTTPS transport and invoke" depends-on-methods="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase.testUpdatedHTTPSTransport" finished-at="2018-11-05T07:23:36Z">
        </test-method>
        <test-method status="PASS" signature="testHTTPTransportBeforeUpdateInTenant()" name="testHTTPTransportBeforeUpdateInTenant" duration-ms="285" started-at="2018-11-05T07:23:36Z" description="Invoke HTTP before Update" depends-on-methods="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase.testAPICreationTenant" finished-at="2018-11-05T07:23:36Z">
        </test-method>
        <test-method status="PASS" signature="testUpdatedHTTPTransportTenant()" name="testUpdatedHTTPTransportTenant" duration-ms="16323" started-at="2018-11-05T07:23:36Z" description="Update to only HTTP transport and invoke" depends-on-methods="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase.testHTTPTransportBeforeUpdateInTenant" finished-at="2018-11-05T07:23:52Z">
        </test-method>
        <test-method status="PASS" signature="testUpdatedHTTPSTransportTenant()" name="testUpdatedHTTPSTransportTenant" duration-ms="16295" started-at="2018-11-05T07:23:52Z" description="Update to only HTTPS transport and invoke" depends-on-methods="org.wso2.am.integration.tests.other.APIEndpointTypeUpdateTestCase.testUpdatedHTTPTransportTenant" finished-at="2018-11-05T07:24:09Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="1078" started-at="2018-11-05T07:24:09Z" finished-at="2018-11-05T07:24:10Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.LocationHeaderTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="1660" started-at="2018-11-05T07:40:48Z" finished-at="2018-11-05T07:40:50Z">
        </test-method>
        <test-method status="PASS" signature="testAPIWithLocationHeader()" name="testAPIWithLocationHeader" duration-ms="3405" started-at="2018-11-05T07:40:50Z" description="Check whether the Location header is correct" finished-at="2018-11-05T07:40:53Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="765" started-at="2018-11-05T07:40:53Z" finished-at="2018-11-05T07:40:54Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.jwt.JWTTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="124044" started-at="2018-11-05T07:11:52Z" finished-at="2018-11-05T07:13:56Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="3711" started-at="2018-11-05T07:13:56Z" finished-at="2018-11-05T07:14:00Z">
        </test-method>
        <test-method status="PASS" signature="testEnableJWTAndClaims()" name="testEnableJWTAndClaims" duration-ms="17235" started-at="2018-11-05T07:14:00Z" description="Enabling JWT Token generation, admin user claims" finished-at="2018-11-05T07:14:17Z">
        </test-method>
        <test-method status="PASS" signature="testEnableJWTAndClaims()" name="testEnableJWTAndClaims" duration-ms="8839" started-at="2018-11-05T07:14:17Z" description="Enabling JWT Token generation, admin user claims" finished-at="2018-11-05T07:14:26Z">
        </test-method>
        <test-method status="PASS" signature="testAPIAccessWhenJWTCachingEnabledTestCase()" name="testAPIAccessWhenJWTCachingEnabledTestCase" duration-ms="25884" started-at="2018-11-05T07:14:26Z" description="JWT Token generation when JWT caching is enabled" depends-on-methods="org.wso2.am.integration.tests.jwt.JWTTestCase.testEnableJWTAndClaims" finished-at="2018-11-05T07:14:52Z">
        </test-method>
        <test-method status="PASS" signature="testAPIAccessWhenJWTCachingEnabledTestCase()" name="testAPIAccessWhenJWTCachingEnabledTestCase" duration-ms="26742" started-at="2018-11-05T07:14:52Z" description="JWT Token generation when JWT caching is enabled" depends-on-methods="org.wso2.am.integration.tests.jwt.JWTTestCase.testEnableJWTAndClaims" finished-at="2018-11-05T07:15:19Z">
        </test-method>
        <test-method status="PASS" signature="testSpecificUserJWTClaims()" name="testSpecificUserJWTClaims" duration-ms="7288" started-at="2018-11-05T07:15:19Z" description="Enabling JWT Token generation, specific user claims" depends-on-methods="org.wso2.am.integration.tests.jwt.JWTTestCase.testAPIAccessWhenJWTCachingEnabledTestCase" finished-at="2018-11-05T07:15:26Z">
        </test-method>
        <test-method status="PASS" signature="testSpecificUserJWTClaims()" name="testSpecificUserJWTClaims" duration-ms="6872" started-at="2018-11-05T07:15:26Z" description="Enabling JWT Token generation, specific user claims" depends-on-methods="org.wso2.am.integration.tests.jwt.JWTTestCase.testAPIAccessWhenJWTCachingEnabledTestCase" finished-at="2018-11-05T07:15:33Z">
        </test-method>
        <test-method status="PASS" signature="testPrototypeInvocationWithJWTEnabled()" name="testPrototypeInvocationWithJWTEnabled" duration-ms="6237" started-at="2018-11-05T07:15:33Z" description="Invoking Prototype api with JWT enabled" depends-on-methods="org.wso2.am.integration.tests.jwt.JWTTestCase.testSpecificUserJWTClaims" finished-at="2018-11-05T07:15:39Z">
        </test-method>
        <test-method status="PASS" signature="testPrototypeInvocationWithJWTEnabled()" name="testPrototypeInvocationWithJWTEnabled" duration-ms="4422" started-at="2018-11-05T07:15:39Z" description="Invoking Prototype api with JWT enabled" depends-on-methods="org.wso2.am.integration.tests.jwt.JWTTestCase.testSpecificUserJWTClaims" finished-at="2018-11-05T07:15:44Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="4384" started-at="2018-11-05T07:15:44Z" finished-at="2018-11-05T07:15:48Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="1917" started-at="2018-11-05T07:15:48Z" finished-at="2018-11-05T07:15:50Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.lifecycle.InvokeAPIUsingOldThrottlingWithWSClient">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="127189" started-at="2018-11-05T07:35:04Z" finished-at="2018-11-05T07:37:11Z">
        </test-method>
        <test-method status="PASS" signature="testInvokingAPIWithOldThrottleUsingWSClient()" name="testInvokingAPIWithOldThrottleUsingWSClient" duration-ms="14955" started-at="2018-11-05T07:37:11Z" description="test  invocation of  api using old throttle and ws client" finished-at="2018-11-05T07:37:26Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="122916" started-at="2018-11-05T07:37:26Z" finished-at="2018-11-05T07:39:29Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.RelativeUrlLocationHeaderTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="1781" started-at="2018-11-05T07:40:54Z" finished-at="2018-11-05T07:40:56Z">
        </test-method>
        <test-method status="PASS" signature="testAPIWithRelativeUrlLocationHeader()" name="testAPIWithRelativeUrlLocationHeader" duration-ms="3465" started-at="2018-11-05T07:40:56Z" description="Check functionality of the API for relative URL location header" finished-at="2018-11-05T07:40:59Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="686" started-at="2018-11-05T07:40:59Z" finished-at="2018-11-05T07:41:00Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.header.APIMANAGER3614DuplicateTransferEncodingHeaderTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="12069" started-at="2018-11-05T07:48:07Z" finished-at="2018-11-05T07:48:19Z">
        </test-method>
        <test-method status="PASS" signature="testDuplicateTransferEncodingPropertyTest()" name="testDuplicateTransferEncodingPropertyTest" duration-ms="35" started-at="2018-11-05T07:48:19Z" description="Test for reading the duplicate transfer-encoding header in the response" finished-at="2018-11-05T07:48:19Z">
        </test-method>
        <test-method status="PASS" signature="stop()" name="stop" is-config="true" duration-ms="147" started-at="2018-11-05T07:48:19Z" finished-at="2018-11-05T07:48:19Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.APIScopeTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="2016" started-at="2018-11-05T07:21:44Z" finished-at="2018-11-05T07:21:46Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="266" started-at="2018-11-05T07:21:46Z" finished-at="2018-11-05T07:21:46Z">
        </test-method>
        <test-method status="PASS" signature="testSetScopeToResourceTestCase()" name="testSetScopeToResourceTestCase" duration-ms="25065" started-at="2018-11-05T07:21:46Z" description="Testing the scopes with admin, subscriber roles" finished-at="2018-11-05T07:22:11Z">
        </test-method>
        <test-method status="PASS" signature="testSetScopeToResourceTestCase()" name="testSetScopeToResourceTestCase" duration-ms="22245" started-at="2018-11-05T07:22:11Z" description="Testing the scopes with admin, subscriber roles" finished-at="2018-11-05T07:22:34Z">
        </test-method>
        <test-method status="PASS" signature="testCopyApiWithScopes()" name="testCopyApiWithScopes" duration-ms="7190" started-at="2018-11-05T07:22:34Z" description="Testing Copy api with scopes assigned" depends-on-methods="org.wso2.am.integration.tests.other.APIScopeTestCase.testSetScopeToResourceTestCase" finished-at="2018-11-05T07:22:41Z">
        </test-method>
        <test-method status="PASS" signature="testCopyApiWithScopes()" name="testCopyApiWithScopes" duration-ms="5840" started-at="2018-11-05T07:22:41Z" description="Testing Copy api with scopes assigned" depends-on-methods="org.wso2.am.integration.tests.other.APIScopeTestCase.testSetScopeToResourceTestCase" finished-at="2018-11-05T07:22:47Z">
        </test-method>
        <test-method status="PASS" signature="testUpdateApiWithScopes()" name="testUpdateApiWithScopes" duration-ms="1306" started-at="2018-11-05T07:22:47Z" description="Testing Update api with scopes assigned" depends-on-methods="org.wso2.am.integration.tests.other.APIScopeTestCase.testCopyApiWithScopes" finished-at="2018-11-05T07:22:48Z">
        </test-method>
        <test-method status="PASS" signature="testUpdateApiWithScopes()" name="testUpdateApiWithScopes" duration-ms="2011" started-at="2018-11-05T07:22:48Z" description="Testing Update api with scopes assigned" depends-on-methods="org.wso2.am.integration.tests.other.APIScopeTestCase.testCopyApiWithScopes" finished-at="2018-11-05T07:22:50Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="1394" started-at="2018-11-05T07:22:50Z" finished-at="2018-11-05T07:22:51Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="3235" started-at="2018-11-05T07:22:51Z" finished-at="2018-11-05T07:22:55Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.HttpPATCHSupportTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="1823" started-at="2018-11-05T07:34:11Z" finished-at="2018-11-05T07:34:13Z">
        </test-method>
        <test-method status="PASS" signature="testHttpPatchSupport()" name="testHttpPatchSupport" duration-ms="5098" started-at="2018-11-05T07:34:13Z" description="Check functionality of HTTP PATCH support for APIM" finished-at="2018-11-05T07:34:18Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="1298" started-at="2018-11-05T07:34:18Z" finished-at="2018-11-05T07:34:19Z">
        </test-method>
      </class>
    </test>
    <test name="apim-store-tests" duration-ms="492843" started-at="2018-11-05T07:52:08Z" finished-at="2018-11-05T08:00:21Z">
      <class name="org.wso2.am.integration.tests.other.APIM684GenerateApplicationKeyTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="215" started-at="2018-11-05T07:57:46Z" finished-at="2018-11-05T07:57:46Z">
        </test-method>
        <test-method status="PASS" signature="generateApplicationKeyWithoutScope()" name="generateApplicationKeyWithoutScope" duration-ms="3443" started-at="2018-11-05T07:57:46Z" description="Generate New Application Key" finished-at="2018-11-05T07:57:50Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="408" started-at="2018-11-05T07:57:50Z" finished-at="2018-11-05T07:57:50Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.APIM720GetAllEndPointsTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="2769" started-at="2018-11-05T07:56:23Z" finished-at="2018-11-05T07:56:26Z">
        </test-method>
        <test-method status="PASS" signature="getAllEndpointUrlsTest()" name="getAllEndpointUrlsTest" duration-ms="52" started-at="2018-11-05T07:56:26Z" description="Get All Endpoints" finished-at="2018-11-05T07:56:26Z">
        </test-method>
        <test-method status="PASS" signature="addCommentTest()" name="addCommentTest" duration-ms="33" started-at="2018-11-05T07:56:26Z" description="Add Comments" depends-on-methods="org.wso2.am.integration.tests.other.APIM720GetAllEndPointsTestCase.getAllEndpointUrlsTest" finished-at="2018-11-05T07:56:26Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="523" started-at="2018-11-05T07:56:26Z" finished-at="2018-11-05T07:56:26Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.application.APIMANAGER3706ApplicationUpdateTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="280" started-at="2018-11-05T07:57:32Z" finished-at="2018-11-05T07:57:32Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="327" started-at="2018-11-05T07:57:32Z" finished-at="2018-11-05T07:57:32Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationCreation()" name="testApplicationCreation" duration-ms="247" started-at="2018-11-05T07:57:32Z" description="Sample Application creation" finished-at="2018-11-05T07:57:33Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationCreation()" name="testApplicationCreation" duration-ms="281" started-at="2018-11-05T07:57:33Z" description="Sample Application creation" finished-at="2018-11-05T07:57:33Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationUpdate()" name="testApplicationUpdate" duration-ms="102" started-at="2018-11-05T07:57:33Z" description=" Application update" depends-on-methods="org.wso2.am.integration.tests.application.APIMANAGER3706ApplicationUpdateTestCase.testApplicationCreation" finished-at="2018-11-05T07:57:33Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationUpdate()" name="testApplicationUpdate" duration-ms="94" started-at="2018-11-05T07:57:33Z" description=" Application update" depends-on-methods="org.wso2.am.integration.tests.application.APIMANAGER3706ApplicationUpdateTestCase.testApplicationCreation" finished-at="2018-11-05T07:57:33Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationNameUpdateAfterKeyGeneration()" name="testApplicationNameUpdateAfterKeyGeneration" duration-ms="27" started-at="2018-11-05T07:57:33Z" description="Test Application name update after key generate" depends-on-methods="org.wso2.am.integration.tests.application.APIMANAGER3706ApplicationUpdateTestCase.testApplicationUpdate" finished-at="2018-11-05T07:57:33Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationNameUpdateAfterKeyGeneration()" name="testApplicationNameUpdateAfterKeyGeneration" duration-ms="29" started-at="2018-11-05T07:57:33Z" description="Test Application name update after key generate" depends-on-methods="org.wso2.am.integration.tests.application.APIMANAGER3706ApplicationUpdateTestCase.testApplicationUpdate" finished-at="2018-11-05T07:57:33Z">
        </test-method>
        <test-method status="PASS" signature="testRegenerateConsumerSecret()" name="testRegenerateConsumerSecret" duration-ms="32" started-at="2018-11-05T07:57:33Z" description="Test regenerate consumer secret after application key generate" depends-on-methods="org.wso2.am.integration.tests.application.APIMANAGER3706ApplicationUpdateTestCase.testApplicationCreation" finished-at="2018-11-05T07:57:33Z">
        </test-method>
        <test-method status="PASS" signature="testRegenerateConsumerSecret()" name="testRegenerateConsumerSecret" duration-ms="14" started-at="2018-11-05T07:57:33Z" description="Test regenerate consumer secret after application key generate" depends-on-methods="org.wso2.am.integration.tests.application.APIMANAGER3706ApplicationUpdateTestCase.testApplicationCreation" finished-at="2018-11-05T07:57:33Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="295" started-at="2018-11-05T07:57:33Z" finished-at="2018-11-05T07:57:33Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="273" started-at="2018-11-05T07:57:33Z" finished-at="2018-11-05T07:57:34Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.APIM641StoreApiTestCase">
        <test-method status="PASS" signature="init()" name="init" is-config="true" duration-ms="195" started-at="2018-11-05T07:57:59Z" finished-at="2018-11-05T07:57:59Z">
        </test-method>
        <test-method status="PASS" signature="testInvalidStoreLogin(java.lang.String, java.lang.String)" name="testInvalidStoreLogin" duration-ms="33" started-at="2018-11-05T07:57:59Z" description="Verify Invalid Login for different scenarios" finished-at="2018-11-05T07:57:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testInvalidStoreLogin(java.lang.String, java.lang.String)" name="testInvalidStoreLogin" duration-ms="25" started-at="2018-11-05T07:57:59Z" description="Verify Invalid Login for different scenarios" finished-at="2018-11-05T07:57:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testInvalidStoreLogin(java.lang.String, java.lang.String)" name="testInvalidStoreLogin" duration-ms="24" started-at="2018-11-05T07:57:59Z" description="Verify Invalid Login for different scenarios" finished-at="2018-11-05T07:57:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testInvalidStoreLogin(java.lang.String, java.lang.String)" name="testInvalidStoreLogin" duration-ms="24" started-at="2018-11-05T07:57:59Z" description="Verify Invalid Login for different scenarios" finished-at="2018-11-05T07:57:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testInvalidStoreLogin(java.lang.String, java.lang.String)" name="testInvalidStoreLogin" duration-ms="29" started-at="2018-11-05T07:57:59Z" description="Verify Invalid Login for different scenarios" finished-at="2018-11-05T07:57:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testInvalidUserSignUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)" name="testInvalidUserSignUp" duration-ms="21" started-at="2018-11-05T07:57:59Z" description="invalid user sign up" finished-at="2018-11-05T07:57:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[user6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[User6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Test]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[user2@wso2.com]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testInvalidUserSignUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)" name="testInvalidUserSignUp" duration-ms="449" started-at="2018-11-05T07:57:59Z" description="invalid user sign up" finished-at="2018-11-05T07:58:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[user7pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[User7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Test]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[user2@wso2.com]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testUserSignUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)" name="testUserSignUp" duration-ms="543" started-at="2018-11-05T07:58:00Z" description="Verify user sign up" finished-at="2018-11-05T07:58:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[user1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[user1pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[firstName]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[lastNmae]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[user1@wso2.com]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testUserSignUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)" name="testUserSignUp" duration-ms="545" started-at="2018-11-05T07:58:00Z" description="Verify user sign up" finished-at="2018-11-05T07:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[user3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[user3pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[User3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Test]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testUserSignUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)" name="testUserSignUp" duration-ms="570" started-at="2018-11-05T07:58:01Z" description="Verify user sign up" finished-at="2018-11-05T07:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[user4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[user4pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[User2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[user2@wso2.com]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testUserSignUp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)" name="testUserSignUp" duration-ms="560" started-at="2018-11-05T07:58:01Z" description="Verify user sign up" finished-at="2018-11-05T07:58:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[user5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[user5pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Test]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[user2@wso2.com]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testValidStoreLoginAndLogout(java.lang.String, java.lang.String)" name="testValidStoreLoginAndLogout" duration-ms="63" started-at="2018-11-05T07:58:02Z" description="Verify Valid login for different scenarios" finished-at="2018-11-05T07:58:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testValidStoreLoginAndLogout(java.lang.String, java.lang.String)" name="testValidStoreLoginAndLogout" duration-ms="122" started-at="2018-11-05T07:58:02Z" description="Verify Valid login for different scenarios" finished-at="2018-11-05T07:58:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[testu1@carbon.super]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testu1pass]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testValidStoreLoginAndLogout(java.lang.String, java.lang.String)" name="testValidStoreLoginAndLogout" duration-ms="67" started-at="2018-11-05T07:58:02Z" description="Verify Valid login for different scenarios" finished-at="2018-11-05T07:58:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin@wso2.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testValidStoreLoginAndLogout(java.lang.String, java.lang.String)" name="testValidStoreLoginAndLogout" duration-ms="140" started-at="2018-11-05T07:58:02Z" description="Verify Valid login for different scenarios" finished-at="2018-11-05T07:58:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[testuser11@wso2.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testuser11]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="246" started-at="2018-11-05T07:58:02Z" finished-at="2018-11-05T07:58:03Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.application.CAPIMGT12CallBackURLOverwriteTestCase">
        <test-method status="PASS" signature="init()" name="init" is-config="true" duration-ms="235" started-at="2018-11-05T08:00:20Z" finished-at="2018-11-05T08:00:20Z">
        </test-method>
        <test-method status="PASS" signature="callBackUrlUpdateTestCase()" name="callBackUrlUpdateTestCase" duration-ms="826" started-at="2018-11-05T08:00:20Z" description="Application call back url update and overwriting test case" finished-at="2018-11-05T08:00:21Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="127" started-at="2018-11-05T08:00:21Z" finished-at="2018-11-05T08:00:21Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.APIMANAGER5326CustomStatusMsgTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="10215" started-at="2018-11-05T07:59:39Z" finished-at="2018-11-05T07:59:49Z">
        </test-method>
        <test-method status="PASS" signature="testAPIErrorResponse()" name="testAPIErrorResponse" duration-ms="3547" started-at="2018-11-05T07:59:49Z" description="testing error responses" finished-at="2018-11-05T07:59:53Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="691" started-at="2018-11-05T07:59:53Z" finished-at="2018-11-05T07:59:53Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.ErrorResponseCheckTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="1531" started-at="2018-11-05T07:59:34Z" finished-at="2018-11-05T07:59:35Z">
        </test-method>
        <test-method status="PASS" signature="testAPIErrorResponse()" name="testAPIErrorResponse" duration-ms="2920" started-at="2018-11-05T07:59:35Z" description="testing error responses" finished-at="2018-11-05T07:59:38Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="890" started-at="2018-11-05T07:59:38Z" finished-at="2018-11-05T07:59:39Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.StoreChangePasswordTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="216" started-at="2018-11-05T08:00:21Z" finished-at="2018-11-05T08:00:21Z">
        </test-method>
        <test-method status="PASS" signature="changePasswordWithInvalidSession()" name="changePasswordWithInvalidSession" duration-ms="12" started-at="2018-11-05T08:00:21Z" description="Change password in a invalid session" finished-at="2018-11-05T08:00:21Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="103" started-at="2018-11-05T08:00:21Z" finished-at="2018-11-05T08:00:21Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="266" started-at="2018-11-05T07:53:10Z" finished-at="2018-11-05T07:53:10Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="257" started-at="2018-11-05T07:53:10Z" finished-at="2018-11-05T07:53:10Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationCreation(java.lang.String, java.lang.String, java.lang.String)" name="testApplicationCreation" duration-ms="23" started-at="2018-11-05T07:53:10Z" description="Create an Application" finished-at="2018-11-05T07:53:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[NewApplication1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Unlimited]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NewApplicationCreation]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testApplicationCreation(java.lang.String, java.lang.String, java.lang.String)" name="testApplicationCreation" duration-ms="20" started-at="2018-11-05T07:53:10Z" description="Create an Application" finished-at="2018-11-05T07:53:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[NewApplication1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Unlimited]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NewApplicationCreation]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testApplicationCreation(java.lang.String, java.lang.String, java.lang.String)" name="testApplicationCreation" duration-ms="16" started-at="2018-11-05T07:53:10Z" description="Create an Application" finished-at="2018-11-05T07:53:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[NewApplication2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Unlimited]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testApplicationCreation(java.lang.String, java.lang.String, java.lang.String)" name="testApplicationCreation" duration-ms="17" started-at="2018-11-05T07:53:10Z" description="Create an Application" finished-at="2018-11-05T07:53:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[NewApplication2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Unlimited]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testApplicationCreation(java.lang.String, java.lang.String, java.lang.String)" name="testApplicationCreation" duration-ms="22" started-at="2018-11-05T07:53:10Z" description="Create an Application" finished-at="2018-11-05T07:53:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[NewApplication3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Unlimited]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NewApplicationCreation]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testApplicationCreation(java.lang.String, java.lang.String, java.lang.String)" name="testApplicationCreation" duration-ms="16" started-at="2018-11-05T07:53:10Z" description="Create an Application" finished-at="2018-11-05T07:53:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[NewApplication3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Unlimited]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NewApplicationCreation]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testApplicationCreation(java.lang.String, java.lang.String, java.lang.String)" name="testApplicationCreation" duration-ms="16" started-at="2018-11-05T07:53:10Z" description="Create an Application" finished-at="2018-11-05T07:53:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[NewApplication4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Unlimited]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testApplicationCreation(java.lang.String, java.lang.String, java.lang.String)" name="testApplicationCreation" duration-ms="40" started-at="2018-11-05T07:53:10Z" description="Create an Application" finished-at="2018-11-05T07:53:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[NewApplication4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Unlimited]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getAllCreatedApplications()" name="getAllCreatedApplications" duration-ms="11" started-at="2018-11-05T07:53:10Z" description="Get all created applications" depends-on-methods="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase.testApplicationCreation" finished-at="2018-11-05T07:53:10Z">
        </test-method>
        <test-method status="PASS" signature="getAllCreatedApplications()" name="getAllCreatedApplications" duration-ms="10" started-at="2018-11-05T07:53:10Z" description="Get all created applications" depends-on-methods="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase.testApplicationCreation" finished-at="2018-11-05T07:53:10Z">
        </test-method>
        <test-method status="PASS" signature="testAlreadyCreatedApplication()" name="testAlreadyCreatedApplication" duration-ms="8" started-at="2018-11-05T07:53:10Z" description="Create already created application" depends-on-methods="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase.testApplicationCreation" finished-at="2018-11-05T07:53:10Z">
        </test-method>
        <test-method status="PASS" signature="testAlreadyCreatedApplication()" name="testAlreadyCreatedApplication" duration-ms="13" started-at="2018-11-05T07:53:10Z" description="Create already created application" depends-on-methods="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase.testApplicationCreation" finished-at="2018-11-05T07:53:11Z">
        </test-method>
        <test-method status="PASS" signature="testUpdateApplication()" name="testUpdateApplication" duration-ms="203" started-at="2018-11-05T07:53:11Z" description="Update an application" depends-on-methods="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase.testApplicationCreation" finished-at="2018-11-05T07:53:11Z">
        </test-method>
        <test-method status="PASS" signature="testUpdateApplication()" name="testUpdateApplication" duration-ms="117" started-at="2018-11-05T07:53:11Z" description="Update an application" depends-on-methods="org.wso2.am.integration.tests.other.APIM678ApplicationCreationTestCase.testApplicationCreation" finished-at="2018-11-05T07:53:11Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationCreationForInvalidData(java.lang.String, java.lang.String, java.lang.String)" name="testApplicationCreationForInvalidData" duration-ms="12" started-at="2018-11-05T07:57:50Z" description="Create application for invalid data" finished-at="2018-11-05T07:57:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Unlimited]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testApplicationCreationForInvalidData(java.lang.String, java.lang.String, java.lang.String)" name="testApplicationCreationForInvalidData" duration-ms="25" started-at="2018-11-05T07:57:50Z" description="Create application for invalid data" finished-at="2018-11-05T07:57:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[NewApplication5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NewApplicationCreation]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testApplicationCreationForInvalidData(java.lang.String, java.lang.String, java.lang.String)" name="testApplicationCreationForInvalidData" duration-ms="12" started-at="2018-11-05T07:57:50Z" description="Create application for invalid data" finished-at="2018-11-05T07:57:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NewApplicationCreation]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testApplicationCreationForInvalidData(java.lang.String, java.lang.String, java.lang.String)" name="testApplicationCreationForInvalidData" duration-ms="12" started-at="2018-11-05T07:57:50Z" description="Create application for invalid data" finished-at="2018-11-05T07:57:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Unlimited]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testApplicationCreationForInvalidData(java.lang.String, java.lang.String, java.lang.String)" name="testApplicationCreationForInvalidData" duration-ms="27" started-at="2018-11-05T07:57:50Z" description="Create application for invalid data" finished-at="2018-11-05T07:57:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[NewApplication5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NewApplicationCreation]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testApplicationCreationForInvalidData(java.lang.String, java.lang.String, java.lang.String)" name="testApplicationCreationForInvalidData" duration-ms="11" started-at="2018-11-05T07:57:50Z" description="Create application for invalid data" finished-at="2018-11-05T07:57:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NewApplicationCreation]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testApplicationCreationWithCustomAttributes(java.lang.String, java.lang.String, java.lang.String, java.lang.String)" name="testApplicationCreationWithCustomAttributes" duration-ms="293" started-at="2018-11-05T07:57:50Z" description="Create an Application" finished-at="2018-11-05T07:57:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[NewApplication6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Unlimited]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NewApplicationCreation]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{"Ext_ref_id":"sample_ext_ref_id","Billing_tier":"sample_tier"}]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testApplicationCreationWithCustomAttributes(java.lang.String, java.lang.String, java.lang.String, java.lang.String)" name="testApplicationCreationWithCustomAttributes" duration-ms="25" started-at="2018-11-05T07:57:51Z" description="Create an Application" finished-at="2018-11-05T07:57:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[NewApplication6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Unlimited]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NewApplicationCreation]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{"Ext_ref_id":"sample_ext_ref_id","Billing_tier":"sample_tier"}]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testRemoveApplication()" name="testRemoveApplication" duration-ms="54" started-at="2018-11-05T07:57:51Z" description="Remove application" finished-at="2018-11-05T07:57:51Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="205" started-at="2018-11-05T07:57:51Z" finished-at="2018-11-05T07:57:51Z">
        </test-method>
        <test-method status="PASS" signature="testRemoveApplication()" name="testRemoveApplication" duration-ms="57" started-at="2018-11-05T07:57:51Z" description="Remove application" finished-at="2018-11-05T07:57:51Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.APIMANAGER4480AllSubscriptionsByApplicationTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="65632" started-at="2018-11-05T07:58:26Z" finished-at="2018-11-05T07:59:32Z">
        </test-method>
        <test-method status="PASS" signature="testGetAllSubscriptions()" name="testGetAllSubscriptions" duration-ms="122" started-at="2018-11-05T07:59:32Z" description="List all Subscriptions By by calling the getAllSubscriptions" finished-at="2018-11-05T07:59:32Z">
        </test-method>
        <test-method status="PASS" signature="testGetAllSubscriptionsOfApplication()" name="testGetAllSubscriptionsOfApplication" duration-ms="127" started-at="2018-11-05T07:59:32Z" description="List all Subscriptions By by calling the getAllSubscriptionsOfApplication" finished-at="2018-11-05T07:59:32Z">
        </test-method>
        <test-method status="PASS" signature="testGetAllSubscriptionsOfApplicationWithSelectedApp()" name="testGetAllSubscriptionsOfApplicationWithSelectedApp" duration-ms="40" started-at="2018-11-05T07:59:32Z" description="List all Subscriptions By by calling the getAllSubscriptionsOfApplication with application name" finished-at="2018-11-05T07:59:32Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="1711" started-at="2018-11-05T07:59:32Z" finished-at="2018-11-05T07:59:34Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.LoadBalancedEndPointTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="22827" started-at="2018-11-05T07:53:11Z" finished-at="2018-11-05T07:53:34Z">
        </test-method>
        <test-method status="PASS" signature="testCreateApiWithBothProdAndSandboxEndpoints()" name="testCreateApiWithBothProdAndSandboxEndpoints" duration-ms="2461" started-at="2018-11-05T07:53:34Z" description="Test Load balanced function with both Production and Sandbox Endpoints" finished-at="2018-11-05T07:53:36Z">
        </test-method>
        <test-method status="PASS" signature="testRoundRobinAlgorithmInProductionAndSandboxEndpoints()" name="testRoundRobinAlgorithmInProductionAndSandboxEndpoints" duration-ms="80881" started-at="2018-11-05T07:53:36Z" description="Verify Round Robin Algorithm by Invoking the Sandbox Endpoint API" depends-on-methods="org.wso2.am.integration.tests.other.LoadBalancedEndPointTestCase.testCreateApiWithBothProdAndSandboxEndpoints" finished-at="2018-11-05T07:54:57Z">
        </test-method>
        <test-method status="PASS" signature="testCreateApiWithDifferentProductionEndpoints()" name="testCreateApiWithDifferentProductionEndpoints" duration-ms="3221" started-at="2018-11-05T07:54:57Z" description="Test Load Balance End Points" finished-at="2018-11-05T07:55:00Z">
        </test-method>
        <test-method status="PASS" signature="testRoundRobinAlgorithmInProductionEndpoints()" name="testRoundRobinAlgorithmInProductionEndpoints" duration-ms="80439" started-at="2018-11-05T07:55:00Z" description="Verify Round Robin Algorithm by Invoking the Production Endpoint API" depends-on-methods="org.wso2.am.integration.tests.other.LoadBalancedEndPointTestCase.testCreateApiWithDifferentProductionEndpoints" finished-at="2018-11-05T07:56:21Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="2393" started-at="2018-11-05T07:56:21Z" finished-at="2018-11-05T07:56:23Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.AdvancedWebAppDeploymentConfig">
        <test-method status="PASS" signature="deployWebApps()" name="deployWebApps" is-config="true" duration-ms="3730" started-at="2018-11-05T07:52:08Z" finished-at="2018-11-05T07:52:12Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="139" started-at="2018-11-05T08:00:21Z" finished-at="2018-11-05T08:00:21Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.APIM714GetAllDocumentationTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="3258" started-at="2018-11-05T07:57:51Z" finished-at="2018-11-05T07:57:54Z">
        </test-method>
        <test-method status="PASS" signature="testAllDocuments()" name="testAllDocuments" duration-ms="32" started-at="2018-11-05T07:57:54Z" description="Get All Documents" finished-at="2018-11-05T07:57:54Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="510" started-at="2018-11-05T07:57:54Z" finished-at="2018-11-05T07:57:55Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="3648" started-at="2018-11-05T07:57:55Z" finished-at="2018-11-05T07:57:58Z">
        </test-method>
        <test-method status="PASS" signature="testAllDocuments()" name="testAllDocuments" duration-ms="26" started-at="2018-11-05T07:57:58Z" description="Get All Documents" finished-at="2018-11-05T07:57:58Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="510" started-at="2018-11-05T07:57:58Z" finished-at="2018-11-05T07:57:59Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.APIMANAGER4373BrokenAPIInStoreTestCase">
        <test-method status="PASS" signature="init()" name="init" is-config="true" duration-ms="291" started-at="2018-11-05T07:58:03Z" finished-at="2018-11-05T07:58:03Z">
        </test-method>
        <test-method status="PASS" signature="testAPIRoleChangeEffectInStore()" name="testAPIRoleChangeEffectInStore" duration-ms="22053" started-at="2018-11-05T07:58:03Z" description="Test effect of changing the role of subscribed API" finished-at="2018-11-05T07:58:25Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="1015" started-at="2018-11-05T07:58:25Z" finished-at="2018-11-05T07:58:26Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.SameVersionAPITestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="254" started-at="2018-11-05T07:57:43Z" finished-at="2018-11-05T07:57:43Z">
        </test-method>
        <test-method status="PASS" signature="copySameVersion()" name="copySameVersion" duration-ms="1078" started-at="2018-11-05T07:57:43Z" description="Copy Same Version" finished-at="2018-11-05T07:57:44Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="852" started-at="2018-11-05T07:57:44Z" finished-at="2018-11-05T07:57:45Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="268" started-at="2018-11-05T07:57:45Z" finished-at="2018-11-05T07:57:45Z">
        </test-method>
        <test-method status="PASS" signature="copySameVersion()" name="copySameVersion" duration-ms="581" started-at="2018-11-05T07:57:45Z" description="Copy Same Version" finished-at="2018-11-05T07:57:46Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="454" started-at="2018-11-05T07:57:46Z" finished-at="2018-11-05T07:57:46Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.CopyNewVersionTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="219" started-at="2018-11-05T07:57:34Z" finished-at="2018-11-05T07:57:34Z">
        </test-method>
        <test-method status="PASS" signature="copyApiNewVersion()" name="copyApiNewVersion" duration-ms="1238" started-at="2018-11-05T07:57:34Z" description="Copy new Version" finished-at="2018-11-05T07:57:35Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="573" started-at="2018-11-05T07:57:35Z" finished-at="2018-11-05T07:57:36Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="200" started-at="2018-11-05T07:57:36Z" finished-at="2018-11-05T07:57:36Z">
        </test-method>
        <test-method status="PASS" signature="copyApiNewVersion()" name="copyApiNewVersion" duration-ms="1265" started-at="2018-11-05T07:57:36Z" description="Copy new Version" finished-at="2018-11-05T07:57:37Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="568" started-at="2018-11-05T07:57:37Z" finished-at="2018-11-05T07:57:38Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="313" started-at="2018-11-05T07:57:17Z" finished-at="2018-11-05T07:57:17Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="307" started-at="2018-11-05T07:57:17Z" finished-at="2018-11-05T07:57:17Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreation()" name="testAPICreation" duration-ms="2350" started-at="2018-11-05T07:57:17Z" description="Sample API creation" finished-at="2018-11-05T07:57:20Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreation()" name="testAPICreation" duration-ms="2368" started-at="2018-11-05T07:57:20Z" description="Sample API creation" finished-at="2018-11-05T07:57:22Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationCreation()" name="testApplicationCreation" duration-ms="830" started-at="2018-11-05T07:57:22Z" description="Test Application Creation" depends-on-methods="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase.testAPICreation" finished-at="2018-11-05T07:57:23Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationCreation()" name="testApplicationCreation" duration-ms="338" started-at="2018-11-05T07:57:23Z" description="Test Application Creation" depends-on-methods="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase.testAPICreation" finished-at="2018-11-05T07:57:23Z">
        </test-method>
        <test-method status="PASS" signature="testAuthCode()" name="testAuthCode" duration-ms="867" started-at="2018-11-05T07:57:23Z" description="Test authorization_code token generation" depends-on-methods="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase.testApplicationCreation" finished-at="2018-11-05T07:57:24Z">
        </test-method>
        <test-method status="PASS" signature="testAuthCode()" name="testAuthCode" duration-ms="495" started-at="2018-11-05T07:57:24Z" description="Test authorization_code token generation" depends-on-methods="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase.testApplicationCreation" finished-at="2018-11-05T07:57:25Z">
        </test-method>
        <test-method status="PASS" signature="testImplicit()" name="testImplicit" duration-ms="387" started-at="2018-11-05T07:57:25Z" description="Test implicit token generation" depends-on-methods="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase.testAuthCode" finished-at="2018-11-05T07:57:25Z">
        </test-method>
        <test-method status="PASS" signature="testImplicit()" name="testImplicit" duration-ms="297" started-at="2018-11-05T07:57:25Z" description="Test implicit token generation" depends-on-methods="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase.testAuthCode" finished-at="2018-11-05T07:57:25Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationCreationWithoutCallBackURL()" name="testApplicationCreationWithoutCallBackURL" duration-ms="980" started-at="2018-11-05T07:57:25Z" description="Test Application Creation without callback URL" depends-on-methods="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase.testImplicit" finished-at="2018-11-05T07:57:26Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationCreationWithoutCallBackURL()" name="testApplicationCreationWithoutCallBackURL" duration-ms="262" started-at="2018-11-05T07:57:26Z" description="Test Application Creation without callback URL" depends-on-methods="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase.testImplicit" finished-at="2018-11-05T07:57:26Z">
        </test-method>
        <test-method status="PASS" signature="testAuthRequestWithoutCallbackURL()" name="testAuthRequestWithoutCallbackURL" duration-ms="62" started-at="2018-11-05T07:57:26Z" description="Test authorization_code token generation" depends-on-methods="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase.testApplicationCreationWithoutCallBackURL" finished-at="2018-11-05T07:57:27Z">
        </test-method>
        <test-method status="PASS" signature="testAuthRequestWithoutCallbackURL()" name="testAuthRequestWithoutCallbackURL" duration-ms="63" started-at="2018-11-05T07:57:27Z" description="Test authorization_code token generation" depends-on-methods="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase.testApplicationCreationWithoutCallBackURL" finished-at="2018-11-05T07:57:27Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationUpdateAndTestKeyGeneration()" name="testApplicationUpdateAndTestKeyGeneration" duration-ms="1559" started-at="2018-11-05T07:57:27Z" description="Test authorization_code token generation" depends-on-methods="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase.testAuthRequestWithoutCallbackURL" finished-at="2018-11-05T07:57:28Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationUpdateAndTestKeyGeneration()" name="testApplicationUpdateAndTestKeyGeneration" duration-ms="828" started-at="2018-11-05T07:57:28Z" description="Test authorization_code token generation" depends-on-methods="org.wso2.am.integration.tests.application.GrantTypeTokenGenerateTestCase.testAuthRequestWithoutCallbackURL" finished-at="2018-11-05T07:57:29Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="2082" started-at="2018-11-05T07:57:29Z" finished-at="2018-11-05T07:57:31Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="670" started-at="2018-11-05T07:57:31Z" finished-at="2018-11-05T07:57:32Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.NewCopyWithDefaultVersion">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="262" started-at="2018-11-05T07:57:38Z" finished-at="2018-11-05T07:57:38Z">
        </test-method>
        <test-method status="PASS" signature="setDefaultVersionToNewcopy()" name="setDefaultVersionToNewcopy" duration-ms="1889" started-at="2018-11-05T07:57:38Z" description="New Copy with Default Version" finished-at="2018-11-05T07:57:40Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="629" started-at="2018-11-05T07:57:40Z" finished-at="2018-11-05T07:57:41Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="236" started-at="2018-11-05T07:57:41Z" finished-at="2018-11-05T07:57:41Z">
        </test-method>
        <test-method status="PASS" signature="setDefaultVersionToNewcopy()" name="setDefaultVersionToNewcopy" duration-ms="1294" started-at="2018-11-05T07:57:41Z" description="New Copy with Default Version" finished-at="2018-11-05T07:57:42Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="602" started-at="2018-11-05T07:57:42Z" finished-at="2018-11-05T07:57:43Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.application.AuthApplicationUpdateTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="349" started-at="2018-11-05T07:57:07Z" finished-at="2018-11-05T07:57:08Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="324" started-at="2018-11-05T07:57:08Z" finished-at="2018-11-05T07:57:08Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationCreation()" name="testApplicationCreation" duration-ms="1138" started-at="2018-11-05T07:57:08Z" description="Sample Application creation" finished-at="2018-11-05T07:57:09Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationCreation()" name="testApplicationCreation" duration-ms="331" started-at="2018-11-05T07:57:09Z" description="Sample Application creation" finished-at="2018-11-05T07:57:09Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationUpdate()" name="testApplicationUpdate" duration-ms="106" started-at="2018-11-05T07:57:09Z" description="Sample Auth Application update" depends-on-methods="org.wso2.am.integration.tests.application.AuthApplicationUpdateTestCase.testApplicationCreation" finished-at="2018-11-05T07:57:10Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationUpdate()" name="testApplicationUpdate" duration-ms="96" started-at="2018-11-05T07:57:10Z" description="Sample Auth Application update" depends-on-methods="org.wso2.am.integration.tests.application.AuthApplicationUpdateTestCase.testApplicationCreation" finished-at="2018-11-05T07:57:10Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationGrantTypeAfterUpdate()" name="testApplicationGrantTypeAfterUpdate" duration-ms="28" started-at="2018-11-05T07:57:10Z" description="Sample Auth Application Properties check" depends-on-methods="org.wso2.am.integration.tests.application.AuthApplicationUpdateTestCase.testApplicationUpdate" finished-at="2018-11-05T07:57:10Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationGrantTypeAfterUpdate()" name="testApplicationGrantTypeAfterUpdate" duration-ms="30" started-at="2018-11-05T07:57:10Z" description="Sample Auth Application Properties check" depends-on-methods="org.wso2.am.integration.tests.application.AuthApplicationUpdateTestCase.testApplicationUpdate" finished-at="2018-11-05T07:57:10Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationNameUpdateAfterKeyGeneration()" name="testApplicationNameUpdateAfterKeyGeneration" duration-ms="2403" started-at="2018-11-05T07:57:10Z" description="Test Application name update after key generate" depends-on-methods="org.wso2.am.integration.tests.application.AuthApplicationUpdateTestCase.testApplicationGrantTypeAfterUpdate" finished-at="2018-11-05T07:57:12Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationNameUpdateAfterKeyGeneration()" name="testApplicationNameUpdateAfterKeyGeneration" duration-ms="3135" started-at="2018-11-05T07:57:12Z" description="Test Application name update after key generate" depends-on-methods="org.wso2.am.integration.tests.application.AuthApplicationUpdateTestCase.testApplicationGrantTypeAfterUpdate" finished-at="2018-11-05T07:57:15Z">
        </test-method>
        <test-method status="PASS" signature="testSubscriptionAfterApplicationNameUpdate()" name="testSubscriptionAfterApplicationNameUpdate" duration-ms="40" started-at="2018-11-05T07:57:15Z" description="Test Subscription after Application name update" depends-on-methods="org.wso2.am.integration.tests.application.AuthApplicationUpdateTestCase.testApplicationNameUpdateAfterKeyGeneration" finished-at="2018-11-05T07:57:15Z">
        </test-method>
        <test-method status="PASS" signature="testSubscriptionAfterApplicationNameUpdate()" name="testSubscriptionAfterApplicationNameUpdate" duration-ms="26" started-at="2018-11-05T07:57:15Z" description="Test Subscription after Application name update" depends-on-methods="org.wso2.am.integration.tests.application.AuthApplicationUpdateTestCase.testApplicationNameUpdateAfterKeyGeneration" finished-at="2018-11-05T07:57:15Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="510" started-at="2018-11-05T07:57:15Z" finished-at="2018-11-05T07:57:16Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="848" started-at="2018-11-05T07:57:16Z" finished-at="2018-11-05T07:57:17Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.APIM710AllSubscriptionsByApplicationTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="34279" started-at="2018-11-05T07:52:12Z" finished-at="2018-11-05T07:52:46Z">
        </test-method>
        <test-method status="PASS" signature="testAllSubscriptionsByAppName()" name="testAllSubscriptionsByAppName" duration-ms="24" started-at="2018-11-05T07:52:46Z" description="List all Subscriptions By Application Name" finished-at="2018-11-05T07:52:46Z">
        </test-method>
        <test-method status="PASS" signature="testRemoveSubscriptionByAppId()" name="testRemoveSubscriptionByAppId" duration-ms="2044" started-at="2018-11-05T07:52:46Z" description="Remove Subscription By Application Id" depends-on-methods="org.wso2.am.integration.tests.other.APIM710AllSubscriptionsByApplicationTestCase.testAllSubscriptionsByAppName" finished-at="2018-11-05T07:52:48Z">
        </test-method>
        <test-method status="PASS" signature="testRemoveSubscriptionByAppName()" name="testRemoveSubscriptionByAppName" duration-ms="9110" started-at="2018-11-05T07:52:48Z" description="Remove Subscription by Application Name" depends-on-methods="org.wso2.am.integration.tests.other.APIM710AllSubscriptionsByApplicationTestCase.testAllSubscriptionsByAppName" finished-at="2018-11-05T07:52:58Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="12174" started-at="2018-11-05T07:52:58Z" finished-at="2018-11-05T07:53:10Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.APIMANAGER3965TestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="287" started-at="2018-11-05T07:56:26Z" finished-at="2018-11-05T07:56:27Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="267" started-at="2018-11-05T07:56:27Z" finished-at="2018-11-05T07:56:27Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreationWithOutCorsConfiguration()" name="testAPICreationWithOutCorsConfiguration" duration-ms="2953" started-at="2018-11-05T07:56:27Z" description="Sample API creation" finished-at="2018-11-05T07:56:30Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreationWithOutCorsConfiguration()" name="testAPICreationWithOutCorsConfiguration" duration-ms="3261" started-at="2018-11-05T07:56:30Z" description="Sample API creation" finished-at="2018-11-05T07:56:33Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreationWithCorsConfiguration()" name="testAPICreationWithCorsConfiguration" duration-ms="16024" started-at="2018-11-05T07:56:33Z" description="Sample API creation" depends-on-methods="org.wso2.am.integration.tests.other.APIMANAGER3965TestCase.testAPICreationWithOutCorsConfiguration" finished-at="2018-11-05T07:56:49Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreationWithCorsConfiguration()" name="testAPICreationWithCorsConfiguration" duration-ms="16262" started-at="2018-11-05T07:56:49Z" description="Sample API creation" depends-on-methods="org.wso2.am.integration.tests.other.APIMANAGER3965TestCase.testAPICreationWithOutCorsConfiguration" finished-at="2018-11-05T07:57:05Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="682" started-at="2018-11-05T07:57:05Z" finished-at="2018-11-05T07:57:06Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="1136" started-at="2018-11-05T07:57:06Z" finished-at="2018-11-05T07:57:07Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.api.sdk.SDKGenerationTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="8406" started-at="2018-11-05T07:59:53Z" finished-at="2018-11-05T08:00:02Z">
        </test-method>
        <test-method status="PASS" signature="testSDKGeneration()" name="testSDKGeneration" duration-ms="12969" started-at="2018-11-05T08:00:02Z" description="SDK Generation test case" finished-at="2018-11-05T08:00:15Z">
        </test-method>
        <test-method status="PASS" signature="testSDKGenerationForPrivateAPIs()" name="testSDKGenerationForPrivateAPIs" duration-ms="2504" started-at="2018-11-05T08:00:15Z" description="SDK Generation test case for private apis" finished-at="2018-11-05T08:00:17Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="2242" started-at="2018-11-05T08:00:17Z" finished-at="2018-11-05T08:00:20Z">
        </test-method>
      </class>
    </test>
    <test name="rest-api-tests" duration-ms="59173" started-at="2018-11-05T08:00:21Z" finished-at="2018-11-05T08:01:20Z">
      <class name="org.wso2.am.integration.tests.restapi.testcases.APITestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="179" started-at="2018-11-05T08:00:32Z" finished-at="2018-11-05T08:00:32Z">
        </test-method>
        <test-method status="PASS" signature="testAPIs()" name="testAPIs" duration-ms="6617" started-at="2018-11-05T08:00:32Z" description="REST API Implementation test : API handling test case" finished-at="2018-11-05T08:00:38Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="165" started-at="2018-11-05T08:00:38Z" finished-at="2018-11-05T08:00:39Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.restapi.testcases.ApplicationRegenerateConsumerSecretTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="227" started-at="2018-11-05T08:00:46Z" finished-at="2018-11-05T08:00:46Z">
        </test-method>
        <test-method status="PASS" signature="testRegenerateConsumerSecret()" name="testRegenerateConsumerSecret" duration-ms="2753" started-at="2018-11-05T08:00:46Z" description="REST API Implementation test : Application Regenerate Consumer Secret handling test case" finished-at="2018-11-05T08:00:49Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="218" started-at="2018-11-05T08:00:49Z" finished-at="2018-11-05T08:00:49Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.restapi.testcases.ApplicationScopeValidationTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="239" started-at="2018-11-05T08:01:12Z" finished-at="2018-11-05T08:01:12Z">
        </test-method>
        <test-method status="PASS" signature="testGetApplicationScope()" name="testGetApplicationScope" duration-ms="5139" started-at="2018-11-05T08:01:12Z" description="This test case will validate the functionality of the REST API for getting scopes" finished-at="2018-11-05T08:01:18Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="123" started-at="2018-11-05T08:01:18Z" finished-at="2018-11-05T08:01:18Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.restapi.GIT_1628_OAuthAppUpdateViaRestApiTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="3990" started-at="2018-11-05T08:00:21Z" finished-at="2018-11-05T08:00:25Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="2460" started-at="2018-11-05T08:00:25Z" finished-at="2018-11-05T08:00:28Z">
        </test-method>
        <test-method status="PASS" signature="testKeyGenerationResponseContainsGrantTypesAndCallback()" name="testKeyGenerationResponseContainsGrantTypesAndCallback" duration-ms="375" started-at="2018-11-05T08:00:28Z" description="Key generation response should contain grant types and callback url" finished-at="2018-11-05T08:00:28Z">
        </test-method>
        <test-method status="PASS" signature="testKeyGenerationResponseContainsGrantTypesAndCallback()" name="testKeyGenerationResponseContainsGrantTypesAndCallback" duration-ms="702" started-at="2018-11-05T08:00:28Z" description="Key generation response should contain grant types and callback url" finished-at="2018-11-05T08:00:29Z">
        </test-method>
        <test-method status="PASS" signature="testTokenGenerationWithClientCredentialsGrant()" name="testTokenGenerationWithClientCredentialsGrant" duration-ms="84" started-at="2018-11-05T08:00:29Z" description="Generate token with client credentials grant type when client credentials grant type is enabled" depends-on-methods="org.wso2.am.integration.tests.restapi.GIT_1628_OAuthAppUpdateViaRestApiTestCase.testKeyGenerationResponseContainsGrantTypesAndCallback" finished-at="2018-11-05T08:00:29Z">
        </test-method>
        <test-method status="PASS" signature="testTokenGenerationWithClientCredentialsGrant()" name="testTokenGenerationWithClientCredentialsGrant" duration-ms="64" started-at="2018-11-05T08:00:29Z" description="Generate token with client credentials grant type when client credentials grant type is enabled" depends-on-methods="org.wso2.am.integration.tests.restapi.GIT_1628_OAuthAppUpdateViaRestApiTestCase.testKeyGenerationResponseContainsGrantTypesAndCallback" finished-at="2018-11-05T08:00:29Z">
        </test-method>
        <test-method status="PASS" signature="testTokenGenerationWithPasswordGrant()" name="testTokenGenerationWithPasswordGrant" duration-ms="60" started-at="2018-11-05T08:00:29Z" description="Generate token with password grant type when password grant type is not enabled" depends-on-methods="org.wso2.am.integration.tests.restapi.GIT_1628_OAuthAppUpdateViaRestApiTestCase.testKeyGenerationResponseContainsGrantTypesAndCallback" finished-at="2018-11-05T08:00:29Z">
        </test-method>
        <test-method status="PASS" signature="testTokenGenerationWithPasswordGrant()" name="testTokenGenerationWithPasswordGrant" duration-ms="58" started-at="2018-11-05T08:00:29Z" description="Generate token with password grant type when password grant type is not enabled" depends-on-methods="org.wso2.am.integration.tests.restapi.GIT_1628_OAuthAppUpdateViaRestApiTestCase.testKeyGenerationResponseContainsGrantTypesAndCallback" finished-at="2018-11-05T08:00:29Z">
        </test-method>
        <test-method status="PASS" signature="testUpdateGrantTypesAndCallback()" name="testUpdateGrantTypesAndCallback" duration-ms="325" started-at="2018-11-05T08:00:29Z" description="Updating grant types and callback url" depends-on-methods="org.wso2.am.integration.tests.restapi.GIT_1628_OAuthAppUpdateViaRestApiTestCase.testKeyGenerationResponseContainsGrantTypesAndCallback" finished-at="2018-11-05T08:00:29Z">
        </test-method>
        <test-method status="PASS" signature="testUpdateGrantTypesAndCallback()" name="testUpdateGrantTypesAndCallback" duration-ms="313" started-at="2018-11-05T08:00:29Z" description="Updating grant types and callback url" depends-on-methods="org.wso2.am.integration.tests.restapi.GIT_1628_OAuthAppUpdateViaRestApiTestCase.testKeyGenerationResponseContainsGrantTypesAndCallback" finished-at="2018-11-05T08:00:30Z">
        </test-method>
        <test-method status="PASS" signature="testGetGrantTypesAndCallback()" name="testGetGrantTypesAndCallback" duration-ms="68" started-at="2018-11-05T08:00:30Z" description="Retrieving grant types and callback url" depends-on-methods="org.wso2.am.integration.tests.restapi.GIT_1628_OAuthAppUpdateViaRestApiTestCase.testUpdateGrantTypesAndCallback" finished-at="2018-11-05T08:00:30Z">
        </test-method>
        <test-method status="PASS" signature="testGetGrantTypesAndCallback()" name="testGetGrantTypesAndCallback" duration-ms="66" started-at="2018-11-05T08:00:30Z" description="Retrieving grant types and callback url" depends-on-methods="org.wso2.am.integration.tests.restapi.GIT_1628_OAuthAppUpdateViaRestApiTestCase.testUpdateGrantTypesAndCallback" finished-at="2018-11-05T08:00:30Z">
        </test-method>
        <test-method status="PASS" signature="testGetApplicationAndCheckKeys()" name="testGetApplicationAndCheckKeys" duration-ms="80" started-at="2018-11-05T08:00:30Z" description="Retrieving application and check keys" depends-on-methods="org.wso2.am.integration.tests.restapi.GIT_1628_OAuthAppUpdateViaRestApiTestCase.testGetGrantTypesAndCallback" finished-at="2018-11-05T08:00:30Z">
        </test-method>
        <test-method status="PASS" signature="testGetApplicationAndCheckKeys()" name="testGetApplicationAndCheckKeys" duration-ms="70" started-at="2018-11-05T08:00:30Z" description="Retrieving application and check keys" depends-on-methods="org.wso2.am.integration.tests.restapi.GIT_1628_OAuthAppUpdateViaRestApiTestCase.testGetGrantTypesAndCallback" finished-at="2018-11-05T08:00:30Z">
        </test-method>
        <test-method status="PASS" signature="testKeyGenerationWithoutGrantTypesNorCallback()" name="testKeyGenerationWithoutGrantTypesNorCallback" duration-ms="263" started-at="2018-11-05T08:00:30Z" description="Key generation response should contain all grant types even when request does not have grant types. (for backward compatibility)" depends-on-methods="org.wso2.am.integration.tests.restapi.GIT_1628_OAuthAppUpdateViaRestApiTestCase.testGetApplicationAndCheckKeys" finished-at="2018-11-05T08:00:30Z">
        </test-method>
        <test-method status="PASS" signature="testKeyGenerationWithoutGrantTypesNorCallback()" name="testKeyGenerationWithoutGrantTypesNorCallback" duration-ms="266" started-at="2018-11-05T08:00:30Z" description="Key generation response should contain all grant types even when request does not have grant types. (for backward compatibility)" depends-on-methods="org.wso2.am.integration.tests.restapi.GIT_1628_OAuthAppUpdateViaRestApiTestCase.testGetApplicationAndCheckKeys" finished-at="2018-11-05T08:00:31Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="506" started-at="2018-11-05T08:00:31Z" finished-at="2018-11-05T08:00:31Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="553" started-at="2018-11-05T08:00:31Z" finished-at="2018-11-05T08:00:32Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.restapi.testcases.APIMANAGER4877CreateAPIWithScopesAndUpdateTemplateTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="259" started-at="2018-11-05T08:00:49Z" finished-at="2018-11-05T08:00:49Z">
        </test-method>
        <test-method status="PASS" signature="testCreateAPIWithScopesAndUpdate()" name="testCreateAPIWithScopesAndUpdate" duration-ms="4491" started-at="2018-11-05T08:00:49Z" description="REST API test: Create API with Scopes and update test case" finished-at="2018-11-05T08:00:54Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="189" started-at="2018-11-05T08:00:54Z" finished-at="2018-11-05T08:00:54Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.restapi.testcases.APIMANAGER5872UpdateAPIWithoutThumbnailValueAndAPISummaryTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="325" started-at="2018-11-05T08:00:54Z" finished-at="2018-11-05T08:00:54Z">
        </test-method>
        <test-method status="PASS" signature="testUpdateAPIwhichHasThumbnail()" name="testUpdateAPIwhichHasThumbnail" duration-ms="4447" started-at="2018-11-05T08:00:54Z" description="REST API test: Create API and update it without thumbnail attribute. Thus shouldn&#039;t remove existing thumbnail" finished-at="2018-11-05T08:00:59Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="234" started-at="2018-11-05T08:00:59Z" finished-at="2018-11-05T08:00:59Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.restapi.testcases.EnvironmentTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="399" started-at="2018-11-05T08:00:39Z" finished-at="2018-11-05T08:00:39Z">
        </test-method>
        <test-method status="PASS" signature="testEnvironment()" name="testEnvironment" duration-ms="3331" started-at="2018-11-05T08:00:39Z" description="REST API Implementation test : API environment test case" finished-at="2018-11-05T08:00:42Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="163" started-at="2018-11-05T08:00:42Z" finished-at="2018-11-05T08:00:42Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.restapi.testcases.ApplicationWithCustomAttributesTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="213" started-at="2018-11-05T08:01:18Z" finished-at="2018-11-05T08:01:18Z">
        </test-method>
        <test-method status="PASS" signature="testApplications()" name="testApplications" duration-ms="2388" started-at="2018-11-05T08:01:18Z" description="REST API Implementation test : Application handling test case" finished-at="2018-11-05T08:01:20Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="162" started-at="2018-11-05T08:01:20Z" finished-at="2018-11-05T08:01:20Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.restapi.testcases.ApplicationTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="257" started-at="2018-11-05T08:00:42Z" finished-at="2018-11-05T08:00:43Z">
        </test-method>
        <test-method status="PASS" signature="testApplications()" name="testApplications" duration-ms="2865" started-at="2018-11-05T08:00:43Z" description="REST API Implementation test : Application handling test case" finished-at="2018-11-05T08:00:46Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="143" started-at="2018-11-05T08:00:46Z" finished-at="2018-11-05T08:00:46Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.restapi.GIT_1638_UrlEncodedApiNameTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="4834" started-at="2018-11-05T08:00:59Z" finished-at="2018-11-05T08:01:04Z">
        </test-method>
        <test-method status="PASS" signature="testChangeLifeCycleToPublish()" name="testChangeLifeCycleToPublish" duration-ms="1891" started-at="2018-11-05T08:01:04Z" description="api detail with API name having hyphen" finished-at="2018-11-05T08:01:06Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="3436" started-at="2018-11-05T08:01:06Z" finished-at="2018-11-05T08:01:09Z">
        </test-method>
        <test-method status="PASS" signature="testChangeLifeCycleToPublish()" name="testChangeLifeCycleToPublish" duration-ms="1174" started-at="2018-11-05T08:01:09Z" description="api detail with API name having hyphen" finished-at="2018-11-05T08:01:10Z">
        </test-method>
        <test-method status="PASS" signature="testGetApiDetailFromPublisher()" name="testGetApiDetailFromPublisher" duration-ms="443" started-at="2018-11-05T08:01:10Z" description="api detail with API name having hyphen" finished-at="2018-11-05T08:01:11Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="570" started-at="2018-11-05T08:01:11Z" finished-at="2018-11-05T08:01:11Z">
        </test-method>
        <test-method status="PASS" signature="testGetApiDetailFromPublisher()" name="testGetApiDetailFromPublisher" duration-ms="397" started-at="2018-11-05T08:01:11Z" description="api detail with API name having hyphen" finished-at="2018-11-05T08:01:12Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="585" started-at="2018-11-05T08:01:12Z" finished-at="2018-11-05T08:01:12Z">
        </test-method>
      </class>
    </test>
    <test name="apim-mediation-tests" duration-ms="51228" started-at="2018-11-05T08:01:20Z" finished-at="2018-11-05T08:02:12Z">
      <class name="org.wso2.am.integration.tests.api.lifecycle.AddNewMediationAndInvokeAPITestCase">
        <test-method status="PASS" signature="initialize()" name="initialize" is-config="true" duration-ms="13712" started-at="2018-11-05T08:01:20Z" finished-at="2018-11-05T08:01:34Z">
        </test-method>
        <test-method status="PASS" signature="testAPIInvocationBeforeAddingNewMediation()" name="testAPIInvocationBeforeAddingNewMediation" duration-ms="3566" started-at="2018-11-05T08:01:34Z" description="Invoke the API before adding the log mediation" finished-at="2018-11-05T08:01:38Z">
        </test-method>
        <test-method status="PASS" signature="testAPIInvocationAfterAddingNewMediation()" name="testAPIInvocationAfterAddingNewMediation" duration-ms="16554" started-at="2018-11-05T08:01:38Z" description="Invoke the API after adding the log mediation" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AddNewMediationAndInvokeAPITestCase.testAPIInvocationBeforeAddingNewMediation" finished-at="2018-11-05T08:01:54Z">
        </test-method>
        <test-method status="PASS" signature="testAPIInvocationBeforeRemovingNewMediation()" name="testAPIInvocationBeforeRemovingNewMediation" duration-ms="17022" started-at="2018-11-05T08:01:54Z" description="IInvoke the API after removing the log mediation" depends-on-methods="org.wso2.am.integration.tests.api.lifecycle.AddNewMediationAndInvokeAPITestCase.testAPIInvocationAfterAddingNewMediation" finished-at="2018-11-05T08:02:11Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="374" started-at="2018-11-05T08:02:11Z" finished-at="2018-11-05T08:02:12Z">
        </test-method>
      </class>
    </test>
    <test name="apim-websocket-tests" duration-ms="581530" started-at="2018-11-05T08:02:12Z" finished-at="2018-11-05T08:11:53Z">
      <class name="org.wso2.am.integration.tests.websocket.APIMANAGER5869WSGayewatURLTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="333" started-at="2018-11-05T08:02:12Z" finished-at="2018-11-05T08:02:12Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="392" started-at="2018-11-05T08:02:12Z" finished-at="2018-11-05T08:02:12Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreation()" name="testAPICreation" duration-ms="2954" started-at="2018-11-05T08:02:12Z" description="Sample API creation" finished-at="2018-11-05T08:02:15Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreation()" name="testAPICreation" duration-ms="2902" started-at="2018-11-05T08:02:15Z" description="Sample API creation" finished-at="2018-11-05T08:02:18Z">
        </test-method>
        <test-method status="PASS" signature="publishWebSocketAPI()" name="publishWebSocketAPI" duration-ms="48186" started-at="2018-11-05T08:02:18Z" description="Publish WebSocket API" depends-on-methods="org.wso2.am.integration.tests.websocket.APIMANAGER5869WSGayewatURLTestCase.testAPICreation" finished-at="2018-11-05T08:03:06Z">
        </test-method>
        <test-method status="PASS" signature="publishWebSocketAPI()" name="publishWebSocketAPI" duration-ms="48509" started-at="2018-11-05T08:03:06Z" description="Publish WebSocket API" depends-on-methods="org.wso2.am.integration.tests.websocket.APIMANAGER5869WSGayewatURLTestCase.testAPICreation" finished-at="2018-11-05T08:03:55Z">
        </test-method>
        <test-method status="PASS" signature="testApiGatewayUrlsTest()" name="testApiGatewayUrlsTest" duration-ms="651" started-at="2018-11-05T08:03:55Z" description="Test API gateway urls" depends-on-methods="org.wso2.am.integration.tests.websocket.APIMANAGER5869WSGayewatURLTestCase.publishWebSocketAPI" finished-at="2018-11-05T08:03:56Z">
        </test-method>
        <test-method status="PASS" signature="testApiGatewayUrlsTest()" name="testApiGatewayUrlsTest" duration-ms="545" started-at="2018-11-05T08:03:56Z" description="Test API gateway urls" depends-on-methods="org.wso2.am.integration.tests.websocket.APIMANAGER5869WSGayewatURLTestCase.publishWebSocketAPI" finished-at="2018-11-05T08:03:56Z">
        </test-method>
        <test-method status="PASS" signature="testApiGatewayUrlsAfterConfigChangeTest()" name="testApiGatewayUrlsAfterConfigChangeTest" duration-ms="137563" started-at="2018-11-05T08:03:56Z" description="Test WS API gateway urls" depends-on-methods="org.wso2.am.integration.tests.websocket.APIMANAGER5869WSGayewatURLTestCase.testApiGatewayUrlsTest" finished-at="2018-11-05T08:06:14Z">
        </test-method>
        <test-method status="PASS" signature="testApiGatewayUrlsAfterConfigChangeTest()" name="testApiGatewayUrlsAfterConfigChangeTest" duration-ms="2616" started-at="2018-11-05T08:06:14Z" description="Test WS API gateway urls" depends-on-methods="org.wso2.am.integration.tests.websocket.APIMANAGER5869WSGayewatURLTestCase.testApiGatewayUrlsTest" finished-at="2018-11-05T08:06:16Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="128514" started-at="2018-11-05T08:06:16Z" finished-at="2018-11-05T08:08:25Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="12762" started-at="2018-11-05T08:08:25Z" finished-at="2018-11-05T08:08:38Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.websocket.WebSocketAPITestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="374" started-at="2018-11-05T08:08:38Z" finished-at="2018-11-05T08:08:38Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="424" started-at="2018-11-05T08:08:38Z" finished-at="2018-11-05T08:08:38Z">
        </test-method>
        <test-method status="PASS" signature="publishWebSocketAPI()" name="publishWebSocketAPI" duration-ms="50566" started-at="2018-11-05T08:08:38Z" description="Publish WebSocket API" finished-at="2018-11-05T08:09:29Z">
        </test-method>
        <test-method status="PASS" signature="publishWebSocketAPI()" name="publishWebSocketAPI" duration-ms="50934" started-at="2018-11-05T08:09:29Z" description="Publish WebSocket API" finished-at="2018-11-05T08:10:20Z">
        </test-method>
        <test-method status="PASS" signature="testWebSocketAPIApplicationSubscription()" name="testWebSocketAPIApplicationSubscription" duration-ms="976" started-at="2018-11-05T08:10:20Z" description="Create Application and subscribe" depends-on-methods="org.wso2.am.integration.tests.websocket.WebSocketAPITestCase.publishWebSocketAPI" finished-at="2018-11-05T08:10:21Z">
        </test-method>
        <test-method status="PASS" signature="testWebSocketAPIApplicationSubscription()" name="testWebSocketAPIApplicationSubscription" duration-ms="123" started-at="2018-11-05T08:10:21Z" description="Create Application and subscribe" depends-on-methods="org.wso2.am.integration.tests.websocket.WebSocketAPITestCase.publishWebSocketAPI" finished-at="2018-11-05T08:10:21Z">
        </test-method>
        <test-method status="PASS" signature="testWebSocketAPIInvocation()" name="testWebSocketAPIInvocation" duration-ms="3849" started-at="2018-11-05T08:10:21Z" description="Invoke API using token" depends-on-methods="org.wso2.am.integration.tests.websocket.WebSocketAPITestCase.testWebSocketAPIApplicationSubscription" finished-at="2018-11-05T08:10:25Z">
        </test-method>
        <test-method status="PASS" signature="testWebSocketAPIInvocation()" name="testWebSocketAPIInvocation" duration-ms="1697" started-at="2018-11-05T08:10:25Z" description="Invoke API using token" depends-on-methods="org.wso2.am.integration.tests.websocket.WebSocketAPITestCase.testWebSocketAPIApplicationSubscription" finished-at="2018-11-05T08:10:27Z">
        </test-method>
        <test-method status="PASS" signature="testWebSocketAPIThrottling()" name="testWebSocketAPIThrottling" duration-ms="12880" started-at="2018-11-05T08:10:27Z" description="Test Throttling for WebSocket API" depends-on-methods="org.wso2.am.integration.tests.websocket.WebSocketAPITestCase.testWebSocketAPIInvocation" finished-at="2018-11-05T08:10:39Z">
        </test-method>
        <test-method status="PASS" signature="testWebSocketAPIThrottling()" name="testWebSocketAPIThrottling" duration-ms="12068" started-at="2018-11-05T08:10:39Z" description="Test Throttling for WebSocket API" depends-on-methods="org.wso2.am.integration.tests.websocket.WebSocketAPITestCase.testWebSocketAPIInvocation" finished-at="2018-11-05T08:10:51Z">
        </test-method>
        <test-method status="PASS" signature="testWebSocketAPIInvalidTokenInvocation()" name="testWebSocketAPIInvalidTokenInvocation" duration-ms="30022" started-at="2018-11-05T08:10:51Z" description="Invoke API using invalid token" depends-on-methods="org.wso2.am.integration.tests.websocket.WebSocketAPITestCase.testWebSocketAPIThrottling" finished-at="2018-11-05T08:11:22Z">
        </test-method>
        <test-method status="PASS" signature="testWebSocketAPIInvalidTokenInvocation()" name="testWebSocketAPIInvalidTokenInvocation" duration-ms="30014" started-at="2018-11-05T08:11:22Z" description="Invoke API using invalid token" depends-on-methods="org.wso2.am.integration.tests.websocket.WebSocketAPITestCase.testWebSocketAPIThrottling" finished-at="2018-11-05T08:11:52Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="1066" started-at="2018-11-05T08:11:52Z" finished-at="2018-11-05T08:11:53Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="601" started-at="2018-11-05T08:11:53Z" finished-at="2018-11-05T08:11:53Z">
        </test-method>
      </class>
    </test>
    <test name="apim-integration-tests-api-application-lifecycle" duration-ms="57364" started-at="2018-11-05T06:43:46Z" finished-at="2018-11-05T06:44:43Z">
      <class name="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="257" started-at="2018-11-05T06:43:46Z" finished-at="2018-11-05T06:43:46Z">
        </test-method>
        <test-method status="PASS" signature="testAPIApplicationLifeCycleITestCase()" name="testAPIApplicationLifeCycleITestCase" duration-ms="25503" started-at="2018-11-05T06:43:46Z" description="API Life cycle test case" finished-at="2018-11-05T06:44:12Z">
        </test-method>
        <test-method status="PASS" signature="testInvalidLoginAsPublisherTestCase()" name="testInvalidLoginAsPublisherTestCase" duration-ms="34" started-at="2018-11-05T06:44:12Z" description="API Life cycle test invalid scenario" depends-on-methods="org.wso2.am.integration.tests.other.APIApplicationLifeCycleTestCase.testAPIApplicationLifeCycleITestCase" finished-at="2018-11-05T06:44:12Z">
        </test-method>
        <test-method status="PASS" signature="copyAPILifeCycleTestCase()" name="copyAPILifeCycleTestCase" duration-ms="5166" started-at="2018-11-05T06:44:12Z" description="API visibility" finished-at="2018-11-05T06:44:17Z">
        </test-method>
        <test-method status="PASS" signature="copyAndDepricateAPILifeCycleTestCase()" name="copyAndDepricateAPILifeCycleTestCase" duration-ms="6665" started-at="2018-11-05T06:44:17Z" description="API visibility" finished-at="2018-11-05T06:44:24Z">
        </test-method>
        <test-method status="PASS" signature="otherAPILifeCycleStatesTestCase()" name="otherAPILifeCycleStatesTestCase" duration-ms="7443" started-at="2018-11-05T06:44:24Z" description="API visibility" finished-at="2018-11-05T06:44:31Z">
        </test-method>
        <test-method status="PASS" signature="testAPIVisibilityTestCase()" name="testAPIVisibilityTestCase" duration-ms="10906" started-at="2018-11-05T06:44:31Z" description="API visibility" finished-at="2018-11-05T06:44:42Z">
        </test-method>
        <test-method status="PASS" signature="testApplicationsInStoreTestCase()" name="testApplicationsInStoreTestCase" duration-ms="315" started-at="2018-11-05T06:44:42Z" description="API Life cycle application related tests in store" finished-at="2018-11-05T06:44:42Z">
        </test-method>
        <test-method status="PASS" signature="testInvalidLoginAsSubscriberTestCase()" name="testInvalidLoginAsSubscriberTestCase" duration-ms="109" started-at="2018-11-05T06:44:42Z" description="API Life cycle test subscriber login" finished-at="2018-11-05T06:44:42Z">
        </test-method>
        <test-method status="PASS" signature="testInvalidLoginAsTenantSubscriberTestCase()" name="testInvalidLoginAsTenantSubscriberTestCase" duration-ms="508" started-at="2018-11-05T06:44:42Z" description="API Life cycle test subscriber login" finished-at="2018-11-05T06:44:43Z">
        </test-method>
        <test-method status="PASS" signature="testLoginToStoreTestCase()" name="testLoginToStoreTestCase" duration-ms="284" started-at="2018-11-05T06:44:43Z" description="API Life cycle login to store" finished-at="2018-11-05T06:44:43Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="171" started-at="2018-11-05T06:44:43Z" finished-at="2018-11-05T06:44:43Z">
        </test-method>
      </class>
    </test>
    <test name="apim-integration-tests-without-restarts" duration-ms="360813" started-at="2018-11-05T08:11:53Z" finished-at="2018-11-05T08:17:54Z">
      <class name="org.wso2.am.integration.tests.other.APIM4312NPEAfterRequestTimeoutTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="1544" started-at="2018-11-05T08:15:08Z" finished-at="2018-11-05T08:15:10Z">
        </test-method>
        <test-method status="PASS" signature="nullPointerAfterTimeoutTest()" name="nullPointerAfterTimeoutTest" duration-ms="80098" started-at="2018-11-05T08:15:10Z" description="Test for NPE after timeout" finished-at="2018-11-05T08:16:30Z">
          <exception class="org.apache.http.NoHttpResponseException">
            <message>
              <![CDATA[The target server failed to respond]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.apache.http.NoHttpResponseException: The target server failed to respond
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:143)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:260)
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:283)
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:251)
	at org.apache.http.impl.conn.ManagedClientConnectionImpl.receiveResponseHeader(ManagedClientConnectionImpl.java:197)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:271)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:123)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:682)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:863)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:106)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:57)
	at org.wso2.am.integration.tests.other.APIM4312NPEAfterRequestTimeoutTestCase.nullPointerAfterTimeoutTest(APIM4312NPEAfterRequestTimeoutTestCase.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="444" started-at="2018-11-05T08:16:30Z" finished-at="2018-11-05T08:16:30Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="1467" started-at="2018-11-05T08:16:30Z" finished-at="2018-11-05T08:16:32Z">
        </test-method>
        <test-method status="PASS" signature="nullPointerAfterTimeoutTest()" name="nullPointerAfterTimeoutTest" duration-ms="80082" started-at="2018-11-05T08:16:32Z" description="Test for NPE after timeout" finished-at="2018-11-05T08:17:52Z">
          <exception class="org.apache.http.NoHttpResponseException">
            <message>
              <![CDATA[The target server failed to respond]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.apache.http.NoHttpResponseException: The target server failed to respond
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:143)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:260)
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:283)
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:251)
	at org.apache.http.impl.conn.ManagedClientConnectionImpl.receiveResponseHeader(ManagedClientConnectionImpl.java:197)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:271)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:123)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:682)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:863)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:106)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:57)
	at org.wso2.am.integration.tests.other.APIM4312NPEAfterRequestTimeoutTestCase.nullPointerAfterTimeoutTest(APIM4312NPEAfterRequestTimeoutTestCase.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="200" started-at="2018-11-05T08:17:52Z" finished-at="2018-11-05T08:17:52Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.TokenEncryptionScopeTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="430" started-at="2018-11-05T08:14:49Z" finished-at="2018-11-05T08:14:50Z">
        </test-method>
        <test-method status="PASS" signature="testTokenEncryptionWithScopes()" name="testTokenEncryptionWithScopes" duration-ms="7282" started-at="2018-11-05T08:14:50Z" description="Check if Scopes work fine with token encryption enabled." finished-at="2018-11-05T08:14:57Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="4553" started-at="2018-11-05T08:14:57Z" finished-at="2018-11-05T08:15:01Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.json.ESBJAVA3380TestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="1501" started-at="2018-11-05T08:14:43Z" finished-at="2018-11-05T08:14:44Z">
        </test-method>
        <test-method status="PASS" signature="jsonToXmlTestCase()" name="jsonToXmlTestCase" duration-ms="90" started-at="2018-11-05T08:14:44Z" description="Json to XML Test other" finished-at="2018-11-05T08:14:44Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="538" started-at="2018-11-05T08:14:44Z" finished-at="2018-11-05T08:14:45Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="3282" started-at="2018-11-05T08:14:45Z" finished-at="2018-11-05T08:14:48Z">
        </test-method>
        <test-method status="PASS" signature="jsonToXmlTestCase()" name="jsonToXmlTestCase" duration-ms="31" started-at="2018-11-05T08:14:48Z" description="Json to XML Test other" finished-at="2018-11-05T08:14:48Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="922" started-at="2018-11-05T08:14:48Z" finished-at="2018-11-05T08:14:49Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.GIT2231HeadRequestNPEErrorTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="1333" started-at="2018-11-05T08:17:52Z" finished-at="2018-11-05T08:17:54Z">
        </test-method>
        <test-method status="PASS" signature="testAPIWithLocationHeader()" name="testAPIWithLocationHeader" duration-ms="34" started-at="2018-11-05T08:17:54Z" description="Check whether the Location header is correct" finished-at="2018-11-05T08:17:54Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="283" started-at="2018-11-05T08:17:54Z" finished-at="2018-11-05T08:17:54Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.NotificationTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="328" started-at="2018-11-05T08:14:29Z" finished-at="2018-11-05T08:14:29Z">
        </test-method>
        <test-method status="PASS" signature="notificationTestCase()" name="notificationTestCase" duration-ms="10210" started-at="2018-11-05T08:14:29Z" description="Testing Notification Feature" finished-at="2018-11-05T08:14:40Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="3254" started-at="2018-11-05T08:14:40Z" finished-at="2018-11-05T08:14:43Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.APIStateChangeWorkflowTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="13131" started-at="2018-11-05T08:13:59Z" finished-at="2018-11-05T08:14:12Z">
        </test-method>
        <test-method status="PASS" signature="testAPIStateChangeAndApproveWorkflow()" name="testAPIStateChangeAndApproveWorkflow" duration-ms="12595" started-at="2018-11-05T08:14:12Z" description="Test api state change approval process" finished-at="2018-11-05T08:14:25Z">
        </test-method>
        <test-method status="PASS" signature="testAPIStateChangeAndRejectWorkflow()" name="testAPIStateChangeAndRejectWorkflow" duration-ms="1305" started-at="2018-11-05T08:14:25Z" description="check API state change reject process" depends-on-methods="org.wso2.am.integration.tests.other.APIStateChangeWorkflowTestCase.testAPIStateChangeAndApproveWorkflow" finished-at="2018-11-05T08:14:26Z">
        </test-method>
        <test-method status="PASS" signature="testWorkflowCallbackRestAPI()" name="testWorkflowCallbackRestAPI" duration-ms="304" started-at="2018-11-05T08:14:26Z" description="check rest api for workflow statue change" depends-on-methods="org.wso2.am.integration.tests.other.APIStateChangeWorkflowTestCase.testAPIStateChangeAndRejectWorkflow" finished-at="2018-11-05T08:14:27Z">
        </test-method>
        <test-method status="PASS" signature="cleanUpArtifacts()" name="cleanUpArtifacts" is-config="true" duration-ms="2373" started-at="2018-11-05T08:14:27Z" finished-at="2018-11-05T08:14:29Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.APIMANAGER5843WSDLHostnameTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="661" started-at="2018-11-05T08:15:01Z" finished-at="2018-11-05T08:15:02Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreationWithWSDL()" name="testAPICreationWithWSDL" duration-ms="2569" started-at="2018-11-05T08:15:02Z" description="API creation with wsdl" finished-at="2018-11-05T08:15:05Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="711" started-at="2018-11-05T08:15:05Z" finished-at="2018-11-05T08:15:05Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="728" started-at="2018-11-05T08:15:05Z" finished-at="2018-11-05T08:15:06Z">
        </test-method>
        <test-method status="PASS" signature="testAPICreationWithWSDL()" name="testAPICreationWithWSDL" duration-ms="1382" started-at="2018-11-05T08:15:06Z" description="API creation with wsdl" finished-at="2018-11-05T08:15:08Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="868" started-at="2018-11-05T08:15:08Z" finished-at="2018-11-05T08:15:08Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.other.AdvancedConfigDeploymentConfig">
        <test-method status="PASS" signature="startServerWithMultipleConfigs()" name="startServerWithMultipleConfigs" is-config="true" duration-ms="126148" started-at="2018-11-05T08:11:53Z" finished-at="2018-11-05T08:13:59Z">
        </test-method>
        <test-method status="PASS" signature="restoreConfigs()" name="restoreConfigs" is-config="true" duration-ms="120" started-at="2018-11-05T08:17:54Z" finished-at="2018-11-05T08:17:54Z">
        </test-method>
      </class>
    </test>
  </suite>
  <suite name="apim-automation-tests-suite-1" duration-ms="49393" started-at="2018-11-05T06:41:22Z" finished-at="2018-11-05T06:42:12Z">
    <groups>
      <group name="wso2.all">
        <method signature="org.wso2.am.integration.tests.server.mgt.APIMgtServerStartupTestCase.testVerifyLogs()" name="testVerifyLogs" class="org.wso2.am.integration.tests.server.mgt.APIMgtServerStartupTestCase"/>
        <method signature="org.wso2.am.integration.tests.server.mgt.OSGIServerBundleStatusTestCase.testOSGIUnsatisfiedComponents()" name="testOSGIUnsatisfiedComponents" class="org.wso2.am.integration.tests.server.mgt.OSGIServerBundleStatusTestCase"/>
      </group>
      <group name="wso2.am">
        <method signature="org.wso2.am.integration.tests.login.LoginValidationTestCase.testInvalidLoginAsPublisherTestCase()" name="testInvalidLoginAsPublisherTestCase" class="org.wso2.am.integration.tests.login.LoginValidationTestCase"/>
        <method signature="org.wso2.am.integration.tests.login.LoginValidationTestCase.testInvalidLoginAsSubscriberTestCase()" name="testInvalidLoginAsSubscriberTestCase" class="org.wso2.am.integration.tests.login.LoginValidationTestCase"/>
        <method signature="org.wso2.am.integration.tests.login.LoginValidationTestCase.testLoginToStoreTestCase()" name="testLoginToStoreTestCase" class="org.wso2.am.integration.tests.login.LoginValidationTestCase"/>
      </group>
    </groups>
    <test name="apim-startup-tests" duration-ms="20945" started-at="2018-11-05T06:41:51Z" finished-at="2018-11-05T06:42:12Z">
      <class name="org.wso2.am.integration.tests.server.mgt.APIMgtServerStartupTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="127" started-at="2018-11-05T06:41:22Z" finished-at="2018-11-05T06:41:22Z">
        </test-method>
        <test-method status="PASS" signature="testVerifyLogs()" name="testVerifyLogs" duration-ms="2845" started-at="2018-11-05T06:41:51Z" description="verify server startup errors" finished-at="2018-11-05T06:41:54Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.server.mgt.OSGIServerBundleStatusTestCase">
        <test-method status="PASS" signature="testOSGIUnsatisfiedComponents()" name="testOSGIUnsatisfiedComponents" duration-ms="10169" started-at="2018-11-05T06:41:54Z" description="Identifying and storing unsatisfied OSGI components" finished-at="2018-11-05T06:42:04Z">
        </test-method>
        <test-method status="PASS" signature="disconnectFromOSGiConsole()" name="disconnectFromOSGiConsole" is-config="true" duration-ms="1" started-at="2018-11-05T06:42:04Z" finished-at="2018-11-05T06:42:04Z">
        </test-method>
      </class>
      <class name="org.wso2.am.integration.tests.login.LoginValidationTestCase">
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="660" started-at="2018-11-05T06:42:04Z" finished-at="2018-11-05T06:42:04Z">
        </test-method>
        <test-method status="PASS" signature="testInvalidLoginAsPublisherTestCase()" name="testInvalidLoginAsPublisherTestCase" duration-ms="760" started-at="2018-11-05T06:42:04Z" description="Login as invalid user to publisher" finished-at="2018-11-05T06:42:05Z">
        </test-method>
        <test-method status="PASS" signature="setEnvironment()" name="setEnvironment" is-config="true" duration-ms="454" started-at="2018-11-05T06:42:05Z" finished-at="2018-11-05T06:42:06Z">
        </test-method>
        <test-method status="PASS" signature="testInvalidLoginAsPublisherTestCase()" name="testInvalidLoginAsPublisherTestCase" duration-ms="92" started-at="2018-11-05T06:42:06Z" description="Login as invalid user to publisher" finished-at="2018-11-05T06:42:06Z">
        </test-method>
        <test-method status="PASS" signature="testInvalidLoginAsSubscriberTestCase()" name="testInvalidLoginAsSubscriberTestCase" duration-ms="433" started-at="2018-11-05T06:42:06Z" description="Login to publisher as subscriber user" finished-at="2018-11-05T06:42:06Z">
        </test-method>
        <test-method status="PASS" signature="testInvalidLoginAsSubscriberTestCase()" name="testInvalidLoginAsSubscriberTestCase" duration-ms="242" started-at="2018-11-05T06:42:06Z" description="Login to publisher as subscriber user" finished-at="2018-11-05T06:42:06Z">
        </test-method>
        <test-method status="PASS" signature="testLoginToStoreTestCase()" name="testLoginToStoreTestCase" duration-ms="1846" started-at="2018-11-05T06:42:06Z" description="Login to API store test scenario" finished-at="2018-11-05T06:42:08Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="1342" started-at="2018-11-05T06:42:08Z" finished-at="2018-11-05T06:42:10Z">
        </test-method>
        <test-method status="PASS" signature="testLoginToStoreTestCase()" name="testLoginToStoreTestCase" duration-ms="1407" started-at="2018-11-05T06:42:10Z" description="Login to API store test scenario" finished-at="2018-11-05T06:42:11Z">
        </test-method>
        <test-method status="PASS" signature="destroy()" name="destroy" is-config="true" duration-ms="679" started-at="2018-11-05T06:42:11Z" finished-at="2018-11-05T06:42:12Z">
        </test-method>
      </class>
    </test>
    <test name="apim-common-tests" duration-ms="28414" started-at="2018-11-05T06:41:22Z" finished-at="2018-11-05T06:41:51Z">
      <class name="org.wso2.am.integration.tests.api.lifecycle.APIManagerConfigurationChangeTest">
        <test-method status="PASS" signature="startDeployingWebAPPs()" name="startDeployingWebAPPs" is-config="true" duration-ms="27743" started-at="2018-11-05T06:41:22Z" finished-at="2018-11-05T06:41:50Z">
        </test-method>
        <test-method status="PASS" signature="unDeployWebApps()" name="unDeployWebApps" is-config="true" duration-ms="666" started-at="2018-11-05T06:41:50Z" finished-at="2018-11-05T06:41:51Z">
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>
